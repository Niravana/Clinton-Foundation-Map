{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,PCFET0NUWVBFIGh0bWw+CjxoZWFkPiAgICAKICAgIDxtZXRhIGh0dHAtZXF1aXY9ImNvbnRlbnQtdHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04IiAvPgogICAgPHNjcmlwdD5MX1BSRUZFUl9DQU5WQVM9ZmFsc2U7IExfTk9fVE9VQ0g9ZmFsc2U7IExfRElTQUJMRV8zRD1mYWxzZTs8L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2xlYWZsZXRAMS40LjAvZGlzdC9sZWFmbGV0LmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2FqYXguZ29vZ2xlYXBpcy5jb20vYWpheC9saWJzL2pxdWVyeS8xLjExLjEvanF1ZXJ5Lm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvMy4yLjAvanMvYm9vdHN0cmFwLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvTGVhZmxldC5hd2Vzb21lLW1hcmtlcnMvMi4wLjIvbGVhZmxldC5hd2Vzb21lLW1hcmtlcnMuanMiPjwvc2NyaXB0PgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2xlYWZsZXRAMS40LjAvZGlzdC9sZWFmbGV0LmNzcyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL21heGNkbi5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC8zLjIuMC9jc3MvYm9vdHN0cmFwLm1pbi5jc3MiLz4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvMy4yLjAvY3NzL2Jvb3RzdHJhcC10aGVtZS5taW4uY3NzIi8+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vbWF4Y2RuLmJvb3RzdHJhcGNkbi5jb20vZm9udC1hd2Vzb21lLzQuNi4zL2Nzcy9mb250LWF3ZXNvbWUubWluLmNzcyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9MZWFmbGV0LmF3ZXNvbWUtbWFya2Vycy8yLjAuMi9sZWFmbGV0LmF3ZXNvbWUtbWFya2Vycy5jc3MiLz4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9yYXdjZG4uZ2l0aGFjay5jb20vcHl0aG9uLXZpc3VhbGl6YXRpb24vZm9saXVtL21hc3Rlci9mb2xpdW0vdGVtcGxhdGVzL2xlYWZsZXQuYXdlc29tZS5yb3RhdGUuY3NzIi8+CiAgICA8c3R5bGU+aHRtbCwgYm9keSB7d2lkdGg6IDEwMCU7aGVpZ2h0OiAxMDAlO21hcmdpbjogMDtwYWRkaW5nOiAwO308L3N0eWxlPgogICAgPHN0eWxlPiNtYXAge3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2JvdHRvbTowO3JpZ2h0OjA7bGVmdDowO308L3N0eWxlPgogICAgCiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLAogICAgICAgIGluaXRpYWwtc2NhbGU9MS4wLCBtYXhpbXVtLXNjYWxlPTEuMCwgdXNlci1zY2FsYWJsZT1ubyIgLz4KICAgIDxzdHlsZT4jbWFwX2Q0Y2QxYjJmOTNjMzQxZDE5ZDY5NzE4NTYwZDg1OTA4IHsKICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgICAgd2lkdGg6IDEwMC4wJTsKICAgICAgICBoZWlnaHQ6IDEwMC4wJTsKICAgICAgICBsZWZ0OiAwLjAlOwogICAgICAgIHRvcDogMC4wJTsKICAgICAgICB9CiAgICA8L3N0eWxlPgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL2xlYWZsZXQubWFya2VyY2x1c3Rlci8xLjEuMC9sZWFmbGV0Lm1hcmtlcmNsdXN0ZXIuanMiPjwvc2NyaXB0PgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9sZWFmbGV0Lm1hcmtlcmNsdXN0ZXIvMS4xLjAvTWFya2VyQ2x1c3Rlci5jc3MiLz4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvbGVhZmxldC5tYXJrZXJjbHVzdGVyLzEuMS4wL01hcmtlckNsdXN0ZXIuRGVmYXVsdC5jc3MiLz4KPC9oZWFkPgo8Ym9keT4gICAgCiAgICAKICAgIDxkaXYgY2xhc3M9ImZvbGl1bS1tYXAiIGlkPSJtYXBfZDRjZDFiMmY5M2MzNDFkMTlkNjk3MTg1NjBkODU5MDgiID48L2Rpdj4KPC9ib2R5Pgo8c2NyaXB0PiAgICAKICAgIAogICAgCiAgICAgICAgdmFyIGJvdW5kcyA9IG51bGw7CiAgICAKCiAgICB2YXIgbWFwX2Q0Y2QxYjJmOTNjMzQxZDE5ZDY5NzE4NTYwZDg1OTA4ID0gTC5tYXAoCiAgICAgICAgJ21hcF9kNGNkMWIyZjkzYzM0MWQxOWQ2OTcxODU2MGQ4NTkwOCcsIHsKICAgICAgICBjZW50ZXI6IFs0MC4wMTUsIC0xMDUuMjcwNV0sCiAgICAgICAgem9vbTogNiwKICAgICAgICBtYXhCb3VuZHM6IGJvdW5kcywKICAgICAgICBsYXllcnM6IFtdLAogICAgICAgIHdvcmxkQ29weUp1bXA6IGZhbHNlLAogICAgICAgIGNyczogTC5DUlMuRVBTRzM4NTcsCiAgICAgICAgem9vbUNvbnRyb2w6IHRydWUsCiAgICAgICAgfSk7CgoKICAgIAogICAgdmFyIHRpbGVfbGF5ZXJfMzE0ZjNkZDcyMzI3NGNhNjg3NDhlMWIxNzg0NDhlOTcgPSBMLnRpbGVMYXllcigKICAgICAgICAnaHR0cHM6Ly97c30udGlsZS5vcGVuc3RyZWV0bWFwLm9yZy97en0ve3h9L3t5fS5wbmcnLAogICAgICAgIHsKICAgICAgICAiYXR0cmlidXRpb24iOiBudWxsLAogICAgICAgICJkZXRlY3RSZXRpbmEiOiBmYWxzZSwKICAgICAgICAibWF4TmF0aXZlWm9vbSI6IDE4LAogICAgICAgICJtYXhab29tIjogMTgsCiAgICAgICAgIm1pblpvb20iOiAwLAogICAgICAgICJub1dyYXAiOiBmYWxzZSwKICAgICAgICAib3BhY2l0eSI6IDEsCiAgICAgICAgInN1YmRvbWFpbnMiOiAiYWJjIiwKICAgICAgICAidG1zIjogZmFsc2UKfSkuYWRkVG8obWFwX2Q0Y2QxYjJmOTNjMzQxZDE5ZDY5NzE4NTYwZDg1OTA4KTsKICAgIAogICAgICAgICAgICB2YXIgbWFya2VyX2NsdXN0ZXJfNDdkNDQ3NmQyZGE5NDhmNzkwOWNhODdmOTU2ZjgxOWMgPSBMLm1hcmtlckNsdXN0ZXJHcm91cCh7fSk7CiAgICAgICAgICAgIG1hcF9kNGNkMWIyZjkzYzM0MWQxOWQ2OTcxODU2MGQ4NTkwOC5hZGRMYXllcihtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgdmFyIG1hcmtlcl82MDUyMzZhYmU4NGM0ODM4YWVjNDVhYTc5MTVhZjc5MCA9IEwubWFya2VyKAogICAgICAgICAgICBbNDAuNzEyNzc2LCAtNzQuMDA1OTc0XSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWNvbjogbmV3IEwuSWNvbi5EZWZhdWx0KCksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkuYWRkVG8obWFya2VyX2NsdXN0ZXJfNDdkNDQ3NmQyZGE5NDhmNzkwOWNhODdmOTU2ZjgxOWMpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF8zNTFjMDNiNGMyNTg0NjhjYWRlZGJkZGI2NjZmNDZlYSA9IEwucG9wdXAoe21heFdpZHRoOiAnMjY1MCcKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaV9mcmFtZV8zZmU2ZDc2ZDJlM2Y0NGRjYjM3YWRiOTI0ODhlMjQwOCA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBOGFERStRM0psWVhScGJtY2dSV052Ym05dGFXTWdUM0J3YjNKMGRXNXBkSGs4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtORFNUd3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNUpiWEJ5YjNacGJtY2daMlZ1WkdWeUlHbHVZMngxYzJsdmJpQnBiaUJqYkdWaGJpQmxibVZ5WjNrOEwySStQQzl3UGp4d1BpQkRRMGtnWVc1dWIzVnVZMlZrSUdFZ2JtVjNJSEJoY25SdVpYSnphR2x3SUdGMElIUm9aU0JWYm1sMFpXUWdUbUYwYVc5dTRvQ1pjeUJzWVhKblpYTjBJR0Z1Ym5WaGJDQnpkVzF0YVhRZ2IyNGdZMnhwYldGMFpTQmphR0Z1WjJVZ2RHOGdZV1IyWVc1alpTQjBhR1VnWm5Wc2JDQmhibVFnWlhGMVlXd2djR0Z5ZEdsamFYQmhkR2x2YmlCdlppQjNiMjFsYmlCcGJpQjBhR1VnYzJWamRHOXlJSGRwZEdnZ2FYVGlnSmx6SUZkdmJXVnVJR2x1SUZKbGJtVjNZV0pzWlNCRmJtVnlaM2tnS0ZkSlVrVXBJRTVsZEhkdmNtc3VJRU5vWld4elpXRWdRMnhwYm5SdmJpQmhjSEJzWVhWa1pXUWdkR2hsSUdWbVptOXlkQ3dnYzJGNWFXNW5JQ0xpZ0taM1pTZHlaU0JuY21GMFpXWjFiQ0IwYnlCb1lYWmxJR2hoWkNCMGFHVWdZMmhoYm1ObElIUnZJSE4xY0hCdmNuUWdZVzVrSUdWdGNHOTNaWElnZDI5dFpXNGdhVzRnZEdobElITjFjM1JoYVc1aFlteGxJR1Z1WlhKbmVTQnpaV04wYjNJdTRvQ2RQQzl3UGc9PSIgd2lkdGg9IjUwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjMwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgICAgICBwb3B1cF8zNTFjMDNiNGMyNTg0NjhjYWRlZGJkZGI2NjZmNDZlYS5zZXRDb250ZW50KGlfZnJhbWVfM2ZlNmQ3NmQyZTNmNDRkY2IzN2FkYjkyNDg4ZTI0MDgpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIG1hcmtlcl82MDUyMzZhYmU4NGM0ODM4YWVjNDVhYTc5MTVhZjc5MC5iaW5kUG9wdXAocG9wdXBfMzUxYzAzYjRjMjU4NDY4Y2FkZWRiZGRiNjY2ZjQ2ZWEpCiAgICAgICAgICAgIDsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgdmFyIG1hcmtlcl8wNWNiYzQ4YzVkZGU0OTE4YmI5ZTRlNmY4ZTQ5N2Q2ZCA9IEwubWFya2VyKAogICAgICAgICAgICBbMTguNDY2Mjk5LCAtNjYuMTA1N10sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfODNmOGExZThiMDk5NDEwMDk2Yzk5NjRkMmEyYWM0M2MgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfZjgwOGY4ZmUzOGY1NGRkYjg0ZGIwMWE0MTQ1YTUyMjggPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrUTNKbFlYUnBibWNnUldOdmJtOXRhV01nVDNCd2IzSjBkVzVwZEhrOEwyZ3hQanhpY2o0OGNENDhjM1J5YjI1blBrTkhTVHd2YzNSeWIyNW5Qand2Y0Q0OGNENDhZajVFWld4cGRtVnlhVzVuSUhKbGJHbGxaaUIwYnlCUWRXVnlkRzhnVW1samJ6d3ZZajQ4TDNBK1BIQStJRlJvWlNCRGJHbHVkRzl1SUVadmRXNWtZWFJwYjI0Z2NHRnlkRzVsY21Wa0lIZHBkR2dnZEdobElGTnZiR0Z5SUVadmRXNWtZWFJwYjI0Z1lXNWtJRFEwSUdsdVpIVnpkSEo1SUhCaGNuUnVaWEp6SUhSdklISmxjM1J2Y21VZ1pXeGxZM1J5YVdOcGRIa2dhVzRnVUhWbGNuUnZJRkpwWTI4dUlGUm9aU0J3Y205cVpXTjBMQ0FpVTI5c1lYSWdVMkYyWlhNZ1RHbDJaWE1zSWlCc1lYVnVZMmhsWkNCM2FYUm9JRzF2Y21VZ2RHaGhiaUFrTlNCdGFXeHNhVzl1SUdsdUlHUnZibUYwWldRZ2MyOXNZWElnWlhGMWFYQnRaVzUwSUhSb1lYUWdkMmxzYkNCMGNtRnVjMmwwYVc5dUlITmxjblpwWTJWeklHeHBhMlVnY21WbWNtbG5aWEpoZEdsdmJpQmhibVFnYldWa2FXTmhiQ0JqWVhKbElHWnliMjBnYTJWeWIzTmxibVVnZEc4Z2MyOXNZWEl1UEM5d1BnPT0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfODNmOGExZThiMDk5NDEwMDk2Yzk5NjRkMmEyYWM0M2Muc2V0Q29udGVudChpX2ZyYW1lX2Y4MDhmOGZlMzhmNTRkZGI4NGRiMDFhNDE0NWE1MjI4KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfMDVjYmM0OGM1ZGRlNDkxOGJiOWU0ZTZmOGU0OTdkNmQuYmluZFBvcHVwKHBvcHVwXzgzZjhhMWU4YjA5OTQxMDA5NmM5OTY0ZDJhMmFjNDNjKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfMDI5YWQ1OTYxMzU5NDVlNWJmNDczOTVlMjljYzIxNjIgPSBMLm1hcmtlcigKICAgICAgICAgICAgWy0xMy45OTU3MiwgMzMuNzU5ODE5XSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWNvbjogbmV3IEwuSWNvbi5EZWZhdWx0KCksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkuYWRkVG8obWFya2VyX2NsdXN0ZXJfNDdkNDQ3NmQyZGE5NDhmNzkwOWNhODdmOTU2ZjgxOWMpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF82OGJkZDAxNTUwZTQ0ZTc3YTBiM2UxMDA1OGRiZjQ4MSA9IEwucG9wdXAoe21heFdpZHRoOiAnMjY1MCcKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaV9mcmFtZV9jNWQwOTdjMzY3YmU0YTUxYjAwOGZmZjcwZjczMDlmMSA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBOGFERStRM0psWVhScGJtY2dSV052Ym05dGFXTWdUM0J3YjNKMGRXNXBkSGs4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtORVNUd3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNUlaV3h3YVc1bklHWmhjbTFsY25NZ2FXMXdjbTkyWlNCMGFHVnBjaUJzYVhabGJHbG9iMjlrY3p3dllqNDhMM0ErUEhBK0lFbHVJREl3TVRjc0lFTkVTU0IzYjNKclpXUWdkMmwwYUNCdGIzSmxJSFJvWVc0Z05qSXNNREF3SUdabGJXRnNaU0JtWVhKdFpYSnpJR2x1SUUxaGJHRjNhU3dnY0hKdmRtbGthVzVuSUhSb1pXMGdkMmwwYUNCMGFHVWdkSEpoYVc1cGJtY2dZVzVrSUhCeWIyUjFZM1J6SUhSb1pYa2dibVZsWkdWa0lIUnZJR2x1WTNKbFlYTmxJSFJvWldseUlIbHBaV3hrY3lCaGJtUWdhVzF3Y205MlpTQjBhR1ZwY2lCc2FYWmxiR2xvYjI5a2N5NGdQQzl3UGc9PSIgd2lkdGg9IjUwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjMwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgICAgICBwb3B1cF82OGJkZDAxNTUwZTQ0ZTc3YTBiM2UxMDA1OGRiZjQ4MS5zZXRDb250ZW50KGlfZnJhbWVfYzVkMDk3YzM2N2JlNGE1MWIwMDhmZmY3MGY3MzA5ZjEpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIG1hcmtlcl8wMjlhZDU5NjEzNTk0NWU1YmY0NzM5NWUyOWNjMjE2Mi5iaW5kUG9wdXAocG9wdXBfNjhiZGQwMTU1MGU0NGU3N2EwYjNlMTAwNThkYmY0ODEpCiAgICAgICAgICAgIDsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgdmFyIG1hcmtlcl84NDNiOWI0ZGJmMWY0MjkyOTFkNGExZGIyNmQyODc0OSA9IEwubWFya2VyKAogICAgICAgICAgICBbLTEuOTcwNTc5LCAzMC4xMDQ0MjldLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzcyMWNiMDU4YTU2MjQzMTI5NzUxZTMwZjVkMDYwOGNmID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lXzJlY2FhNjVjYjU4ZDQwNzNiNTc0YmNhMzUwOGE0ZjVlID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1EzSmxZWFJwYm1jZ1JXTnZibTl0YVdNZ1QzQndiM0owZFc1cGRIazhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa05FU1R3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1SVpXeHdhVzVuSUdaaGNtMWxjbk1nYVcxd2NtOTJaU0IwYUdWcGNpQnNhWFpsYkdsb2IyOWtjend2WWo0OEwzQStQSEErSUVsdUlESXdNVGNnYVc0Z1VuZGhibVJoTENCRFJFa2diV0ZwYm5SaGFXNWxaQ0F4TlRBZ1pHVnRieUJ3Ykc5MGN5d2dkMmhwWTJnZ2MyVnlkbVVnWVhNZ1lTQjBjbUZwYm1sdVp5QmpaVzUwWlhJZ1lXNWtJR0Z6SUdGdUlHVjRZVzF3YkdVZ2IyWWdkR2hsSUhscFpXeGtjeUJoWTJocFpYWmxaQ0IwYUhKdmRXZG9JR2x0Y0hKdmRtVmtJR05zYVcxaGRHVXRjMjFoY25RZ1lXZHliMjV2YldsaklIQnlZV04wYVdObGN5NGdQQzl3UGc9PSIgd2lkdGg9IjUwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjMwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgICAgICBwb3B1cF83MjFjYjA1OGE1NjI0MzEyOTc1MWUzMGY1ZDA2MDhjZi5zZXRDb250ZW50KGlfZnJhbWVfMmVjYWE2NWNiNThkNDA3M2I1NzRiY2EzNTA4YTRmNWUpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIG1hcmtlcl84NDNiOWI0ZGJmMWY0MjkyOTFkNGExZGIyNmQyODc0OS5iaW5kUG9wdXAocG9wdXBfNzIxY2IwNThhNTYyNDMxMjk3NTFlMzBmNWQwNjA4Y2YpCiAgICAgICAgICAgIDsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgdmFyIG1hcmtlcl8zZDVjOTQyOWM2Yjc0N2ZhODRlMDg0MTE0M2MyZDAwMSA9IEwubWFya2VyKAogICAgICAgICAgICBbLTcuNzY4MDU5LCAzNS42ODYwNzNdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzBlZWY3ZGZmMTEwNDRlNWRiOTM5ODEyNGE0MWNiZTdmID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lX2ZmZGYxMzI0NjIwYjQxNjU5MThjYzgwZjY5ZTg2MTAzID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1EzSmxZWFJwYm1jZ1JXTnZibTl0YVdNZ1QzQndiM0owZFc1cGRIazhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa05FU1R3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1SVpXeHdhVzVuSUdaaGNtMWxjbk1nYVcxd2NtOTJaU0IwYUdWcGNpQnNhWFpsYkdsb2IyOWtjend2WWo0OEwzQStQSEErSUVORVNTQm9aV3h3WldRZ1ptRnliV1Z5Y3lCcGJpQlVZVzU2WVc1cFlTQm9ZWEoyWlhOMElEWTFMREF3TUNCaFkzSmxjeUJ2WmlCdFlXbDZaU0JoYm1RZ01URXNNREF3SUdGamNtVnpJRzltSUhOdmVXRXVJRU5FU1NCb1pXeHdaV1FnWm1GeWJXVnljeUJwYmlCemFYZ2dkbWxzYkdGblpYTWdjMlZzYkNCMGFHVnBjaUJqY205d2N5QmhkQ0JtWVdseUlIQnlhV05sY3k0Z0lEd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzBlZWY3ZGZmMTEwNDRlNWRiOTM5ODEyNGE0MWNiZTdmLnNldENvbnRlbnQoaV9mcmFtZV9mZmRmMTMyNDYyMGI0MTY1OTE4Y2M4MGY2OWU4NjEwMyk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyXzNkNWM5NDI5YzZiNzQ3ZmE4NGUwODQxMTQzYzJkMDAxLmJpbmRQb3B1cChwb3B1cF8wZWVmN2RmZjExMDQ0ZTVkYjkzOTgxMjRhNDFjYmU3ZikKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyX2JmYWI5Mzc0M2Y4YzQyM2E4OGQwMWRkYmU0ZmU4ZWMxID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFstNDEuODU2NzUsIDE0Ni41ODU3M10sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfYjM5ZDMxZWJhN2VjNGFhZGE4M2JmNjAxYjM1MGM1ODAgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfM2UzZDdmNGRjYmE5NGVhMWE1MGFiMzY0YWViYTNiMzcgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrUTNKbFlYUnBibWNnUldOdmJtOXRhV01nVDNCd2IzSjBkVzVwZEhrOEwyZ3hQanhpY2o0OGNENDhjM1J5YjI1blBrTkhSVkE4TDNOMGNtOXVaejQ4TDNBK1BIQStQR0krVkhKaGFXNXBibWNnWlc1MGNtVndjbVZ1WlhWeWN5QjBieUJoWkdSeVpYTnpJR2RzYjJKaGJDQndiM1psY25SNVBDOWlQand2Y0Q0OGNENGdRMGRGVU9LQW1YTWdjM1Z3Y0d4NUlHTm9ZV2x1SUdWdWRHVnljSEpwYzJVZ2FXNGdTR0ZwZEdrc0lFRmpZMlZ6YnlCSVlXbDBhU3dnWlhod1lXNWtaV1FnWW1WNWIyNWtJSGR2Y210cGJtY2dkMmwwYUNCd1pXRnVkWFJ6SUhSdklHbHVZMngxWkdVZ1kzSnZjSE1nYzNWamFDQmhjeUJqWVhOMGIzSXNJRzFoYm1kdkxDQnphWE5oYkN3Z1lXNWtJRzF2Y21sdVoyRWdZVzVrSUdseklHeGxkbVZ5WVdkcGJtY2dhWFJ6SUdGbmNtbGpkV3gwZFhKaGJDQmxlSEJsY25ScGMyVWdkRzhnYVcxd1lXTjBJR0ZrWkdsMGFXOXVZV3dnWm1GeWJXVnljeUJwYmlCSVlXbDBhUzRnSUZSdklHUmhkR1VzSUVOSFJWQWdjSEp2ZG1sa1pXUWdkSEpoYVc1cGJtY2dkRzhnYjNabGNpQXpMRFF3TUNCbVlYSnRaWEp6SUhSdklHaGxiSEFnZEdobGJTQnBiWEJ5YjNabElIUm9aV2x5SUhscFpXeGtjeUJoYm1RZ2RXeDBhVzFoZEdWc2VTQjBhR1ZwY2lCc2FYWmxiR2xvYjI5a2N5NDhMM0ErIiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2IzOWQzMWViYTdlYzRhYWRhODNiZjYwMWIzNTBjNTgwLnNldENvbnRlbnQoaV9mcmFtZV8zZTNkN2Y0ZGNiYTk0ZWExYTUwYWIzNjRhZWJhM2IzNyk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyX2JmYWI5Mzc0M2Y4YzQyM2E4OGQwMWRkYmU0ZmU4ZWMxLmJpbmRQb3B1cChwb3B1cF9iMzlkMzFlYmE3ZWM0YWFkYTgzYmY2MDFiMzUwYzU4MCkKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyX2U4YTYxODQwNTM4NDQ1ODlhZjRhZGZlMWYxOGM4MWQ5ID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFsxMC4zOTEwNDksIC03NS40Nzk0MjRdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzk4ZTkwYTc2MmM2MDQ5MDk5MjUxNWFiNWU0NjczNTg2ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lXzcxMGQ1ODhiNDVjZDQ4MmM4ZWY0MTgxNzBlMjBiY2E5ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1EzSmxZWFJwYm1jZ1JXTnZibTl0YVdNZ1QzQndiM0owZFc1cGRIazhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa05IUlZBOEwzTjBjbTl1Wno0OEwzQStQSEErUEdJK1ZISmhhVzVwYm1jZ1pXNTBjbVZ3Y21WdVpYVnljeUIwYnlCaFpHUnlaWE56SUdkc2IySmhiQ0J3YjNabGNuUjVQQzlpUGp3dmNENDhjRDRnVkc4Z1pHRjBaU3dnYlc5eVpTQjBhR0Z1SURFc01UQXdJSE4wZFdSbGJuUnpJR2hoZG1VZ1ozSmhaSFZoZEdWa0lHWnliMjBnZEdobElFRmpZMlZ6YnlCVWNtRnBibWx1WnlCRFpXNTBaWElnYVc0Z1EyOXNiMjFpYVdFZ1oyRnBibWx1WnlCaFkyTmxjM01nZEc4Z2NYVmhiR2wwZVNCMmIyTmhkR2x2Ym1Gc0lIUnlZV2x1YVc1bkxDQnBiblJsY201emFHbHdjeXdnWVc1a0lHeHZibWN0ZEdWeWJTQnFiMkp6SUhkcGRHaHBiaUJvYVdkb0xXZHliM2QwYUNCcGJtUjFjM1J5YVdWekxqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzk4ZTkwYTc2MmM2MDQ5MDk5MjUxNWFiNWU0NjczNTg2LnNldENvbnRlbnQoaV9mcmFtZV83MTBkNTg4YjQ1Y2Q0ODJjOGVmNDE4MTcwZTIwYmNhOSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyX2U4YTYxODQwNTM4NDQ1ODlhZjRhZGZlMWYxOGM4MWQ5LmJpbmRQb3B1cChwb3B1cF85OGU5MGE3NjJjNjA0OTA5OTI1MTVhYjVlNDY3MzU4NikKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyXzg0OWRiMjQyM2Y4MDRlMGJhNTAyZjViYjM3MmRmZmYwID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFstMTAuNDY2NjY0OCwgMTIzLjM4MzMzMThdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzI0ODUyZGQyNDcwODQ4YmVhZGFmNDhiN2ZkNjBmNGMyID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lX2Y5ZjdkNDZjNWRhYTRmZjE4NmU2NzhmYzk4NWU1YmY0ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1EzSmxZWFJwYm1jZ1JXTnZibTl0YVdNZ1QzQndiM0owZFc1cGRIazhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa05IUlZBOEwzTjBjbTl1Wno0OEwzQStQSEErUEdJK1ZISmhhVzVwYm1jZ1pXNTBjbVZ3Y21WdVpYVnljeUIwYnlCaFpHUnlaWE56SUdkc2IySmhiQ0J3YjNabGNuUjVQQzlpUGp3dmNENDhjRDRnU1c0Z01qQXhOeXdnUTBkRlVDQmpiMjV6ZEhKMVkzUmxaQ0IwZDI4Z1kyOXRiWFZ1YVhSNUlHdHBkR05vWlc1ekxDQjNhR2xqYUNCaGNtVWdjR3hoWTJWeklIZG9aWEpsSUhSb1pTQmpiMjlyY3l3Z2RYTjFZV3hzZVNCMGFHVWdkMmwyWlhNZ2IyWWdkR2hsSUdOdlkyOXVkWFFnZEhKbFpTQmpiR2x0WW1WeWN5d2djSEp2WTJWemN5QjBhR1VnWTI5c2JHVmpkR1ZrSUhOaGNDQmpiMnhzWldOMFpXUWdabkp2YlNCMGFHVWdkSEpsWlhNdVBDOXdQZz09IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzI0ODUyZGQyNDcwODQ4YmVhZGFmNDhiN2ZkNjBmNGMyLnNldENvbnRlbnQoaV9mcmFtZV9mOWY3ZDQ2YzVkYWE0ZmYxODZlNjc4ZmM5ODVlNWJmNCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyXzg0OWRiMjQyM2Y4MDRlMGJhNTAyZjViYjM3MmRmZmYwLmJpbmRQb3B1cChwb3B1cF8yNDg1MmRkMjQ3MDg0OGJlYWRhZjQ4YjdmZDYwZjRjMikKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyXzkwNTE1ZWRjMDk3ZTQwOWU5ZTdkODg5YzZhNWEzOGI0ID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFsxMy42ODkzNSwgLTg5LjE4NzE4XSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWNvbjogbmV3IEwuSWNvbi5EZWZhdWx0KCksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkuYWRkVG8obWFya2VyX2NsdXN0ZXJfNDdkNDQ3NmQyZGE5NDhmNzkwOWNhODdmOTU2ZjgxOWMpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9jNjlmM2NkMDk1YmE0NWRiYjFmYjJhYjUwZWFkZDcyYSA9IEwucG9wdXAoe21heFdpZHRoOiAnMjY1MCcKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaV9mcmFtZV9kN2IxYzE1ZDdjOGM0YTdlODg1YzYwZTc1ZjhlMjdjOCA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBOGFERStRM0psWVhScGJtY2dSV052Ym05dGFXTWdUM0J3YjNKMGRXNXBkSGs4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtOSFJWQThMM04wY205dVp6NDhMM0ErUEhBK1BHSStWSEpoYVc1cGJtY2daVzUwY21Wd2NtVnVaWFZ5Y3lCMGJ5QmhaR1J5WlhOeklHZHNiMkpoYkNCd2IzWmxjblI1UEM5aVBqd3ZjRDQ4Y0Q0Z1EwZEZVT0tBbVhNZ2MzVndjR3g1SUdOb1lXbHVJR1Z1ZEdWeWNISnBjMlVnYVc0Z1JXd2dVMkZzZG1Ga2IzSXNJRUZqWTJWemJ5QkZiQ0JUWVd4MllXUnZjaXdnYW05cGJtVmtJRUoxYzJsdVpYTnpJRU5oYkd3Z2RHOGdRV04wYVc5dUxDQjNhR2xqYUNCb1pXeHdjeUIwYnlCaFkyTmxiR1Z5WVhSbElIQnliMmR5WlhOeklIUnZkMkZ5WkNCMGFHVWdVM1Z6ZEdGcGJtRmliR1VnUkdWMlpXeHZjRzFsYm5RZ1IyOWhiSE1nZEdoeWIzVm5hQ0JwYm1Oc2RYTnBkbVVnWW5WemFXNWxjM01nYlc5a1pXeHpMaUJCY3lCdlppQkVaV05sYldKbGNpQXlNREUzTENCRFIwVlFJR2x6SUhkdmNtdHBibWNnZDJsMGFDQTRNRGtnYzIxaGJHeG9iMnhrWlhJZ2NISnZaSFZqWlhKeklHbHVJRVZzSUZOaGJIWmhaRzl5TGlBOEwzQSsiIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfYzY5ZjNjZDA5NWJhNDVkYmIxZmIyYWI1MGVhZGQ3MmEuc2V0Q29udGVudChpX2ZyYW1lX2Q3YjFjMTVkN2M4YzRhN2U4ODVjNjBlNzVmOGUyN2M4KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfOTA1MTVlZGMwOTdlNDA5ZTllN2Q4ODljNmE1YTM4YjQuYmluZFBvcHVwKHBvcHVwX2M2OWYzY2QwOTViYTQ1ZGJiMWZiMmFiNTBlYWRkNzJhKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfMzFkZTM3NWM4MjcxNDJjMTk0MDI5NTJjNGQ0ODRhNzUgPSBMLm1hcmtlcigKICAgICAgICAgICAgWy00LjYxNjY3LCA1NS40NV0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfNjhjNWRjYmVmY2E4NGFmN2FkMDg5Y2JjOWFjMmY1MWQgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfOGM0OWEzOTAyMTRkNDU2MDhkMTBlZGVkNDYxYWI2MjcgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrUTNKbFlYUnBibWNnUldOdmJtOXRhV01nVDNCd2IzSjBkVzVwZEhrOEwyZ3hQanhpY2o0OGNENDhjM1J5YjI1blBrTkRTVHd2YzNSeWIyNW5Qand2Y0Q0OGNENDhZajVUZFhCd2IzSjBhVzVuSUdsemJHRnVaSE1nYjI0Z2RHaGxJR1p5YjI1MElHeHBibVZ6SUc5bUlHTnNhVzFoZEdVZ1kyaGhibWRsUEM5aVBqd3ZjRDQ4Y0Q0Z1NXNGdNakF4Tnl3Z1EwTkpJR0Z1WkNCcGRITWdjR0Z5ZEc1bGNpd2dWR2hoYVNCVmJtbHZiaXdnWm05eWJXRnNiSGtnWVc1dWIzVnVZMlZrSUdOdmJuTjBjblZqZEdsdmJpQnZaaUJoSUdKcGIyZGhjeUJoYm1RZ2QyRnpkR1YzWVhSbGNpQndjbTlxWldOMElHRjBJRlJvWVdrZ1ZXNXBiMjRuY3lCSmJtUnBZVzRnVDJObFlXNGdWSFZ1WVNBb1NVOVVLU0JtWVdOMGIzSjVJR2x1SUZObGVXTm9aV3hzWlhNdUlGUm9aU0JtWVdOMGIzSjVJR2x6SUdWemMyVnVkR2xoYkNCMGJ5QjBhR1VnYm1GMGFXOXU0b0NaY3lCbFkyOXViMjE1TENCaWRYUWdZV3h6YnlCMGFHVWdiR0Z5WjJWemRDQmxiR1ZqZEhKcFkybDBlU0JqYjI1emRXMWxjaXdnY0hKcGJXRnlhV3g1SUdaeWIyMGdaR2xsYzJWc0xXSmhjMlZrSUdWc1pXTjBjbWxqYVhSNUxpQkRRMGtnY0dGeWRHNWxjbVZrSUhkcGRHZ2dWR2hoYVNCVmJtbHZiaUIwYnlCcFpHVnVkR2xtZVNCaGJtUWdhVzF3YkdWdFpXNTBJR0Z1WVdWeWIySnBZeUJrYVdkbGMzUnBiMjRnZEc4Z2NtVmtkV05sSUdWdVpYSm5lU0JqYjNOMGN5QmhibVFnWTJGeVltOXVJR1Z0YVhOemFXOXVjeUIwYUhKdmRXZG9JR2x0Y0hKdmRtbHVaeUIwYUdVZ2NYVmhiR2wwZVNCdlppQjNZWE4wWlhkaGRHVnlJR0Z1WkNCblpXNWxjbUYwYVc1bklHSnBiMmRoY3k0Z1ZHaGxJR0pwYjJkaGN5QnBjeUJwYm5SbGJtUmxaQ0IwYnlCaVpTQjFjMlZrSUhSdklHZGxibVZ5WVhSbElHTnNaV0Z1SUdWc1pXTjBjbWxqYVhSNUxDQnlaV1IxWTJsdVp5QmpiMjV6ZFcxd2RHbHZiaUJ2WmlCa2FXVnpaV3d0WW1GelpXUWdaV3hsWTNSeWFXTnBkSGtnWm5KdmJTQjBhR1VnWjNKcFpDNGdWR2hsSUdKcGIyZGhjeUJ3YkdGdWRDQmhhVzF6SUhSdklHSmxJRzl3WlhKaGRHbHZibUZzSUdKNUlFWmxZbkoxWVhKNUlESXdNVGd1UEM5d1BnPT0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfNjhjNWRjYmVmY2E4NGFmN2FkMDg5Y2JjOWFjMmY1MWQuc2V0Q29udGVudChpX2ZyYW1lXzhjNDlhMzkwMjE0ZDQ1NjA4ZDEwZWRlZDQ2MWFiNjI3KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfMzFkZTM3NWM4MjcxNDJjMTk0MDI5NTJjNGQ0ODRhNzUuYmluZFBvcHVwKHBvcHVwXzY4YzVkY2JlZmNhODRhZjdhZDA4OWNiYzlhYzJmNTFkKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfZDRhYjUyN2YxY2I2NDFhNjg0YTVlODdmM2ZiYjEwYzQgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzE4LjIxODk1LCAtNzguMTMzMl0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfZDFkYzQ2MmYyYjE4NDExODllNGMyNDNlOGY1NTRiNWQgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfODM5ZTU0NDljOWNhNDFjYmE1MmE5ZTc1NmQ1YzllM2QgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrUTNKbFlYUnBibWNnUldOdmJtOXRhV01nVDNCd2IzSjBkVzVwZEhrOEwyZ3hQanhpY2o0OGNENDhjM1J5YjI1blBrTkRTVHd2YzNSeWIyNW5Qand2Y0Q0OGNENDhZajVUZFhCd2IzSjBhVzVuSUdsemJHRnVaSE1nYjI0Z2RHaGxJR1p5YjI1MElHeHBibVZ6SUc5bUlHTnNhVzFoZEdVZ1kyaGhibWRsUEM5aVBqd3ZjRDQ4Y0Q0Z1VtVndjbVZ6Wlc1MFlYUnBkbVZ6SUdaeWIyMGdRME5KTENCRmFXZG9kQ0JTYVhabGNuTWdSVzVsY21kNUlFTnZiWEJoYm5rZ0tFVlNSVU1wTENCMGFHVWdSMjkyWlhKdWJXVnVkQ0J2WmlCS1lXMWhhV05oTENCaGJtUWdTbUZ0WVdsallTQlFkV0pzYVdNZ1UyVnlkbWxqWlNCRGIyMXdZVzU1SUdKeWIydGxJR2R5YjNWdVpDQnZiaUIwYUdVZ016Y3RiV1ZuWVhkaGRIUWdjMjlzWVhJZ2NHRnlheUJwYmlCVFlYWmhibTVoTFd4aExXMWhjaXdnU21GdFlXbGpZUzRnUVNCc1pYUjBaWElnWm5KdmJTQlFjbVZ6YVdSbGJuUWdRMnhwYm5SdmJpQjNZWE1nY21WaFpDQmhkQ0IwYUdVZ1kyVnlaVzF2Ym5rc0lHTnZibWR5WVhSMWJHRjBhVzVuSUhSb1pTQmpiM1Z1ZEhKNUlHOXVJR3hsWVdScGJtY2diM1JvWlhJZ2FYTnNZVzVrSUc1aGRHbHZibk1nYVc0Z2NtVnVaWGRoWW14bElHVnVaWEpuZVNCa1pYQnNiM2x0Wlc1MExpQlVhR2x6SUhCaGNtc2dkMmhsYmlCbWRXeHNlU0JqYjI1emRISjFZM1JsWkNCaGJtUWdiM0JsY21GMGFXOXVZV3dnYVhNZ1pYaHdaV04wWldRZ2RHOGdjbVZrZFdObElHTmhjbUp2YmlCa2FXOTRhV1JsSUdWdGFYTnphVzl1Y3lCaWVTQmhiaUJsYzNScGJXRjBaV1FnTXpBc01EQXdJSFJ2Ym5NdVBDOXdQZz09IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2QxZGM0NjJmMmIxODQxMTg5ZTRjMjQzZThmNTU0YjVkLnNldENvbnRlbnQoaV9mcmFtZV84MzllNTQ0OWM5Y2E0MWNiYTUyYTllNzU2ZDVjOWUzZCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyX2Q0YWI1MjdmMWNiNjQxYTY4NGE1ZTg3ZjNmYmIxMGM0LmJpbmRQb3B1cChwb3B1cF9kMWRjNDYyZjJiMTg0MTE4OWU0YzI0M2U4ZjU1NGI1ZCkKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyXzI3OWY3M2IxMmQ4MDQ2MjRiZjAyM2YxNTRjNDNmZTM5ID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFsxNC4wMTAxMDksIC02MC45ODc0NjldLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2JhMTBhMjdlOTQ2ODRlOWVhZjU1ZjcyZmNlNDExNzAzID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lXzBkODY4M2ViMThkYTRjYWRiNjA2ODdkYzJkYjBlMmU2ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1EzSmxZWFJwYm1jZ1JXTnZibTl0YVdNZ1QzQndiM0owZFc1cGRIazhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa05EU1R3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1VGRYQndiM0owYVc1bklHbHpiR0Z1WkhNZ2IyNGdkR2hsSUdaeWIyNTBJR3hwYm1WeklHOW1JR05zYVcxaGRHVWdZMmhoYm1kbFBDOWlQand2Y0Q0OGNENGdRME5KTENCMGFHVWdSMjkyWlhKdWJXVnVkQ0J2WmlCVGRDNGdUSFZqYVdFc0lIUm9aU0JUZEM0Z1RIVmphV0VnZFhScGJHbDBlU3dnZEdobElGSnZZMnQ1SUUxdmRXNTBZV2x1SUVsdWMzUnBkSFYwWlNCaGJtUWdiM1JvWlhJZ2NHRnlkRzVsY25NZ2NISmxjMmxrWldRZ2IzWmxjaUIwYUdVZ1ozSnZkVzVrSUdKeVpXRnJhVzVuSUdadmNpQmhJRE1nVFZjZ2MyOXNZWElnWm1GeWJTQnBiaUJUZEM0Z1RIVmphV0VzSUhkb2FXTm9JSGRvWlc0Z1puVnNiSGtnWTI5dWMzUnlkV04wWldRZ1lXNWtJRzl3WlhKaGRHbHZibUZzSUhkcGJHd2dZbVVnYjI1bElHOW1JSFJvWlNCc1lYSm5aWE4wSUhKbGJtVjNZV0pzWlNCbGJtVnlaM2tnY0hKdmFtVmpkQ0JwYmlCMGFHVWdZMjkxYm5SeWVTNDhMM0ErIiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2JhMTBhMjdlOTQ2ODRlOWVhZjU1ZjcyZmNlNDExNzAzLnNldENvbnRlbnQoaV9mcmFtZV8wZDg2ODNlYjE4ZGE0Y2FkYjYwNjg3ZGMyZGIwZTJlNik7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyXzI3OWY3M2IxMmQ4MDQ2MjRiZjAyM2YxNTRjNDNmZTM5LmJpbmRQb3B1cChwb3B1cF9iYTEwYTI3ZTk0Njg0ZTllYWY1NWY3MmZjZTQxMTcwMykKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyX2NmYTRjYTE3NWZlYjQ1MzBiNjQzZGE3MTMxNzk4YTVmID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFsxMi42NSwgLTYxLjM4MzMzM10sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfODJkZDg1MjMwN2RmNDg0OGEzYWMzYmFjNzM4OWE4OTggPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfNGQ5ZjBiOGQ2ZTgwNDgxMGFhNzQ0ZDQyNmRmMjg2OWYgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrUTNKbFlYUnBibWNnUldOdmJtOXRhV01nVDNCd2IzSjBkVzVwZEhrOEwyZ3hQanhpY2o0OGNENDhjM1J5YjI1blBrTkRTVHd2YzNSeWIyNW5Qand2Y0Q0OGNENDhZajVUZFhCd2IzSjBhVzVuSUdsemJHRnVaSE1nYjI0Z2RHaGxJR1p5YjI1MElHeHBibVZ6SUc5bUlHTnNhVzFoZEdVZ1kyaGhibWRsUEM5aVBqd3ZjRDQ4Y0Q0Z1EwTkpJR0Z1WkNCcGRITWdjR0Z5ZEc1bGNuTXNJRkpOU1N3Z2RHaGxJRWR2ZG1WeWJtMWxiblFnYjJZZ1UzUXVJRlpwYm1ObGJuUWdZVzVrSUhSb1pTQkhjbVZ1WVdScGJtVnpMQ0JoYm1RZ1UzUXVJRlpwYm1ObGJuUWdSV3hsWTNSeWFXTnBkSGtnVTJWeWRtbGpaWE1nVEdsdGFYUmxaQ0FvVmtsT1RFVkRLU0JqYjIxdFpXNWpaV1FnYVcxd2JHVnRaVzUwWVhScGIyNGdiMllnZEdobElFMWhlWEpsWVhVZ1RXbGpjbTluY21sa0lGQnliMnBsWTNRc0lHOXVaU0J2WmlCMGFHVWdabWx5YzNRZ2RYUnBiR2wwZVMxelkyRnNaU0JvZVdKeWFXUWdjMjlzWVhJZ1VGWXNJR0poZEhSbGNua2djM1J2Y21GblpTd2dZVzVrSUdScFpYTmxiQ0JsYkdWamRISnBZMmwwZVNCblpXNWxjbUYwYVc5dUlITjVjM1JsYlNCcGJpQjBhR1VnUTJGeWFXSmlaV0Z1TGlBZ1ZHaGxJRTFwWTNKdlozSnBaQ0JRY205cVpXTjBJR2x6SUhCaGNuUWdiMllnVTNRdUlGWnBibU5sYm5RZ1lXNWtJSFJvWlNCSGNtVnVZV1JwYm1WejRvQ1pJSE5vYVdaMElIUnZkMkZ5WkNCcGJtTnlaV0Z6YVc1bklIUm9aU0IxZEdsc2FYcGhkR2x2YmlCdlppQnlaVzVsZDJGaWJHVWdaVzVsY21kNUlIUmxZMmh1YjJ4dloybGxjeTRnUEM5d1BnPT0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfODJkZDg1MjMwN2RmNDg0OGEzYWMzYmFjNzM4OWE4OTguc2V0Q29udGVudChpX2ZyYW1lXzRkOWYwYjhkNmU4MDQ4MTBhYTc0NGQ0MjZkZjI4NjlmKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfY2ZhNGNhMTc1ZmViNDUzMGI2NDNkYTcxMzE3OThhNWYuYmluZFBvcHVwKHBvcHVwXzgyZGQ4NTIzMDdkZjQ4NDhhM2FjM2JhYzczODlhODk4KQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfZjU0ZWI4NTZiODU3NDQ0ZDhmZmU3MDI4M2Y5YjQxM2QgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzI1LjA0Nzk4MywgLTc3LjM1NTQxNV0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfNDBjYTllY2UyYmJiNDI2MDk2YmQ4M2ViMTc2OGE5OTcgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfNjcxM2MzY2ZmODYyNDQ0OTgwZmViMzI5YTQzMzhlOWMgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrUTNKbFlYUnBibWNnUldOdmJtOXRhV01nVDNCd2IzSjBkVzVwZEhrOEwyZ3hQanhpY2o0OGNENDhjM1J5YjI1blBrTkRTVHd2YzNSeWIyNW5Qand2Y0Q0OGNENDhZajVUZFhCd2IzSjBhVzVuSUdsemJHRnVaSE1nYjI0Z2RHaGxJR1p5YjI1MElHeHBibVZ6SUc5bUlHTnNhVzFoZEdVZ1kyaGhibWRsUEM5aVBqd3ZjRDQ4Y0Q0Z1EwTkpJR0Z6YzJsemRHVmtJSFJvWlNCbmIzWmxjbTV0Wlc1MElHOW1JRUpoYUdGdFlYTWdkRzhnYzJWamRYSmxJR1oxYm1ScGJtY2dkRzhnYzNWd2NHOXlkQ0IwYUdVZ1pHVjJaV3h2Y0cxbGJuUWdiMllnWVNBeExEQXdNQ0JyVnlCemIyeGhjaUJRVmlCallYSndiM0owSUdGdVpDQmxiR1ZqZEhKcFl5QjJaV2hwWTJ4bElHTm9ZWEpuWlhJZ2MzUmhkR2x2Ymk0Z1BDOXdQZz09IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzQwY2E5ZWNlMmJiYjQyNjA5NmJkODNlYjE3NjhhOTk3LnNldENvbnRlbnQoaV9mcmFtZV82NzEzYzNjZmY4NjI0NDQ5ODBmZWIzMjlhNDMzOGU5Yyk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyX2Y1NGViODU2Yjg1NzQ0NGQ4ZmZlNzAyODNmOWI0MTNkLmJpbmRQb3B1cChwb3B1cF80MGNhOWVjZTJiYmI0MjYwOTZiZDgzZWIxNzY4YTk5NykKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyX2Y4MmZhNjRiMGU1MTQwNWI5YjA5MTczMmUwYTY2MzM0ID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFsxMi41NDc5MywgLTgxLjcxNjY1XSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWNvbjogbmV3IEwuSWNvbi5EZWZhdWx0KCksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkuYWRkVG8obWFya2VyX2NsdXN0ZXJfNDdkNDQ3NmQyZGE5NDhmNzkwOWNhODdmOTU2ZjgxOWMpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9jNDIzYjM3NDIxMjM0YjdiYWE2NmFmNWI2MGQxNDUzYyA9IEwucG9wdXAoe21heFdpZHRoOiAnMjY1MCcKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaV9mcmFtZV83MGYxZjgwOTNhMzU0MDkxOTU3MTk3MjkxMWNhNThlNCA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBOGFERStRM0psWVhScGJtY2dSV052Ym05dGFXTWdUM0J3YjNKMGRXNXBkSGs4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtORFNUd3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNVRkWEJ3YjNKMGFXNW5JR2x6YkdGdVpITWdiMjRnZEdobElHWnliMjUwSUd4cGJtVnpJRzltSUdOc2FXMWhkR1VnWTJoaGJtZGxQQzlpUGp3dmNENDhjRDRnUTBOSklHbHpJR0Z6YzJsemRHbHVaeUIzYVhSb0lIUm9aU0JrWlhabGJHOXdiV1Z1ZENCdlppQmhJR052YlhCeVpXaGxibk5wZG1VZ1pXNWxjbWQ1SUhSeVlXNXphWFJwYjI0Z2MzUnlZWFJsWjNrZ1ptOXlJRU52Ykc5dFltbGg0b0NaY3lCVFlXNGdRVzVrY3NPcGN5QmhjbU5vYVhCbGJHRm5ieTRnVkdobElHVnVaWEpuZVNCemRISmhkR1ZuZVNCaGFXMXpJSFJ2SUdobGJIQWdkR2hsSUZOaGJpQkJibVJ5WlhNZ2RHOGdjbVZ1WlhkaFlteGxJSE52ZFhKalpYTWdiMllnWlc1bGNtZDVMQ0IzYUdsamFDQjNhV3hzSUdobGJIQWdiRzkzWlhJZ2RHaGxJR1ZzWldOMGNtbGphWFI1SUhCeWFXTmxjeUIzYUdWdUlHWjFiR3dnWTI5dWMzUnlkV04wWldRZ1lXNWtJRzl3WlhKaGRHbHZibUZzTGlBOEwzQSsiIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfYzQyM2IzNzQyMTIzNGI3YmFhNjZhZjViNjBkMTQ1M2Muc2V0Q29udGVudChpX2ZyYW1lXzcwZjFmODA5M2EzNTQwOTE5NTcxOTcyOTExY2E1OGU0KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfZjgyZmE2NGIwZTUxNDA1YjliMDkxNzMyZTBhNjYzMzQuYmluZFBvcHVwKHBvcHVwX2M0MjNiMzc0MjEyMzRiN2JhYTY2YWY1YjYwZDE0NTNjKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfNjc1Yzg5ZjRjZmZjNDhkNGE1NDBjMjE0MmZiYzdhZDMgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzQ1Ljc3OTg5LCAtNjIuMDIzNzNdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzQ4MGRhMzdlYmM3NjRkYzU5ZjE2NDUxMjZhYzUzMmQ4ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lX2I1ZTM4YTYyYjQwOTQxMjNiNTFkNTBiM2Q2ZTUxOWQyID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1EzSmxZWFJwYm1jZ1JXTnZibTl0YVdNZ1QzQndiM0owZFc1cGRIazhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa05EU1R3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1VGRYQndiM0owYVc1bklHbHpiR0Z1WkhNZ2IyNGdkR2hsSUdaeWIyNTBJR3hwYm1WeklHOW1JR05zYVcxaGRHVWdZMmhoYm1kbFBDOWlQand2Y0Q0OGNENGdRV0p2ZFhRZ01UQWxJRzltSUVKbGJHbDZaV0Z1Y3lCa2J5QnViM1FnYUdGMlpTQmhZMk5sYzNNZ2RHOGdkR2hsSUdWc1pXTjBjbWxqSUdkeWFXUXNJR2x1WTJ4MVpHbHVaeUIwYUdVZ2NtVnphV1JsYm5SeklHOW1JRk4wTGlCSFpXOXlaMlVuY3lCRFlYbGxMaUJEUTBrZ1lXNWtJRkpOU1MxRFYxSWdZWEpsSUhkdmNtdHBibWNnZDJsMGFDQnNiMk5oYkNCemRHRnJaV2h2YkdSbGNuTWdkRzhnWkdWMlpXeHZjQ0JoSUdoNVluSnBaQ0J6YjJ4aGNpd2djM1J2Y21GblpTd2dZVzVrSUdScFpYTmxiQ0J0YVdOeWIyZHlhV1FnZEc4Z2FXMXdjbTkyWlNCaFkyTmxjM01nZEc4Z1kyeGxZVzRzSUdGbVptOXlaR0ZpYkdVZ1lXNWtJSEpsYkdsaFlteGxJR1ZzWldOMGNtbGphWFI1SUdadmNpQlRkQzRnUjJWdmNtZGw0b0NaY3lCRFlYbGxMand2Y0Q0PSIgd2lkdGg9IjUwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjMwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgICAgICBwb3B1cF80ODBkYTM3ZWJjNzY0ZGM1OWYxNjQ1MTI2YWM1MzJkOC5zZXRDb250ZW50KGlfZnJhbWVfYjVlMzhhNjJiNDA5NDEyM2I1MWQ1MGIzZDZlNTE5ZDIpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIG1hcmtlcl82NzVjODlmNGNmZmM0OGQ0YTU0MGMyMTQyZmJjN2FkMy5iaW5kUG9wdXAocG9wdXBfNDgwZGEzN2ViYzc2NGRjNTlmMTY0NTEyNmFjNTMyZDgpCiAgICAgICAgICAgIDsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgdmFyIG1hcmtlcl85ZWY0ZjAwM2U1NzE0MmIxODUyODcxMWFhNjkyNzQyYyA9IEwubWFya2VyKAogICAgICAgICAgICBbMTUuMzAyODgsIC02MS4zOTAwNDldLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzJiOTYxNmQwYWU4NTQ4ZTliYWRkNTM1OWQ3ODJhYTk5ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lXzQ5YzQ2OGZkY2YzZTQ2M2JiYTRkMDM5ZGRjYThiNGFkID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1EzSmxZWFJwYm1jZ1JXTnZibTl0YVdNZ1QzQndiM0owZFc1cGRIazhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa05EU1R3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1VGRYQndiM0owYVc1bklHbHpiR0Z1WkhNZ2IyNGdkR2hsSUdaeWIyNTBJR3hwYm1WeklHOW1JR05zYVcxaGRHVWdZMmhoYm1kbFBDOWlQand2Y0Q0OGNENGdRME5KTENCcGJpQndZWEowYm1WeWMyaHBjQ0IzYVhSb0lFTkhTU0JoYm1RZ2RHaGxJRVp2ZFc1a1lYUnBiMjRzSUdoaGN5QmhZM1JwZG1Wc2VTQnlaWE53YjI1a1pXUWdkRzhnZEdobElHUmxkbUZ6ZEdGMGFXOXVJR05oZFhObFpDQmllU0JvZFhKeWFXTmhibVZ6SUVseWJXRWdZVzVrSUUxaGNtbGhMaUJFYjIxcGJtbGpZU3dnZDJobGNtVWdRME5KSUdoaGN5QjNiM0pyWldRZ2MybHVZMlVnTWpBeE1pd2dkMkZ6SUd4bGRtVnNaV1FnWW5rZ1RXRnlhV0V1SUZSdklHRmtaSEpsYzNNZ2JtVmxaSE1zSUVORFNTQm9ZWE1nWW1WbGJpQnBiaUJqYjI1MlpYSnpZWFJwYjI1eklIUnZJSE4xY0hCdmNuUWdkR2hsSUdkdmRtVnlibTFsYm5RZ2QybDBhQ0J5WldKMWFXeGthVzVuSUhSb1pTQmxibVZ5WjNrZ2MyVmpkRzl5SUhWemFXNW5JR0VnYlc5eVpTQnlaWE5wYkdsbGJuUWdZVzVrSUdOdmMzUXRaV1ptWldOMGFYWmxJR0Z3Y0hKdllXTm9JSGRwZEdnZ2NtVnVaWGRoWW14bElHVnVaWEpuZVM0OEwzQSsiIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfMmI5NjE2ZDBhZTg1NDhlOWJhZGQ1MzU5ZDc4MmFhOTkuc2V0Q29udGVudChpX2ZyYW1lXzQ5YzQ2OGZkY2YzZTQ2M2JiYTRkMDM5ZGRjYThiNGFkKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfOWVmNGYwMDNlNTcxNDJiMTg1Mjg3MTFhYTY5Mjc0MmMuYmluZFBvcHVwKHBvcHVwXzJiOTYxNmQwYWU4NTQ4ZTliYWRkNTM1OWQ3ODJhYTk5KQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfMmMyOGMyMzAyYTliNGY4Yjk0Yzk3OTMwNzRlMDIzNWMgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzE3LjExODQ4LCAtNjEuODQwMTNdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzA4NTdiYjExMjQ5ZTRlYTc4YzI1OGYzMDM2OTQ1N2NlID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lX2ZiYThhNzljY2IyMjRmOTNiYjc4YTUxYzlkNDVhOTViID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1EzSmxZWFJwYm1jZ1JXTnZibTl0YVdNZ1QzQndiM0owZFc1cGRIazhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa05EU1R3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1VGRYQndiM0owYVc1bklHbHpiR0Z1WkhNZ2IyNGdkR2hsSUdaeWIyNTBJR3hwYm1WeklHOW1JR05zYVcxaGRHVWdZMmhoYm1kbFBDOWlQand2Y0Q0OGNENGdRME5KSUdGdVpDQlNUVWtnZDJsc2JDQmlaU0JqYnkxamIyOXlaR2x1WVhScGJtY2daV1ptYjNKMGN5QjBieUJ5WldSbGMybG5iaUJDWVhKaWRXUmg0b0NaY3lCd2IzZGxjaUJ6WldOMGIzSWdZVzVrSUhSdklITm9hV1owSUdFZ2NtVnVaWGRoWW14bElHVnVaWEpuZVNCdGIyUmxiQ0JoYkc5dVozTnBaR1VnZEdobElFRnVkR2xuZFdFZ1VIVmliR2xqSUZWMGFXeHBkR2xsY3lCQmRYUm9iM0pwZEhrZ0tFRlFWVUVwTGlBZ1JtOXNiRzkzYVc1bklIUm9aU0JrWlhaaGMzUmhkR2x2YmlCbWNtOXRJRWgxY25KcFkyRnVaU0JKY20xaElHbHVJRk5sY0hSbGJXSmxjaXdnZEdobElFZHZkbVZ5Ym0xbGJuUWdiMllnUVc1MGFXZDFZU0JoYm1RZ1FtRnlZblZrWVNCcGJuWnBkR1ZrSUVORFNTQmhibVFnVWsxSklIUnZJRzFoYm1GblpTQmhJSFJsWTJodWJ5MWhibUZzZVhOcGN5QnZaaUIwYUdVZ2IzQjBhVzFoYkNCemRYTjBZV2x1WVdKc1pTQmxibVZ5WjNrZ2NHRjBhSGRoZVNCbWIzSjNZWEprSUdadmNpQkNZWEppZFdSaElHRnpJR2wwSUhKbFluVnBiR1J6TGlCVWFHbHpJSE5vYVdaMElIUnZkMkZ5WkhNZ1kyeGxZVzRnWlc1bGNtZDVJSEJ5YjJwbFkzUnpJR0Z1WkNCbGJtVnlaM2tnWldabWFXTnBaVzVqZVNCdFpXRnpkWEpsY3lCallXNGdaM0psWVhSc2VTQnBiWEJ5YjNabElISmxjMmxzYVdWdVkza2diMjRnYVhOc1lXNWtjeUJzYVd0bElFSmhjbUoxWkdFc0lHRnpJSGRsYkd3Z1lYTWdaR1ZqY21WaGMyVWdaVzVsY21kNUlHTnZjM1J6SUdGdVpDQjBhR1ZwY2lCamRYSnlaVzUwSUhKbGJHbGhibU5sSUc5dUlHWnZjM05wYkNCbWRXVnNjeTRnUEM5d1BnPT0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfMDg1N2JiMTEyNDllNGVhNzhjMjU4ZjMwMzY5NDU3Y2Uuc2V0Q29udGVudChpX2ZyYW1lX2ZiYThhNzljY2IyMjRmOTNiYjc4YTUxYzlkNDVhOTViKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfMmMyOGMyMzAyYTliNGY4Yjk0Yzk3OTMwNzRlMDIzNWMuYmluZFBvcHVwKHBvcHVwXzA4NTdiYjExMjQ5ZTRlYTc4YzI1OGYzMDM2OTQ1N2NlKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfNTFkODA1NGQ1ZmQ2NDJhNGEzYWQyNmY3NzlmMjUzZjAgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzI1Ljc2MTY4MSwgLTgwLjE5MTc4OF0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfZjMzODA3MGNmZjYwNDVhMTkzNGExMjkxNWMyZmU4MWUgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfNzA2MzJjZmNiMGYwNGY0ZGI0NzdkOTlkNWY5MDJlM2MgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1cxd2NtOTJhVzVuSUZCMVlteHBZeUJJWldGc2RHZzhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa05IU1R3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1QmFYSnNhV1owSUc5bUlHMWxaR2xqWVd3Z2MzVndjR3hwWlhNdElFUmxiR2wyWlhKcGJtY2djbVZzYVdWbUlIUnZJRkIxWlhKMGJ5QlNhV052UEM5aVBqd3ZjRDQ4Y0Q0Z1ZHaGxJRU5zYVc1MGIyNGdSMnh2WW1Gc0lFbHVhWFJwWVhScGRtVWdLRU5IU1NrZ2JXOWlhV3hwZW1Wa0lIQmhjblJ1WlhKeklIUnZJR2RsZENCamNtbDBhV05oYkd4NUlHNWxaV1JsWkNCdFpXUnBZMkZzSUdGdVpDQnpiMnhoY2lCemRYQndiR2xsY3lCMGJ5QlFkV1Z5ZEc4Z1VtbGpieUJwYmlCMGFHVWdkMkZyWlNCdlppQklkWEp5YVdOaGJtVnpJRWx5YldFZ1lXNWtJRTFoY21saExpQlhiM0pyWldRZ2QybDBhQ0JFYVhKbFkzUWdVbVZzYVdWbUlHOXVJSFIzYnlCaGFYSnNhV1owY3lCMGFHRjBJR1JsYkdsMlpYSmxaQ0J0YjNKbElIUm9ZVzRnTVRVd0xEQXdNQ0JzWW5NZ2IyWWdiV1ZrYVdOaGJDQnlaWE52ZFhKalpYTXVJRlJvWlNCcGRHVnRjeUJrYjI1aGRHVmtJR0o1SURRMElHTnZiWEJoYm1sbGN5QnBibU5zZFdSbFpDQnBiblJ5WVhabGJtOTFjeUJ6YjJ4MWRHbHZibk1nWVc1a0lIQnlaWE5qY21sd2RHbHZiaUJ0WldScFkyRjBhVzl1Y3lCbWIzSWdZV04xZEdVZ1kyOXVaR2wwYVc5dWN5QmhibVFnWTJoeWIyNXBZeUJrYVhObFlYTmxjeUJ6ZFdOb0lHRnpJR1JwWVdKbGRHVnpJR0Z1WkNCb2VYQmxjblJsYm5OcGIyNHVQQzl3UGc9PSIgd2lkdGg9IjUwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjMwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9mMzM4MDcwY2ZmNjA0NWExOTM0YTEyOTE1YzJmZTgxZS5zZXRDb250ZW50KGlfZnJhbWVfNzA2MzJjZmNiMGYwNGY0ZGI0NzdkOTlkNWY5MDJlM2MpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIG1hcmtlcl81MWQ4MDU0ZDVmZDY0MmE0YTNhZDI2Zjc3OWYyNTNmMC5iaW5kUG9wdXAocG9wdXBfZjMzODA3MGNmZjYwNDVhMTkzNGExMjkxNWMyZmU4MWUpCiAgICAgICAgICAgIDsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgdmFyIG1hcmtlcl81Y2UzNTZiODIyMDU0MWI2OWM2MGM5ZWIxZTc4ZGNmZSA9IEwubWFya2VyKAogICAgICAgICAgICBbMzkuMjkwMzg2LCAtNzYuNjEyMTldLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzQ5Y2Y0OTgwMDc5YzQzNjhhYmUxMjMzYzg3YzhiZTQzID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lXzU1NTIzYmU4ZWE5MjRmYTZiZDlmMmM0ZmI4ZDc3NGEyID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtOSVRVazhMM04wY205dVp6NDhMM0ErUEhBK1BHSStUM0JwYjJsa0lGQnliMmR5WVcwOEwySStQQzl3UGp4d1BpQlVhR1VnUTJ4cGJuUnZiaUJJWldGc2RHZ2dUV0YwZEdWeWN5QkpibWwwYVdGMGFYWmxJQ2hEU0UxSktTQnBjeUJqYjIxaVlYUjBhVzVuSUhSb1pTQnZjR2x2YVdRZ1kzSnBjMmx6SUdKNUlIQnlaWFpsYm5ScGJtY2diM1psY21SdmMyVnpJR0Z1WkNCeVpXUjFZMmx1WnlCemRXWm1aWEpwYm1jZ1lXNWtJSE4wYVdkdFlTQm1iM0lnZG1samRHbHRjeUJoYm1RZ1ptRnRhV3hwWlhNZ2FXNGdkR2hsSUZWdWFYUmxaQ0JUZEdGMFpYTXVJRlJvWlhrZ2NHRnlkRzVsY2lCM2FYUm9JSFJvWlNCS2IyaHVjeUJJYjNCcmFXNXpJRlZ1YVhabGNuTnBkSGtnUW14dmIyMWlaWEpuSUZOamFHOXZiQ0J2WmlCUWRXSnNhV01nU0dWaGJIUm9JSFJ2SUdOdmJuWmxibVVnYkdWaFpHbHVaeUJsZUhCbGNuUnpJRzl1SUhSb1pTQjBiM0JwWXk0Z1NXNGdNakF4Tnl3Z2RHaGxlU0J5Wld4bFlYTmxaQ0JoSUdkeWIzVnVaR0p5WldGcmFXNW5JRzVsZHlCeVpYQnZjblFzSU9LQW5GUm9aU0JQY0dsdmFXUWdSWEJwWkdWdGFXTTZJRVp5YjIwZ1JYWnBaR1Z1WTJVZ2RHOGdTVzF3WVdOMExPS0FuU0IzYUdsamFDQnBaR1Z1ZEdsbWFXVnpJSE4wWlhCeklHWnZjaUIxY21kbGJuUWdZV04wYVc5dUxqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzQ5Y2Y0OTgwMDc5YzQzNjhhYmUxMjMzYzg3YzhiZTQzLnNldENvbnRlbnQoaV9mcmFtZV81NTUyM2JlOGVhOTI0ZmE2YmQ5ZjJjNGZiOGQ3NzRhMik7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyXzVjZTM1NmI4MjIwNTQxYjY5YzYwYzllYjFlNzhkY2ZlLmJpbmRQb3B1cChwb3B1cF80OWNmNDk4MDA3OWM0MzY4YWJlMTIzM2M4N2M4YmU0MykKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyXzcyMjU5NDc5MmU4MjQyYjFhY2YxNmJjYzU0N2U0OWM4ID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFsyOS43NjA0MjcsIC05NS4zNjk4MDRdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzY4NWY2ZDFlYjYzNjQ0MGJhNGRjZDFhZGVjN2I3ZTE2ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lXzdlMjVjM2FiZWRmNDRlMjJiNGIxNTcyY2IwZDc2NGMwID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtOSVRVazhMM04wY205dVp6NDhMM0ErUEhBK1BHSStRMjl0YlhWdWFYUjVJRWhsWVd4MGFDQlVjbUZ1YzJadmNtMWhkR2x2Ymp3dllqNDhMM0ErUEhBK0lFbHVJRWh2ZFhOMGIyNHNJRlJsZUdGekxDQjNiM0pyWldRZ2RHOGdjbVYyYVhSaGJHbDZaU0JoSUdOdmJXMTFibWwwZVNCd2JHRjVaM0p2ZFc1a0lDQjNhWFJvSUZSdmJ5QlRiV0ZzYkNCMGJ5QkdZV2xzSUdGdVpDQnNiMk5oYkNCdlptWnBZMmxoYkhNdUlGUm9aU0J3YkdGNVozSnZkVzVrSUdabFlYUjFjbVZ6SUhacGMzVmhiQ0J3Y205dGNIUnpJR0Z1WkNCcGJHeDFjM1J5WVhScGIyNXpJSFJ2SUdWdVkyOTFjbUZuWlNCbVlXMXBiR2xsY3lCMGJ5QjBZV3hyTENCeVpXRmtMQ0JoYm1RZ2MybHVaeUIwYjJkbGRHaGxjaUJoWW05MWRDQm9aV0ZzZEdoNUlHWnZiMlJ6SUdGdVpDQjNZWGx6SUhSdklITjBZWGtnY0doNWMybGpZV3hzZVNCaFkzUnBkbVVnZEc5blpYUm9aWEl1SUR3dmNEND0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfNjg1ZjZkMWViNjM2NDQwYmE0ZGNkMWFkZWM3YjdlMTYuc2V0Q29udGVudChpX2ZyYW1lXzdlMjVjM2FiZWRmNDRlMjJiNGIxNTcyY2IwZDc2NGMwKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfNzIyNTk0NzkyZTgyNDJiMWFjZjE2YmNjNTQ3ZTQ5YzguYmluZFBvcHVwKHBvcHVwXzY4NWY2ZDFlYjYzNjQ0MGJhNGRjZDFhZGVjN2I3ZTE2KQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfMjRhMzQyZjVkMTI4NDFmZWE0NWVjMmUzNjI4YTZkY2YgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzI5LjY1MTYzNCwgLTgyLjMyNDgyOV0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfM2IyNzRhMTliYWVlNGIyNGEzMTA2Njk5ZDQ0MWJmOWEgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfMzk2Y2JiMDA4ODIxNDBkYzg4OTVlM2VhOWZmMjFiZjUgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1cxd2NtOTJhVzVuSUZCMVlteHBZeUJJWldGc2RHZzhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa05JVFVrOEwzTjBjbTl1Wno0OEwzQStQSEErUEdJK1EyOXRiWFZ1YVhSNUlFaGxZV3gwYUNCVWNtRnVjMlp2Y20xaGRHbHZiand2WWo0OEwzQStQSEErSUVsdUlFdHViM2dnUTI5MWJuUjVMQ0JKYkd4cGJtOXBjeXdnYkdGMWJtTm9aV1FnWVNCamIyMXRkVzVwZEhrdGJHVmtJR0pzZFdWd2NtbHVkQ0IwYUdGMElHOTFkR3hwYm1WeklITjBaWEJ6SUhSdklHbHRjSEp2ZG1VZ2RHaGxJR2hsWVd4MGFDQmhibVFnZDJWc2JHNWxjM01nYjJZZ2JHOWpZV3dnY21WemFXUmxiblJ6TGlCVWFHVWdaWFpsYm5RZ1luVnBiSFFnZFhCdmJpQjNiM0pySUdKNUlHeHZZMkZzSUd4bFlXUmxjbk1nWVc1a0lHOXlaMkZ1YVhwaGRHbHZibk1nWVc1a0lHWnZiR3h2ZDJWa0lFTklUVWx6SUdacGNuTjBJSGR2Y210cGJtY2djMlZ6YzJsdmJpQnZiaUJ3Y21GamRHbGpZV3dnYzI5c2RYUnBiMjV6TGlBOEwzQSsiIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfM2IyNzRhMTliYWVlNGIyNGEzMTA2Njk5ZDQ0MWJmOWEuc2V0Q29udGVudChpX2ZyYW1lXzM5NmNiYjAwODgyMTQwZGM4ODk1ZTNlYTlmZjIxYmY1KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfMjRhMzQyZjVkMTI4NDFmZWE0NWVjMmUzNjI4YTZkY2YuYmluZFBvcHVwKHBvcHVwXzNiMjc0YTE5YmFlZTRiMjRhMzEwNjY5OWQ0NDFiZjlhKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfNDJmNWFjMWY3ZTFjNDVkNTgyMWQwMTM0MjU1MGRhYjIgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzMxLjU2MDQ0LCAtOTEuNDAzMTddLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzNjYTY3ZWUyZTU5NjQzOWQ5NzAxOTQwYTE0MDMxNjk3ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lX2U5YTMwZTFiZjdkYTQ0NjI5MjI2MzViYjQ5MjE0NmM1ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtOSVRVazhMM04wY205dVp6NDhMM0ErUEhBK1BHSStRMjl0YlhWdWFYUjVJRWhsWVd4MGFDQlVjbUZ1YzJadmNtMWhkR2x2Ymp3dllqNDhMM0ErUEhBK0lFaGxZV3gwYUNCTllYUjBaWEp6SUhCaGNuUnVaWEpsWkNCM2FYUm9JSFJvWlNCT1lYUmphR1Y2SUVOb1lXMWlaWElnYjJZZ1EyOXRiV1Z5WTJVZ1lXNWtJSFJvWlNCTllYbHZjdUtBbVhNZ2IyWm1hV05sSUhSdklHeGhkVzVqYUdWa0lHRnVJR1ZtWm05eWRDQjBieUJwYlhCeWIzWmxJSFJvWlNCb1pXRnNkR2dnYjJZZ1pXMXdiRzk1WldWeklIUm9aU0J5WldkcGIyNGdhVzRnVG1GMFkyaGxlaXdnVFZNdUlFaGxZV3gwYUNCTllYUjBaWEp6SUdaaFkybHNhWFJoZEdWa0lHRWdZMjl1ZG1WeWMyRjBhVzl1SUhkcGRHZ2diRzlqWVd3Z2JHVmhaR1Z5Y3lCaFltOTFkQ0IzYjNKcmFXNW5JSGRwZEdnZ2MyMWhiR3d0SUdGdVpDQnRhV1F0YzJsNlpXUWdZblZ6YVc1bGMzTmxjeUIwYnlCemRYQndiM0owSUdWdGNHeHZlV1ZsSUhkbGJHd3RZbVZwYm1jc0lIQnliM1pwWkdsdVp5QjBiMjlzY3lCaGJtUWdjbVZ6YjNWeVkyVnpJSFJvWVhRZ2FXNWpiSFZrWlNCemFXMXdiR1VnYzNSbGNITWdkRzhnYUdWc2NDQmlkWE5wYm1WemMyVnpJR055WldGMFpTQmhibVFnYVcxd2JHVnRaVzUwSUdGdUlHVnRjR3h2ZVdWbElIZGxiR3h1WlhOeklIQnNZVzRnWm05eUlIQm9lWE5wWTJGc0lHRmpkR2wyYVhSNUxDQnVkWFJ5YVhScGIyNHNJRzFsYm5SaGJDQm9aV0ZzZEdnZ1lXNWtJSE4xWW5OMFlXNWpaU0JoWW5WelpTNDhMM0ErIiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzNjYTY3ZWUyZTU5NjQzOWQ5NzAxOTQwYTE0MDMxNjk3LnNldENvbnRlbnQoaV9mcmFtZV9lOWEzMGUxYmY3ZGE0NDYyOTIyNjM1YmI0OTIxNDZjNSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyXzQyZjVhYzFmN2UxYzQ1ZDU4MjFkMDEzNDI1NTBkYWIyLmJpbmRQb3B1cChwb3B1cF8zY2E2N2VlMmU1OTY0MzlkOTcwMTk0MGExNDAzMTY5NykKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyXzZlMGVlMjc0YzViYTQ1YTc5NWUzNjU1ZTkzMmEzNmZlID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFszMi43MTU3MzYsIC0xMTcuMTYxMDg3XSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWNvbjogbmV3IEwuSWNvbi5EZWZhdWx0KCksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkuYWRkVG8obWFya2VyX2NsdXN0ZXJfNDdkNDQ3NmQyZGE5NDhmNzkwOWNhODdmOTU2ZjgxOWMpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9lNGI3NjI4ZTQxMTY0OWZmYmRiYjZhMDA2MDZmODE4YyA9IEwucG9wdXAoe21heFdpZHRoOiAnMjY1MCcKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaV9mcmFtZV8xYjMwNWI4YjAxOTg0OThmYWRhN2FiNDAxNWIyN2QxZiA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBOGFERStTVzF3Y205MmFXNW5JRkIxWW14cFl5QklaV0ZzZEdnOEwyZ3hQanhpY2o0OGNENDhjM1J5YjI1blBrTklUVWs4TDNOMGNtOXVaejQ4TDNBK1BIQStQR0krUTI5dGJYVnVhWFI1SUVobFlXeDBhQ0JVY21GdWMyWnZjbTFoZEdsdmJqd3ZZajQ4TDNBK1BIQStJRWx1SURJd01UY3NJSFJvWlNCRGJHbHVkRzl1SUVobFlXeDBhQ0JOWVhSMFpYSnpJRWx1YVhScFlYUnBkbVVnS0VOSVRVa3BJR1Y0Y0dGdVpHVmtJR2wwY3lCM2IzSnJJSFJ2SUZOaGJpQkVhV1ZuYnl3Z1EyRnNhV1p2Y201cFlTQmhibTV2ZFc1amFXNW5JR0VnYm1WM0lHVm1abTl5ZENCMGJ5QnBiWEJ5YjNabElIUm9aU0JvWldGc2RHZ2dZVzVrSUhkbGJHd3RZbVZwYm1jZ2IyWWdkblZzYm1WeVlXSnNaU0JqYUdsc1pISmxiaUJoYm1RZ1ptRnRhV3hwWlhNZ2FXNGdkR2hsSUdOdmJXMTFibWwwZVN3Z2NHRnlkR2xqZFd4aGNteDVJSFJvYjNObElHbHRjR0ZqZEdWa0lHSjVJSFJvWlNCamFHbHNaQ0IzWld4bVlYSmxJR0Z1WkNCcWRYWmxibWxzWlNCcWRYTjBhV05sSUhONWMzUmxiWE11UEM5d1BnPT0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfZTRiNzYyOGU0MTE2NDlmZmJkYmI2YTAwNjA2ZjgxOGMuc2V0Q29udGVudChpX2ZyYW1lXzFiMzA1YjhiMDE5ODQ5OGZhZGE3YWI0MDE1YjI3ZDFmKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfNmUwZWUyNzRjNWJhNDVhNzk1ZTM2NTVlOTMyYTM2ZmUuYmluZFBvcHVwKHBvcHVwX2U0Yjc2MjhlNDExNjQ5ZmZiZGJiNmEwMDYwNmY4MThjKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfNjUxMTEzNWFlMjlhNDNkY2I5OWM3NmQyYTNiNGZmYWYgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzM3Ljc3NDkyOSwgLTEyMi40MTk0MThdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzBiYTlmZDY2MTkzNjQzZDY5ZGZjZWQzNzQwZWYyOGEwID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lX2QzMjIzMjk2NzYzZDQ2OGQ5YTdmZTJhZmY1M2E2MjBhID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGxSVFZFWThMM04wY205dVp6NDhMM0ErUEhBK1BHSStVR0Z5ZEc1bGNtbHVaeUIwYnlCaWIyOXpkQ0JsWVhKc2VTQmphR2xzWkdodmIyUWdZbkpoYVc0Z1pHVjJaV3h2Y0cxbGJuUThMMkkrUEM5d1BqeHdQaUJVYjI4Z1UyMWhiR3dnZDI5eWEzTWdkMmwwYUNCc2IyTmhiQ0JrYjJOMGIzSnpJR0Z1WkNCc2FXSnlZWEpwWVc1eklIUnZJR0ZrZG1selpTQmhibVFnYzJoaGNtVWdaV0Z5YkhrZ2JHVmhjbTVwYm1jZ2RHOXZiR3RwZEhNZ1lXNWtJSEpsYzI5MWNtTmxjeUIzYVhSb0lIQmhjbVZ1ZEhNZ2IyWWdibVYzWW05eWJuTWdZVzVrSUhsdmRXNW5JR05vYVd4a2NtVnVJR0ZuWlhNZ2RHaHliM1ZuYUNCM1pXeHNMV05vYVd4a0lHRndjRzlwYm5SdFpXNTBjeXdnYkdsaWNtRnllU0J3Y205bmNtRnRiV2x1Wnl3Z1lXNWtJR052YlcxMWJtbDBlU0JsZG1WdWRITXVJRHd2Y0Q0PSIgd2lkdGg9IjUwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjMwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgICAgICBwb3B1cF8wYmE5ZmQ2NjE5MzY0M2Q2OWRmY2VkMzc0MGVmMjhhMC5zZXRDb250ZW50KGlfZnJhbWVfZDMyMjMyOTY3NjNkNDY4ZDlhN2ZlMmFmZjUzYTYyMGEpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIG1hcmtlcl82NTExMTM1YWUyOWE0M2RjYjk5Yzc2ZDJhM2I0ZmZhZi5iaW5kUG9wdXAocG9wdXBfMGJhOWZkNjYxOTM2NDNkNjlkZmNlZDM3NDBlZjI4YTApCiAgICAgICAgICAgIDsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgdmFyIG1hcmtlcl8zOWNjYTlkZDdjMDE0N2VmYThhNzllZjZiNDA0N2Q5NCA9IEwubWFya2VyKAogICAgICAgICAgICBbMzcuODA0MzYzLCAtMTIyLjI3MTExMV0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfZjkzNTU2MDRmN2NlNDAxNDg3ZTAxMjIzOGVhYjRmNjggPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfZDA2MWQxNzY1MjQwNDYwYTk1MjQ5MzgxMWMyYWFkMTEgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1cxd2NtOTJhVzVuSUZCMVlteHBZeUJJWldGc2RHZzhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5QbFJUVkVZOEwzTjBjbTl1Wno0OEwzQStQSEErUEdJK1VHRnlkRzVsY21sdVp5QjBieUJpYjI5emRDQmxZWEpzZVNCamFHbHNaR2h2YjJRZ1luSmhhVzRnWkdWMlpXeHZjRzFsYm5ROEwySStQQzl3UGp4d1BpQlViMjhnVTIxaGJHd2dkMjl5YTNNZ2QybDBhQ0JWUTFOR0lFSmxibWx2Wm1ZZ1EyaHBiR1J5Wlc3aWdKbHpJRWh2YzNCcGRHRnNJSFJ2SUhOb1lYSmxJR1ZoY214NUlHeGxZWEp1YVc1bklIUnZiMnhyYVhSeklIZHBkR2dnWm1GdGFXeHBaWE1nZEdoeWIzVm5hQ0IzWld4c0xXTm9hV3hrSUdGd2NHOXBiblJ0Wlc1MGN5d2diR2xpY21GeWVTQndjbTluY21GdGJXbHVaeXdnWVc1a0lHTnZiVzExYm1sMGVTQmxkbVZ1ZEhNdUlEd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2Y5MzU1NjA0ZjdjZTQwMTQ4N2UwMTIyMzhlYWI0ZjY4LnNldENvbnRlbnQoaV9mcmFtZV9kMDYxZDE3NjUyNDA0NjBhOTUyNDkzODExYzJhYWQxMSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyXzM5Y2NhOWRkN2MwMTQ3ZWZhOGE3OWVmNmI0MDQ3ZDk0LmJpbmRQb3B1cChwb3B1cF9mOTM1NTYwNGY3Y2U0MDE0ODdlMDEyMjM4ZWFiNGY2OCkKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyX2Q3ZmVmMGY4YzFlMDQxNDliYWNkNTJlNGU3YTEzY2I3ID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFszNi43Mzc3OTcsIC0xMTkuNzg3MTI1XSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWNvbjogbmV3IEwuSWNvbi5EZWZhdWx0KCksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkuYWRkVG8obWFya2VyX2NsdXN0ZXJfNDdkNDQ3NmQyZGE5NDhmNzkwOWNhODdmOTU2ZjgxOWMpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF81NjBhN2I0NTExOTg0YTM4OWI5ZDIzMmRjOTVjMmM2NyA9IEwucG9wdXAoe21heFdpZHRoOiAnMjY1MCcKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaV9mcmFtZV9hYTllYjIzMzFhZjI0MTE3YjI3YWY0ZThlNjdhYzk1NyA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBOGFERStTVzF3Y205MmFXNW5JRkIxWW14cFl5QklaV0ZzZEdnOEwyZ3hQanhpY2o0OGNENDhjM1J5YjI1blBsUlRWRVk4TDNOMGNtOXVaejQ4TDNBK1BIQStQR0krVUdGeWRHNWxjbWx1WnlCMGJ5QmliMjl6ZENCbFlYSnNlU0JqYUdsc1pHaHZiMlFnWW5KaGFXNGdaR1YyWld4dmNHMWxiblE4TDJJK1BDOXdQanh3UGlCVWIyOGdVMjFoYkd3Z2QyOXlhM01nZDJsMGFDQlVhR1VnUTJocGJHUnlaVzdpZ0pseklFMXZkbVZ0Wlc1MElHOW1JRVp5WlhOdWJ5QkRiM1Z1ZEhrZ2RHOGdaR2x6ZEhKcFluVjBaU0JsWVhKc2VTQnNaV0Z5Ym1sdVp5QjBiMjlzYTJsMGN5QmhibVFnY21WemIzVnlZMlZ6SUhSb2NtOTFaMmdnVjI5dFpXNGdTVzVtWVc1MElHRnVaQ0JEYUdsc1pISmxiaUFvVjBsREtTQmpiR2x1YVdOekxDQjBhR1VnYkc5allXd2dZMmhwYkdSeVpXN2lnSmx6SUdodmMzQnBkR0ZzSUdGdVpDQklaV3h3SUUxbElFZHliM2N1UEM5d1BnPT0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfNTYwYTdiNDUxMTk4NGEzODliOWQyMzJkYzk1YzJjNjcuc2V0Q29udGVudChpX2ZyYW1lX2FhOWViMjMzMWFmMjQxMTdiMjdhZjRlOGU2N2FjOTU3KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfZDdmZWYwZjhjMWUwNDE0OWJhY2Q1MmU0ZTdhMTNjYjcuYmluZFBvcHVwKHBvcHVwXzU2MGE3YjQ1MTE5ODRhMzg5YjlkMjMyZGM5NWMyYzY3KQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfNzkzZDczMDIzMjM0NGE5M2JiYTZiYTE1YTgwMWQ3M2UgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzM0LjA1MjIzNSwgLTExOC4yNDM2ODNdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2UxN2FhZjYwYjM0ODQ0MzVhN2E3MDhhMzIyZmZjYzY5ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lXzg2ZGM4YTI4NjdiMjRmMDVhY2Q4ZWZiZDRiY2M5YTRhID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGxSVFZFWThMM04wY205dVp6NDhMM0ErUEhBK1BHSStVR0Z5ZEc1bGNtbHVaeUIwYnlCaWIyOXpkQ0JsWVhKc2VTQmphR2xzWkdodmIyUWdZbkpoYVc0Z1pHVjJaV3h2Y0cxbGJuUThMMkkrUEM5d1BqeHdQaUJVYjI4Z1UyMWhiR3dnZDI5eWEzTWdkMmwwYUNCR2FYSnpkQ0ExSUV4QklIUnZJSE5vWVhKbElHVmhjbXg1SUd4bFlYSnVhVzVuSUhSdmIyeHJhWFJ6SUdGdVpDQnlaWE52ZFhKalpYTWdkRzhnTVRBc01EQXdJRzVsZHlCdGIyMXpJSFJvY205MVoyZ2dhRzl0WlNCMmFYTnBkSE11SUR3dmNEND0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfZTE3YWFmNjBiMzQ4NDQzNWE3YTcwOGEzMjJmZmNjNjkuc2V0Q29udGVudChpX2ZyYW1lXzg2ZGM4YTI4NjdiMjRmMDVhY2Q4ZWZiZDRiY2M5YTRhKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfNzkzZDczMDIzMjM0NGE5M2JiYTZiYTE1YTgwMWQ3M2UuYmluZFBvcHVwKHBvcHVwX2UxN2FhZjYwYjM0ODQ0MzVhN2E3MDhhMzIyZmZjYzY5KQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfNTlhM2MyOTA1MTdkNDAwYWFkMWM0YWJlYTEwMzEwMWYgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzM3LjQxNzgyNCwgLTk1LjY4MjUxXSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWNvbjogbmV3IEwuSWNvbi5EZWZhdWx0KCksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkuYWRkVG8obWFya2VyX2NsdXN0ZXJfNDdkNDQ3NmQyZGE5NDhmNzkwOWNhODdmOTU2ZjgxOWMpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9iMmJhY2ZmNzIwMzk0ZDlmYjEyZDk5NGNlNGJhMzJmYiA9IEwucG9wdXAoe21heFdpZHRoOiAnMjY1MCcKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaV9mcmFtZV82YmExMjg1MjdlMDE0ZGUwOGEzMGEwYjg1NTdjYmUxMSA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBOGFERStTVzF3Y205MmFXNW5JRkIxWW14cFl5QklaV0ZzZEdnOEwyZ3hQanhpY2o0OGNENDhjM1J5YjI1blBsUlRWRVk4TDNOMGNtOXVaejQ4TDNBK1BIQStQR0krVUdGeWRHNWxjbWx1WnlCMGJ5QmliMjl6ZENCbFlYSnNlU0JqYUdsc1pHaHZiMlFnWW5KaGFXNGdaR1YyWld4dmNHMWxiblE4TDJJK1BDOXdQanh3UGlCVWIyOGdVMjFoYkd3Z2QyOXlhM01nZDJsMGFDQkdhWEp6ZENBMUlFNWhjR0VnZEc4Z1pHbHpkSEpwWW5WMFpTQmxZWEpzZVNCc1pXRnlibWx1WnlCd2IzTjBaWEp6TENCMGFYQWdjMmhsWlhSekxDQmhibVFnY21WemIzVnlZMlZ6SUhSdklHeHZZMkZzSUc5eVoyRnVhWHBoZEdsdmJuTWdkR2hoZENCeVpXRmphQ0IyZFd4dVpYSmhZbXhsSUdOb2FXeGtjbVZ1TGlBOEwzQSsiIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfYjJiYWNmZjcyMDM5NGQ5ZmIxMmQ5OTRjZTRiYTMyZmIuc2V0Q29udGVudChpX2ZyYW1lXzZiYTEyODUyN2UwMTRkZTA4YTMwYTBiODU1N2NiZTExKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfNTlhM2MyOTA1MTdkNDAwYWFkMWM0YWJlYTEwMzEwMWYuYmluZFBvcHVwKHBvcHVwX2IyYmFjZmY3MjAzOTRkOWZiMTJkOTk0Y2U0YmEzMmZiKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfMjAxNzE4MjFlN2FlNGNjYzg1YWQ1YTBjODg5ZGEzNDUgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzM2LjE1Mzk4LCAtOTUuOTkyNzc1XSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWNvbjogbmV3IEwuSWNvbi5EZWZhdWx0KCksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkuYWRkVG8obWFya2VyX2NsdXN0ZXJfNDdkNDQ3NmQyZGE5NDhmNzkwOWNhODdmOTU2ZjgxOWMpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF8wNWRhYmExYTg3MTA0MDIxOWJiYTQxMGRkM2YwMDgwNCA9IEwucG9wdXAoe21heFdpZHRoOiAnMjY1MCcKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaV9mcmFtZV8xMjI2M2JlYmU2MWQ0MTY5OGEzNDEzMTljOGNmNzI4MSA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBOGFERStTVzF3Y205MmFXNW5JRkIxWW14cFl5QklaV0ZzZEdnOEwyZ3hQanhpY2o0OGNENDhjM1J5YjI1blBsUlRWRVk4TDNOMGNtOXVaejQ4TDNBK1BIQStQR0krVUdGeWRHNWxjbWx1WnlCMGJ5QmliMjl6ZENCbFlYSnNlU0JqYUdsc1pHaHZiMlFnWW5KaGFXNGdaR1YyWld4dmNHMWxiblE4TDJJK1BDOXdQanh3UGlCVWIyOGdVMjFoYkd3Z2QyOXlhM01nZDJsMGFDQjBhR1VnUjJWdmNtZGxJRXRoYVhObGNpQkdZVzFwYkhrZ1JtOTFibVJoZEdsdmJpQjBieUJ6YUdGeVpTQmxZWEpzZVNCc1pXRnlibWx1WnlCMGIyOXNhMmwwY3lCaGJtUWdjbVZ6YjNWeVkyVnpJR1p2Y2lCd1lYSmxiblJ6SUdGdVpDQmpZWEpsWjJsMlpYSnpJSGRwZEdnZ2RHaGxJR2hsYkhBZ2IyWWdjR1ZrYVdGMGNtbGpJRzUxY25ObGN5QmhibVFnWm1GcGRHZ3RZbUZ6WldRZ2IzSm5ZVzVwZW1GMGFXOXVjeTRnSUR3dmNEND0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfMDVkYWJhMWE4NzEwNDAyMTliYmE0MTBkZDNmMDA4MDQuc2V0Q29udGVudChpX2ZyYW1lXzEyMjYzYmViZTYxZDQxNjk4YTM0MTMxOWM4Y2Y3MjgxKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfMjAxNzE4MjFlN2FlNGNjYzg1YWQ1YTBjODg5ZGEzNDUuYmluZFBvcHVwKHBvcHVwXzA1ZGFiYTFhODcxMDQwMjE5YmJhNDEwZGQzZjAwODA0KQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfMjBiMTI1MjI1MjIyNGM2OGE5ZjYyMTQwYmIxNzE3MTUgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzI1Ljc2LCAtODAuMTldLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzM3NThjZDM4MDFlZDRkNDNiZWQzNzEzNDY2ZThjMWI2ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lX2FmZGNhYmM2ZTU0ZjQxYjBiNDY3YmRhYjJiODlmY2MxID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGxSVFZFWThMM04wY205dVp6NDhMM0ErUEhBK1BHSStVR0Z5ZEc1bGNtbHVaeUIwYnlCaWIyOXpkQ0JsWVhKc2VTQmphR2xzWkdodmIyUWdZbkpoYVc0Z1pHVjJaV3h2Y0cxbGJuUThMMkkrUEM5d1BqeHdQaUJVYjI4Z1UyMWhiR3dnZDI5eWEzTWdkMmwwYUNCMGFHVWdSV0Z5YkhrZ1RHVmhjbTVwYm1jZ1EyOWhiR2wwYVc5dUlIUnZJSE5vWVhKbElHVmhjbXg1SUd4bFlYSnVhVzVuSUhSdmIyeHJhWFJ6SUdGdVpDQnlaWE52ZFhKalpYTWdkMmwwYUNCd1lYSmxiblJ6SUdGdVpDQmpZWEpsWjJsMlpYSnpJSFJvY205MVoyZ2dhR1ZoYkhSb0lIQnliM1pwWkdWeWN5d2dkR2hsSUd4dlkyRnNJR3hwWW5KaGNua3NJR0Z1WkNCRllYSnNlU0JJWldGa0lGTjBZWEowTGlBZ1BDOXdQZz09IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzM3NThjZDM4MDFlZDRkNDNiZWQzNzEzNDY2ZThjMWI2LnNldENvbnRlbnQoaV9mcmFtZV9hZmRjYWJjNmU1NGY0MWIwYjQ2N2JkYWIyYjg5ZmNjMSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyXzIwYjEyNTIyNTIyMjRjNjhhOWY2MjE0MGJiMTcxNzE1LmJpbmRQb3B1cChwb3B1cF8zNzU4Y2QzODAxZWQ0ZDQzYmVkMzcxMzQ2NmU4YzFiNikKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyXzZmNDk1MzdkZjNlMDRlZmE5Zjc5MWU3YjNmZGNjZGVlID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFszNC43NDY0ODMsIC05Mi4yODk1OTddLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2EzYTk0NWNhNjI3ZjQ0MjRiY2NkZjM5ZmE2MDNlYWQ5ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lXzc3NGE5NTc3MGU0NzQ2NmU5Mjk2M2UxZDZjMDU2ODEwID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGxSVFZFWThMM04wY205dVp6NDhMM0ErUEhBK1BHSStVR0Z5ZEc1bGNtbHVaeUIwYnlCaWIyOXpkQ0JsWVhKc2VTQmphR2xzWkdodmIyUWdZbkpoYVc0Z1pHVjJaV3h2Y0cxbGJuUThMMkkrUEM5d1BqeHdQaUJVYjI4Z1UyMWhiR3dnY0dGeWRHNWxjbk1nZDJsMGFDQnNiMk5oYkNCdmNtZGhibWw2WVhScGIyNXpJR0Z1WkNCMGFHVWdZMmwwZVNCdlppQk1hWFIwYkdVZ1VtOWpheUIwYnlCemFHRnlaU0JsWVhKc2VTQnNaV0Z5Ym1sdVp5QjBiMjlzYTJsMGN5QmhibVFnY21WemIzVnlZMlZ6SUhkcGRHZ2djR0Z5Wlc1MGN5QmhibVFnWTJGeVpXZHBkbVZ5Y3k0Z1BDOXdQZz09IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2EzYTk0NWNhNjI3ZjQ0MjRiY2NkZjM5ZmE2MDNlYWQ5LnNldENvbnRlbnQoaV9mcmFtZV83NzRhOTU3NzBlNDc0NjZlOTI5NjNlMWQ2YzA1NjgxMCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyXzZmNDk1MzdkZjNlMDRlZmE5Zjc5MWU3YjNmZGNjZGVlLmJpbmRQb3B1cChwb3B1cF9hM2E5NDVjYTYyN2Y0NDI0YmNjZGYzOWZhNjAzZWFkOSkKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyXzE4YzlhNTA4ZDVmYTRmNjc5NDA2NDdmZmQ2YTg0ZTc0ID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFs0My4wNDgxMjIsIC03Ni4xNDc0MjNdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzhjZWYwYzYzODE1YzQzOWNhMjlmZmViNzMzNjIzMzczID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lX2Y1NWRhNDI0MzBkNjQ1ZTQ4MGM1MWYxNTYyYjhlMDgzID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGxSVFZFWThMM04wY205dVp6NDhMM0ErUEhBK1BHSStVR0Z5ZEc1bGNtbHVaeUIwYnlCaWIyOXpkQ0JsWVhKc2VTQmphR2xzWkdodmIyUWdZbkpoYVc0Z1pHVjJaV3h2Y0cxbGJuUThMMkkrUEM5d1BqeHdQaUJVYjI4Z1UyMWhiR3dnZDI5eWEzTWdkMmwwYUNCMGFHVWdSV0Z5YkhrZ1EyaHBiR1JvYjI5a0lFRnNiR2xoYm1ObElHOW1JRTl1YjI1a1lXZGhJRU52ZFc1MGVTQjBieUJ6YUdGeVpTQmxZWEpzZVNCc1pXRnlibWx1WnlCMGIyOXNhMmwwY3lCaGJtUWdjbVZ6YjNWeVkyVnpJSGRwZEdnZ2NHRnlaVzUwY3lCaGJtUWdZMkZ5WldkcGRtVnljeTRnUEM5d1BnPT0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfOGNlZjBjNjM4MTVjNDM5Y2EyOWZmZWI3MzM2MjMzNzMuc2V0Q29udGVudChpX2ZyYW1lX2Y1NWRhNDI0MzBkNjQ1ZTQ4MGM1MWYxNTYyYjhlMDgzKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfMThjOWE1MDhkNWZhNGY2Nzk0MDY0N2ZmZDZhODRlNzQuYmluZFBvcHVwKHBvcHVwXzhjZWYwYzYzODE1YzQzOWNhMjlmZmViNzMzNjIzMzczKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfZTgwYWMyOTQyMGJlNDgxZThjY2MyNDE1NTdhNjFjNDAgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzQ0Ljk3Nzc1MywgLTkzLjI2NTAxNV0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfNDQ3NTllNTljMTU0NGNjZmJjZTc3N2QxNGViNTkxNWIgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfYmRlMDQ5ZTY5OWNiNGIzYThmOWI3MWY4M2EwZTJiMjIgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1cxd2NtOTJhVzVuSUZCMVlteHBZeUJJWldGc2RHZzhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5QbFJUVkVZOEwzTjBjbTl1Wno0OEwzQStQSEErUEdJK1VHRnlkRzVsY21sdVp5QjBieUJpYjI5emRDQmxZWEpzZVNCamFHbHNaR2h2YjJRZ1luSmhhVzRnWkdWMlpXeHZjRzFsYm5ROEwySStQQzl3UGp4d1BpQlViMjhnVTIxaGJHd2dkMjl5YTNNZ2QybDBhQ0IwYUdVZ1RXRjViM0xpZ0pseklHOW1abWxqWlNCMGJ5QnphR0Z5WlNCbFlYSnNlU0JzWldGeWJtbHVaeUIwYjI5c2EybDBjeUJoYm1RZ2NtVnpiM1Z5WTJWeklIZHBkR2dnY0dGeVpXNTBjeUJoYm1RZ1kyRnlaV2RwZG1WeWN5QjBhSEp2ZFdkb0lHTm9hV3hrSUdOaGNtVWdjSEp2ZG1sa1pYSnpMQ0IwYUdVZ1kyaHBiR1J5Wlc3aWdKbHpJR2h2YzNCcGRHRnNMQ0JoYm1RZ2RHaGxJR3hwWW5KaGNua3VJRHd2Y0Q0PSIgd2lkdGg9IjUwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjMwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgICAgICBwb3B1cF80NDc1OWU1OWMxNTQ0Y2NmYmNlNzc3ZDE0ZWI1OTE1Yi5zZXRDb250ZW50KGlfZnJhbWVfYmRlMDQ5ZTY5OWNiNGIzYThmOWI3MWY4M2EwZTJiMjIpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIG1hcmtlcl9lODBhYzI5NDIwYmU0ODFlOGNjYzI0MTU1N2E2MWM0MC5iaW5kUG9wdXAocG9wdXBfNDQ3NTllNTljMTU0NGNjZmJjZTc3N2QxNGViNTkxNWIpCiAgICAgICAgICAgIDsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgdmFyIG1hcmtlcl9kZjkyNjVlZjlmNzk0NDBjYmVjOGFkMDJjYjk4YmEyMSA9IEwubWFya2VyKAogICAgICAgICAgICBbNDIuMzMxNDI5LCAtODMuMDQ1NzUzXSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWNvbjogbmV3IEwuSWNvbi5EZWZhdWx0KCksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkuYWRkVG8obWFya2VyX2NsdXN0ZXJfNDdkNDQ3NmQyZGE5NDhmNzkwOWNhODdmOTU2ZjgxOWMpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9jNzNlZjBjN2Y2OTQ0Mjg3YTE2ZDMyMjg5MTIzOTYyMyA9IEwucG9wdXAoe21heFdpZHRoOiAnMjY1MCcKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaV9mcmFtZV8xOGUyYTQxMmNlYWM0NGZkOGM3YmY4NTIyZWRmNTIwNSA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBOGFERStTVzF3Y205MmFXNW5JRkIxWW14cFl5QklaV0ZzZEdnOEwyZ3hQanhpY2o0OGNENDhjM1J5YjI1blBsUlRWRVk4TDNOMGNtOXVaejQ4TDNBK1BIQStQR0krVUdGeWRHNWxjbWx1WnlCMGJ5QmliMjl6ZENCbFlYSnNlU0JqYUdsc1pHaHZiMlFnWW5KaGFXNGdaR1YyWld4dmNHMWxiblE4TDJJK1BDOXdQanh3UGlCVWIyOGdVMjFoYkd3Z2QyOXlhM01nZDJsMGFDQjBhR1VnUjNKbFlYUWdVM1JoY25RZ1EyOXNiR0ZpYjNKaGRHbDJaU0J2WmlCWFlYbHVaU0IwYnlCa2J5QmhJR05wZEhrdGQybGtaU0JqWVcxd1lXbG5iaUIwYnlCemFHRnlaU0JsWVhKc2VTQnNaV0Z5Ym1sdVp5QjBiMjlzYTJsMGN5QmhibVFnY21WemIzVnlZMlZ6SUhkcGRHZ2djR0Z5Wlc1MGN5QmhibVFnWTJGeVpXZHBkbVZ5Y3k0OEwzQSsiIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfYzczZWYwYzdmNjk0NDI4N2ExNmQzMjI4OTEyMzk2MjMuc2V0Q29udGVudChpX2ZyYW1lXzE4ZTJhNDEyY2VhYzQ0ZmQ4YzdiZjg1MjJlZGY1MjA1KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfZGY5MjY1ZWY5Zjc5NDQwY2JlYzhhZDAyY2I5OGJhMjEuYmluZFBvcHVwKHBvcHVwX2M3M2VmMGM3ZjY5NDQyODdhMTZkMzIyODkxMjM5NjIzKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfNmY5ZmJhMWYyMDBlNGJkZmE5M2UxYzkwYWZmNjVkOTEgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzQwLjcxMywgLTc0LjAwNV0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfNjkyMDU4M2Y1MDdhNGVlNWE1NDdiYzZlN2JhZmIwYWEgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfNWFkNzgwZGY1ZDYyNGI2OWFiZWU4NWY4Y2QzNDAyZmMgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1cxd2NtOTJhVzVuSUZCMVlteHBZeUJJWldGc2RHZzhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5QbFJUVkVZOEwzTjBjbTl1Wno0OEwzQStQSEErUEdJK1VHRnlkRzVsY21sdVp5QjBieUJpYjI5emRDQmxZWEpzZVNCamFHbHNaR2h2YjJRZ1luSmhhVzRnWkdWMlpXeHZjRzFsYm5ROEwySStQQzl3UGp4d1BpQlViMjhnVTIxaGJHd2dkMjl5YTNNZ2QybDBhQ0IwYUdVZ1EyaHBiR1J5Wlc3aWdKbHpJRU5oWW1sdVpYUWdkRzhnYzJoaGNtVWdNVEF3TERBd01DQmxZWEpzZVNCc1pXRnlibWx1WnlCMGIyOXNhMmwwY3lCd2NtOTJhV1JsWkNCaWVTQlRaWE5oYldVZ1YyOXlhM05vYjNBZ2RHOGdiRzlqWVd3Z2NHRnlaVzUwY3lCaGJtUWdZMkZ5WldkcGRtVnljeTQ4TDNBKyIgd2lkdGg9IjUwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjMwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgICAgICBwb3B1cF82OTIwNTgzZjUwN2E0ZWU1YTU0N2JjNmU3YmFmYjBhYS5zZXRDb250ZW50KGlfZnJhbWVfNWFkNzgwZGY1ZDYyNGI2OWFiZWU4NWY4Y2QzNDAyZmMpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIG1hcmtlcl82ZjlmYmExZjIwMGU0YmRmYTkzZTFjOTBhZmY2NWQ5MS5iaW5kUG9wdXAocG9wdXBfNjkyMDU4M2Y1MDdhNGVlNWE1NDdiYzZlN2JhZmIwYWEpCiAgICAgICAgICAgIDsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgdmFyIG1hcmtlcl9jZGE2OTdiNDRlMmQ0NDViOGM3NjMyY2RiOTJlN2VhNyA9IEwubWFya2VyKAogICAgICAgICAgICBbNTguMzAxMTY1NDYyLCAtMTM0LjQxODQ5ODMyNl0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfNzhlZWM5MWQ2OWQzNGMzNzlkYTExNjA0ZTVkODgzMDIgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfZDdhZTk4M2I5OWFlNDBjMGIyOTY0Y2MxYzdkNzUxNDggPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1cxd2NtOTJhVzVuSUZCMVlteHBZeUJJWldGc2RHZzhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa0ZJUnp3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1VGRYQndiM0owYVc1bklHRnVaQ0JEWld4bFluSmhkR2x1WnlCQmJXVnlhV05oNG9DWmN5QklaV0ZzZEdocFpYTjBJRk5qYUc5dmJITThMMkkrUEM5d1BqeHdQaUJVYUdVZ1FXeHNhV0Z1WTJVZ1ptOXlJR0VnU0dWaGJIUm9hV1Z5SUVkbGJtVnlZWFJwYjI1eklHbHpJSGR2Y210cGJtY2dkMmwwYUNCWUlITmphRzl2YkhNZ2FXNGdkR2hwY3lCemRHRjBaU0IwYnlCamNtVmhkR1VnYUdWaGJIUm9hV1Z5SUdWdWRtbHliMjV0Wlc1MGN5Qm1iM0lnYzNSMVpHVnVkSE1nWVc1a0lIUmxZV05vWlhKekxpQlBkbVZ5WVd4c0xDQklaV0ZzZEdobGNpQkhaVzVsY21GMGFXOXVJSE4xY0hCdmNuUnpJRzF2Y21VZ2RHaGhiaUF6T1N3d01EQWdjMk5vYjI5c2N5QnBiaUIwYUdVZ1NHVmhiSFJvZVNCVFkyaHZiMnh6SUZCeWIyZHlZVzBzSUhkb2FXTm9JR2hsYkhCeklHSjFhV3hrSUdobFlXeDBhR2xsY2lCc1pXRnlibWx1WnlCbGJuWnBjbTl1YldWdWRITWdabTl5SUhOMGRXUmxiblJ6SUdGdVpDQnpkR0ZtWmlCaWVTQndjbTkyYVdScGJtY2dabkpsWlNCeVpYTnZkWEpqWlhNZ1lXNWtJSFJsWTJodWFXTmhiQ0JoYzNOcGMzUmhibU5sTGp3dmNEND0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfNzhlZWM5MWQ2OWQzNGMzNzlkYTExNjA0ZTVkODgzMDIuc2V0Q29udGVudChpX2ZyYW1lX2Q3YWU5ODNiOTlhZTQwYzBiMjk2NGNjMWM3ZDc1MTQ4KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfY2RhNjk3YjQ0ZTJkNDQ1YjhjNzYzMmNkYjkyZTdlYTcuYmluZFBvcHVwKHBvcHVwXzc4ZWVjOTFkNjlkMzRjMzc5ZGExMTYwNGU1ZDg4MzAyKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfNTUyZmMyYjk3NzlkNDlkMDkxMGMwODg5ZDQwZjZhNmQgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzMyLjM2NjgwNSwgLTg2LjI5OTk2OV0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfMWQ3OGE5YTIxYWY4NGJlMWJjNTZiMTY4ZmJhMTg5NmEgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfZWU3NTFiYjdiNjYxNDhkNDhkMzFmM2RjYzQ4OWZjOGMgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1cxd2NtOTJhVzVuSUZCMVlteHBZeUJJWldGc2RHZzhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa0ZJUnp3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1VGRYQndiM0owYVc1bklHRnVaQ0JEWld4bFluSmhkR2x1WnlCQmJXVnlhV05oNG9DWmN5QklaV0ZzZEdocFpYTjBJRk5qYUc5dmJITThMMkkrUEM5d1BqeHdQaUJVYUdVZ1FXeHNhV0Z1WTJVZ1ptOXlJR0VnU0dWaGJIUm9hV1Z5SUVkbGJtVnlZWFJwYjI1eklHbHpJSGR2Y210cGJtY2dkMmwwYUNCWUlITmphRzl2YkhNZ2FXNGdkR2hwY3lCemRHRjBaU0IwYnlCamNtVmhkR1VnYUdWaGJIUm9hV1Z5SUdWdWRtbHliMjV0Wlc1MGN5Qm1iM0lnYzNSMVpHVnVkSE1nWVc1a0lIUmxZV05vWlhKekxpQlBkbVZ5WVd4c0xDQklaV0ZzZEdobGNpQkhaVzVsY21GMGFXOXVJSE4xY0hCdmNuUnpJRzF2Y21VZ2RHaGhiaUF6T1N3d01EQWdjMk5vYjI5c2N5QnBiaUIwYUdVZ1NHVmhiSFJvZVNCVFkyaHZiMnh6SUZCeWIyZHlZVzBzSUhkb2FXTm9JR2hsYkhCeklHSjFhV3hrSUdobFlXeDBhR2xsY2lCc1pXRnlibWx1WnlCbGJuWnBjbTl1YldWdWRITWdabTl5SUhOMGRXUmxiblJ6SUdGdVpDQnpkR0ZtWmlCaWVTQndjbTkyYVdScGJtY2dabkpsWlNCeVpYTnZkWEpqWlhNZ1lXNWtJSFJsWTJodWFXTmhiQ0JoYzNOcGMzUmhibU5sTGp3dmNEND0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfMWQ3OGE5YTIxYWY4NGJlMWJjNTZiMTY4ZmJhMTg5NmEuc2V0Q29udGVudChpX2ZyYW1lX2VlNzUxYmI3YjY2MTQ4ZDQ4ZDMxZjNkY2M0ODlmYzhjKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfNTUyZmMyYjk3NzlkNDlkMDkxMGMwODg5ZDQwZjZhNmQuYmluZFBvcHVwKHBvcHVwXzFkNzhhOWEyMWFmODRiZTFiYzU2YjE2OGZiYTE4OTZhKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfZGY3NjM4M2EwNWEzNGUxYWI5ZmM1NjM4MDk2YjQ3NjUgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzM0Ljc0NjQ4MSwgLTkyLjI4OTU5NV0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfYWQ0NDM0Yjc4YzI4NDA1ODhhNzVmM2ZmMzNmZGRjMjIgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfNWQ4YmJkMTc5YTRmNDJkNzhkODNhYTExNDQ4Mjg4ZjIgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1cxd2NtOTJhVzVuSUZCMVlteHBZeUJJWldGc2RHZzhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa0ZJUnp3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1VGRYQndiM0owYVc1bklHRnVaQ0JEWld4bFluSmhkR2x1WnlCQmJXVnlhV05oNG9DWmN5QklaV0ZzZEdocFpYTjBJRk5qYUc5dmJITThMMkkrUEM5d1BqeHdQaUJVYUdVZ1FXeHNhV0Z1WTJVZ1ptOXlJR0VnU0dWaGJIUm9hV1Z5SUVkbGJtVnlZWFJwYjI1eklHbHpJSGR2Y210cGJtY2dkMmwwYUNCWUlITmphRzl2YkhNZ2FXNGdkR2hwY3lCemRHRjBaU0IwYnlCamNtVmhkR1VnYUdWaGJIUm9hV1Z5SUdWdWRtbHliMjV0Wlc1MGN5Qm1iM0lnYzNSMVpHVnVkSE1nWVc1a0lIUmxZV05vWlhKekxpQlBkbVZ5WVd4c0xDQklaV0ZzZEdobGNpQkhaVzVsY21GMGFXOXVJSE4xY0hCdmNuUnpJRzF2Y21VZ2RHaGhiaUF6T1N3d01EQWdjMk5vYjI5c2N5QnBiaUIwYUdVZ1NHVmhiSFJvZVNCVFkyaHZiMnh6SUZCeWIyZHlZVzBzSUhkb2FXTm9JR2hsYkhCeklHSjFhV3hrSUdobFlXeDBhR2xsY2lCc1pXRnlibWx1WnlCbGJuWnBjbTl1YldWdWRITWdabTl5SUhOMGRXUmxiblJ6SUdGdVpDQnpkR0ZtWmlCaWVTQndjbTkyYVdScGJtY2dabkpsWlNCeVpYTnZkWEpqWlhNZ1lXNWtJSFJsWTJodWFXTmhiQ0JoYzNOcGMzUmhibU5sTGp3dmNEND0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfYWQ0NDM0Yjc4YzI4NDA1ODhhNzVmM2ZmMzNmZGRjMjIuc2V0Q29udGVudChpX2ZyYW1lXzVkOGJiZDE3OWE0ZjQyZDc4ZDgzYWExMTQ0ODI4OGYyKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfZGY3NjM4M2EwNWEzNGUxYWI5ZmM1NjM4MDk2YjQ3NjUuYmluZFBvcHVwKHBvcHVwX2FkNDQzNGI3OGMyODQwNTg4YTc1ZjNmZjMzZmRkYzIyKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfMzhjZmM1MjJjOTExNDVjYjkzZDQ2N2QwOTMzMjM2YzQgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzMzLjQ0ODM3NywgLTExMi4wNzQwMzddLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzRhZGNkNGY1NWQyZDQ1NDRhODIxZTBiZGIyNmRhNDhkID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lXzMxZGRkYWI3MDI3MTQ3MzQ4YWNhNWNmYTAwMTc5YWUzID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtGSVJ6d3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNVRkWEJ3YjNKMGFXNW5JR0Z1WkNCRFpXeGxZbkpoZEdsdVp5QkJiV1Z5YVdOaDRvQ1pjeUJJWldGc2RHaHBaWE4wSUZOamFHOXZiSE04TDJJK1BDOXdQanh3UGlCVWFHVWdRV3hzYVdGdVkyVWdabTl5SUdFZ1NHVmhiSFJvYVdWeUlFZGxibVZ5WVhScGIyNXpJR2x6SUhkdmNtdHBibWNnZDJsMGFDQllJSE5qYUc5dmJITWdhVzRnZEdocGN5QnpkR0YwWlNCMGJ5QmpjbVZoZEdVZ2FHVmhiSFJvYVdWeUlHVnVkbWx5YjI1dFpXNTBjeUJtYjNJZ2MzUjFaR1Z1ZEhNZ1lXNWtJSFJsWVdOb1pYSnpMaUJQZG1WeVlXeHNMQ0JJWldGc2RHaGxjaUJIWlc1bGNtRjBhVzl1SUhOMWNIQnZjblJ6SUcxdmNtVWdkR2hoYmlBek9Td3dNREFnYzJOb2IyOXNjeUJwYmlCMGFHVWdTR1ZoYkhSb2VTQlRZMmh2YjJ4eklGQnliMmR5WVcwc0lIZG9hV05vSUdobGJIQnpJR0oxYVd4a0lHaGxZV3gwYUdsbGNpQnNaV0Z5Ym1sdVp5QmxiblpwY205dWJXVnVkSE1nWm05eUlITjBkV1JsYm5SeklHRnVaQ0J6ZEdGbVppQmllU0J3Y205MmFXUnBibWNnWm5KbFpTQnlaWE52ZFhKalpYTWdZVzVrSUhSbFkyaHVhV05oYkNCaGMzTnBjM1JoYm1ObExqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzRhZGNkNGY1NWQyZDQ1NDRhODIxZTBiZGIyNmRhNDhkLnNldENvbnRlbnQoaV9mcmFtZV8zMWRkZGFiNzAyNzE0NzM0OGFjYTVjZmEwMDE3OWFlMyk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyXzM4Y2ZjNTIyYzkxMTQ1Y2I5M2Q0NjdkMDkzMzIzNmM0LmJpbmRQb3B1cChwb3B1cF80YWRjZDRmNTVkMmQ0NTQ0YTgyMWUwYmRiMjZkYTQ4ZCkKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyX2YxNzQzOTEzN2QyNTRmMDNhMTRlN2ZmYjFhZjlhZGFlID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFszOC41ODE1NzIsIC0xMjEuNDk0NF0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfMDEyNDg3ZjY4M2YxNGVjYmIwZGRkNmRiMjQ3MDJjOGEgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfOWMwNDNkMTY4ZjY4NDc3NjkyNzAyNDkzZDE2ZmNkYjkgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1cxd2NtOTJhVzVuSUZCMVlteHBZeUJJWldGc2RHZzhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa0ZJUnp3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1VGRYQndiM0owYVc1bklHRnVaQ0JEWld4bFluSmhkR2x1WnlCQmJXVnlhV05oNG9DWmN5QklaV0ZzZEdocFpYTjBJRk5qYUc5dmJITThMMkkrUEM5d1BqeHdQaUJVYUdVZ1FXeHNhV0Z1WTJVZ1ptOXlJR0VnU0dWaGJIUm9hV1Z5SUVkbGJtVnlZWFJwYjI1eklHbHpJSGR2Y210cGJtY2dkMmwwYUNCWUlITmphRzl2YkhNZ2FXNGdkR2hwY3lCemRHRjBaU0IwYnlCamNtVmhkR1VnYUdWaGJIUm9hV1Z5SUdWdWRtbHliMjV0Wlc1MGN5Qm1iM0lnYzNSMVpHVnVkSE1nWVc1a0lIUmxZV05vWlhKekxpQlBkbVZ5WVd4c0xDQklaV0ZzZEdobGNpQkhaVzVsY21GMGFXOXVJSE4xY0hCdmNuUnpJRzF2Y21VZ2RHaGhiaUF6T1N3d01EQWdjMk5vYjI5c2N5QnBiaUIwYUdVZ1NHVmhiSFJvZVNCVFkyaHZiMnh6SUZCeWIyZHlZVzBzSUhkb2FXTm9JR2hsYkhCeklHSjFhV3hrSUdobFlXeDBhR2xsY2lCc1pXRnlibWx1WnlCbGJuWnBjbTl1YldWdWRITWdabTl5SUhOMGRXUmxiblJ6SUdGdVpDQnpkR0ZtWmlCaWVTQndjbTkyYVdScGJtY2dabkpsWlNCeVpYTnZkWEpqWlhNZ1lXNWtJSFJsWTJodWFXTmhiQ0JoYzNOcGMzUmhibU5sTGp3dmNEND0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfMDEyNDg3ZjY4M2YxNGVjYmIwZGRkNmRiMjQ3MDJjOGEuc2V0Q29udGVudChpX2ZyYW1lXzljMDQzZDE2OGY2ODQ3NzY5MjcwMjQ5M2QxNmZjZGI5KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfZjE3NDM5MTM3ZDI1NGYwM2ExNGU3ZmZiMWFmOWFkYWUuYmluZFBvcHVwKHBvcHVwXzAxMjQ4N2Y2ODNmMTRlY2JiMGRkZDZkYjI0NzAyYzhhKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfOTgzNjQzMGY0MTFiNDE0ODhkNTk1ZmVmMTBmMDc4MWMgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzM5LjczOTIzNiwgLTEwNC45OTAyNTFdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2YyOGZlNWZmYTJkYjQ3ZDFiZDdiMjUxNWEwZTNjZDJhID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lX2Q3NGJmNDQ4ZmEzNjQ2YzlhOTAwZWRjYmE4YmU2OTIzID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtGSVJ6d3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNVRkWEJ3YjNKMGFXNW5JR0Z1WkNCRFpXeGxZbkpoZEdsdVp5QkJiV1Z5YVdOaDRvQ1pjeUJJWldGc2RHaHBaWE4wSUZOamFHOXZiSE04TDJJK1BDOXdQanh3UGlCVWFHVWdRV3hzYVdGdVkyVWdabTl5SUdFZ1NHVmhiSFJvYVdWeUlFZGxibVZ5WVhScGIyNXpJR2x6SUhkdmNtdHBibWNnZDJsMGFDQllJSE5qYUc5dmJITWdhVzRnZEdocGN5QnpkR0YwWlNCMGJ5QmpjbVZoZEdVZ2FHVmhiSFJvYVdWeUlHVnVkbWx5YjI1dFpXNTBjeUJtYjNJZ2MzUjFaR1Z1ZEhNZ1lXNWtJSFJsWVdOb1pYSnpMaUJQZG1WeVlXeHNMQ0JJWldGc2RHaGxjaUJIWlc1bGNtRjBhVzl1SUhOMWNIQnZjblJ6SUcxdmNtVWdkR2hoYmlBek9Td3dNREFnYzJOb2IyOXNjeUJwYmlCMGFHVWdTR1ZoYkhSb2VTQlRZMmh2YjJ4eklGQnliMmR5WVcwc0lIZG9hV05vSUdobGJIQnpJR0oxYVd4a0lHaGxZV3gwYUdsbGNpQnNaV0Z5Ym1sdVp5QmxiblpwY205dWJXVnVkSE1nWm05eUlITjBkV1JsYm5SeklHRnVaQ0J6ZEdGbVppQmllU0J3Y205MmFXUnBibWNnWm5KbFpTQnlaWE52ZFhKalpYTWdZVzVrSUhSbFkyaHVhV05oYkNCaGMzTnBjM1JoYm1ObExqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2YyOGZlNWZmYTJkYjQ3ZDFiZDdiMjUxNWEwZTNjZDJhLnNldENvbnRlbnQoaV9mcmFtZV9kNzRiZjQ0OGZhMzY0NmM5YTkwMGVkY2JhOGJlNjkyMyk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyXzk4MzY0MzBmNDExYjQxNDg4ZDU5NWZlZjEwZjA3ODFjLmJpbmRQb3B1cChwb3B1cF9mMjhmZTVmZmEyZGI0N2QxYmQ3YjI1MTVhMGUzY2QyYSkKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyX2E1MjA0YjI3NjkxMTQ0YTc5NGJhMDFiMWIzMjg2YjNkID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFs0MS43NjM3MTEsIC03Mi42ODUwOTNdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzY4YTllMDJiMjIwZDQ2NGI5NTIzMDgyNTkwYzBjM2EyID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lX2Y2OTdlODU2YWRmZjQ4NmY5NWY4ODY3MTA5YTEwYzg2ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtGSVJ6d3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNVRkWEJ3YjNKMGFXNW5JR0Z1WkNCRFpXeGxZbkpoZEdsdVp5QkJiV1Z5YVdOaDRvQ1pjeUJJWldGc2RHaHBaWE4wSUZOamFHOXZiSE04TDJJK1BDOXdQanh3UGlCVWFHVWdRV3hzYVdGdVkyVWdabTl5SUdFZ1NHVmhiSFJvYVdWeUlFZGxibVZ5WVhScGIyNXpJR2x6SUhkdmNtdHBibWNnZDJsMGFDQllJSE5qYUc5dmJITWdhVzRnZEdocGN5QnpkR0YwWlNCMGJ5QmpjbVZoZEdVZ2FHVmhiSFJvYVdWeUlHVnVkbWx5YjI1dFpXNTBjeUJtYjNJZ2MzUjFaR1Z1ZEhNZ1lXNWtJSFJsWVdOb1pYSnpMaUJQZG1WeVlXeHNMQ0JJWldGc2RHaGxjaUJIWlc1bGNtRjBhVzl1SUhOMWNIQnZjblJ6SUcxdmNtVWdkR2hoYmlBek9Td3dNREFnYzJOb2IyOXNjeUJwYmlCMGFHVWdTR1ZoYkhSb2VTQlRZMmh2YjJ4eklGQnliMmR5WVcwc0lIZG9hV05vSUdobGJIQnpJR0oxYVd4a0lHaGxZV3gwYUdsbGNpQnNaV0Z5Ym1sdVp5QmxiblpwY205dWJXVnVkSE1nWm05eUlITjBkV1JsYm5SeklHRnVaQ0J6ZEdGbVppQmllU0J3Y205MmFXUnBibWNnWm5KbFpTQnlaWE52ZFhKalpYTWdZVzVrSUhSbFkyaHVhV05oYkNCaGMzTnBjM1JoYm1ObExqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzY4YTllMDJiMjIwZDQ2NGI5NTIzMDgyNTkwYzBjM2EyLnNldENvbnRlbnQoaV9mcmFtZV9mNjk3ZTg1NmFkZmY0ODZmOTVmODg2NzEwOWExMGM4Nik7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyX2E1MjA0YjI3NjkxMTQ0YTc5NGJhMDFiMWIzMjg2YjNkLmJpbmRQb3B1cChwb3B1cF82OGE5ZTAyYjIyMGQ0NjRiOTUyMzA4MjU5MGMwYzNhMikKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyXzFlMGVmOWExM2I0MjQ5NGRhMjY3NGNhNThiZTUwNjEzID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFszOS4xNTgxNjgsIC03NS41MjQzNjhdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzk4ODhjYTM3ODk5NTQ5NTFiOWY3MWMzMDM2ZWMwZGQwID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lXzc0YjcxNmU0OTBhMzQyNTM5MDQyZDAyMjgzOWIwOWNlID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtGSVJ6d3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNVRkWEJ3YjNKMGFXNW5JR0Z1WkNCRFpXeGxZbkpoZEdsdVp5QkJiV1Z5YVdOaDRvQ1pjeUJJWldGc2RHaHBaWE4wSUZOamFHOXZiSE04TDJJK1BDOXdQanh3UGlCVWFHVWdRV3hzYVdGdVkyVWdabTl5SUdFZ1NHVmhiSFJvYVdWeUlFZGxibVZ5WVhScGIyNXpJR2x6SUhkdmNtdHBibWNnZDJsMGFDQllJSE5qYUc5dmJITWdhVzRnZEdocGN5QnpkR0YwWlNCMGJ5QmpjbVZoZEdVZ2FHVmhiSFJvYVdWeUlHVnVkbWx5YjI1dFpXNTBjeUJtYjNJZ2MzUjFaR1Z1ZEhNZ1lXNWtJSFJsWVdOb1pYSnpMaUJQZG1WeVlXeHNMQ0JJWldGc2RHaGxjaUJIWlc1bGNtRjBhVzl1SUhOMWNIQnZjblJ6SUcxdmNtVWdkR2hoYmlBek9Td3dNREFnYzJOb2IyOXNjeUJwYmlCMGFHVWdTR1ZoYkhSb2VTQlRZMmh2YjJ4eklGQnliMmR5WVcwc0lIZG9hV05vSUdobGJIQnpJR0oxYVd4a0lHaGxZV3gwYUdsbGNpQnNaV0Z5Ym1sdVp5QmxiblpwY205dWJXVnVkSE1nWm05eUlITjBkV1JsYm5SeklHRnVaQ0J6ZEdGbVppQmllU0J3Y205MmFXUnBibWNnWm5KbFpTQnlaWE52ZFhKalpYTWdZVzVrSUhSbFkyaHVhV05oYkNCaGMzTnBjM1JoYm1ObExqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzk4ODhjYTM3ODk5NTQ5NTFiOWY3MWMzMDM2ZWMwZGQwLnNldENvbnRlbnQoaV9mcmFtZV83NGI3MTZlNDkwYTM0MjUzOTA0MmQwMjI4MzliMDljZSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyXzFlMGVmOWExM2I0MjQ5NGRhMjY3NGNhNThiZTUwNjEzLmJpbmRQb3B1cChwb3B1cF85ODg4Y2EzNzg5OTU0OTUxYjlmNzFjMzAzNmVjMGRkMCkKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyX2NmNzRjYWQ5YmIzNTQxYzY5MThhYjVjNzA4NTQ4NTgwID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFszMC40MzgyNTYsIC04NC4yODA3MzNdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzU4NGVhODU5YjYwNTQ3MWFhNzA3YzFhNzRmZTMyNmY3ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lXzU1NzA3N2U4YWEyMDRlNTNhNTg5NzkwYmI3OGNjYzBkID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtGSVJ6d3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNVRkWEJ3YjNKMGFXNW5JR0Z1WkNCRFpXeGxZbkpoZEdsdVp5QkJiV1Z5YVdOaDRvQ1pjeUJJWldGc2RHaHBaWE4wSUZOamFHOXZiSE04TDJJK1BDOXdQanh3UGlCVWFHVWdRV3hzYVdGdVkyVWdabTl5SUdFZ1NHVmhiSFJvYVdWeUlFZGxibVZ5WVhScGIyNXpJR2x6SUhkdmNtdHBibWNnZDJsMGFDQllJSE5qYUc5dmJITWdhVzRnZEdocGN5QnpkR0YwWlNCMGJ5QmpjbVZoZEdVZ2FHVmhiSFJvYVdWeUlHVnVkbWx5YjI1dFpXNTBjeUJtYjNJZ2MzUjFaR1Z1ZEhNZ1lXNWtJSFJsWVdOb1pYSnpMaUJQZG1WeVlXeHNMQ0JJWldGc2RHaGxjaUJIWlc1bGNtRjBhVzl1SUhOMWNIQnZjblJ6SUcxdmNtVWdkR2hoYmlBek9Td3dNREFnYzJOb2IyOXNjeUJwYmlCMGFHVWdTR1ZoYkhSb2VTQlRZMmh2YjJ4eklGQnliMmR5WVcwc0lIZG9hV05vSUdobGJIQnpJR0oxYVd4a0lHaGxZV3gwYUdsbGNpQnNaV0Z5Ym1sdVp5QmxiblpwY205dWJXVnVkSE1nWm05eUlITjBkV1JsYm5SeklHRnVaQ0J6ZEdGbVppQmllU0J3Y205MmFXUnBibWNnWm5KbFpTQnlaWE52ZFhKalpYTWdZVzVrSUhSbFkyaHVhV05oYkNCaGMzTnBjM1JoYm1ObExqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzU4NGVhODU5YjYwNTQ3MWFhNzA3YzFhNzRmZTMyNmY3LnNldENvbnRlbnQoaV9mcmFtZV81NTcwNzdlOGFhMjA0ZTUzYTU4OTc5MGJiNzhjY2MwZCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyX2NmNzRjYWQ5YmIzNTQxYzY5MThhYjVjNzA4NTQ4NTgwLmJpbmRQb3B1cChwb3B1cF81ODRlYTg1OWI2MDU0NzFhYTcwN2MxYTc0ZmUzMjZmNykKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyXzk5ZDU3OTBjMGViYTRhMDNiNzg3NjA4NDE5N2ZiNmQ0ID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFszMy43NDg5OTUsIC04NC4zODc5ODJdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzlkNjQ1YmI2OTUwNzRjNTY5ZDkwZGM2NjA3M2UwNWYyID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lX2U2NjE5OTM3ZjUyYzRjMTc4OTllODcyODRlNzdhZTI0ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtGSVJ6d3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNVRkWEJ3YjNKMGFXNW5JR0Z1WkNCRFpXeGxZbkpoZEdsdVp5QkJiV1Z5YVdOaDRvQ1pjeUJJWldGc2RHaHBaWE4wSUZOamFHOXZiSE04TDJJK1BDOXdQanh3UGlCVWFHVWdRV3hzYVdGdVkyVWdabTl5SUdFZ1NHVmhiSFJvYVdWeUlFZGxibVZ5WVhScGIyNXpJR2x6SUhkdmNtdHBibWNnZDJsMGFDQllJSE5qYUc5dmJITWdhVzRnZEdocGN5QnpkR0YwWlNCMGJ5QmpjbVZoZEdVZ2FHVmhiSFJvYVdWeUlHVnVkbWx5YjI1dFpXNTBjeUJtYjNJZ2MzUjFaR1Z1ZEhNZ1lXNWtJSFJsWVdOb1pYSnpMaUJQZG1WeVlXeHNMQ0JJWldGc2RHaGxjaUJIWlc1bGNtRjBhVzl1SUhOMWNIQnZjblJ6SUcxdmNtVWdkR2hoYmlBek9Td3dNREFnYzJOb2IyOXNjeUJwYmlCMGFHVWdTR1ZoYkhSb2VTQlRZMmh2YjJ4eklGQnliMmR5WVcwc0lIZG9hV05vSUdobGJIQnpJR0oxYVd4a0lHaGxZV3gwYUdsbGNpQnNaV0Z5Ym1sdVp5QmxiblpwY205dWJXVnVkSE1nWm05eUlITjBkV1JsYm5SeklHRnVaQ0J6ZEdGbVppQmllU0J3Y205MmFXUnBibWNnWm5KbFpTQnlaWE52ZFhKalpYTWdZVzVrSUhSbFkyaHVhV05oYkNCaGMzTnBjM1JoYm1ObExqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzlkNjQ1YmI2OTUwNzRjNTY5ZDkwZGM2NjA3M2UwNWYyLnNldENvbnRlbnQoaV9mcmFtZV9lNjYxOTkzN2Y1MmM0YzE3ODk5ZTg3Mjg0ZTc3YWUyNCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyXzk5ZDU3OTBjMGViYTRhMDNiNzg3NjA4NDE5N2ZiNmQ0LmJpbmRQb3B1cChwb3B1cF85ZDY0NWJiNjk1MDc0YzU2OWQ5MGRjNjYwNzNlMDVmMikKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyX2ExNTdkYTA1OTM1NDQ2Y2U5NjNjOTMwY2JiYmE4YTNkID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFsyMS4zMDY5NDQsIC0xNTcuODU4MzMzXSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWNvbjogbmV3IEwuSWNvbi5EZWZhdWx0KCksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkuYWRkVG8obWFya2VyX2NsdXN0ZXJfNDdkNDQ3NmQyZGE5NDhmNzkwOWNhODdmOTU2ZjgxOWMpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9iMWQ2NTA5ZDI4NTE0ODhlODc2MTdiNjhjMDFjZmRhNCA9IEwucG9wdXAoe21heFdpZHRoOiAnMjY1MCcKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaV9mcmFtZV9kMzYxYzY2ZDcwNTQ0NDk4YjI3NDJmY2YzYzEwZTNmMSA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBOGFERStTVzF3Y205MmFXNW5JRkIxWW14cFl5QklaV0ZzZEdnOEwyZ3hQanhpY2o0OGNENDhjM1J5YjI1blBrRklSend2YzNSeWIyNW5Qand2Y0Q0OGNENDhZajVUZFhCd2IzSjBhVzVuSUdGdVpDQkRaV3hsWW5KaGRHbHVaeUJCYldWeWFXTmg0b0NaY3lCSVpXRnNkR2hwWlhOMElGTmphRzl2YkhNOEwySStQQzl3UGp4d1BpQlVhR1VnUVd4c2FXRnVZMlVnWm05eUlHRWdTR1ZoYkhSb2FXVnlJRWRsYm1WeVlYUnBiMjV6SUdseklIZHZjbXRwYm1jZ2QybDBhQ0JZSUhOamFHOXZiSE1nYVc0Z2RHaHBjeUJ6ZEdGMFpTQjBieUJqY21WaGRHVWdhR1ZoYkhSb2FXVnlJR1Z1ZG1seWIyNXRaVzUwY3lCbWIzSWdjM1IxWkdWdWRITWdZVzVrSUhSbFlXTm9aWEp6TGlCUGRtVnlZV3hzTENCSVpXRnNkR2hsY2lCSFpXNWxjbUYwYVc5dUlITjFjSEJ2Y25SeklHMXZjbVVnZEdoaGJpQXpPU3d3TURBZ2MyTm9iMjlzY3lCcGJpQjBhR1VnU0dWaGJIUm9lU0JUWTJodmIyeHpJRkJ5YjJkeVlXMHNJSGRvYVdOb0lHaGxiSEJ6SUdKMWFXeGtJR2hsWVd4MGFHbGxjaUJzWldGeWJtbHVaeUJsYm5acGNtOXViV1Z1ZEhNZ1ptOXlJSE4wZFdSbGJuUnpJR0Z1WkNCemRHRm1aaUJpZVNCd2NtOTJhV1JwYm1jZ1puSmxaU0J5WlhOdmRYSmpaWE1nWVc1a0lIUmxZMmh1YVdOaGJDQmhjM05wYzNSaGJtTmxMand2Y0Q0PSIgd2lkdGg9IjUwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjMwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9iMWQ2NTA5ZDI4NTE0ODhlODc2MTdiNjhjMDFjZmRhNC5zZXRDb250ZW50KGlfZnJhbWVfZDM2MWM2NmQ3MDU0NDQ5OGIyNzQyZmNmM2MxMGUzZjEpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIG1hcmtlcl9hMTU3ZGEwNTkzNTQ0NmNlOTYzYzkzMGNiYmJhOGEzZC5iaW5kUG9wdXAocG9wdXBfYjFkNjUwOWQyODUxNDg4ZTg3NjE3YjY4YzAxY2ZkYTQpCiAgICAgICAgICAgIDsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgdmFyIG1hcmtlcl9iYTQ0MDJjYjZhODc0ZmY5YTUzNzM3ZDVjZWYyMDBmYiA9IEwubWFya2VyKAogICAgICAgICAgICBbNDEuNTg2ODM1LCAtOTMuNjI0OTU5XSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWNvbjogbmV3IEwuSWNvbi5EZWZhdWx0KCksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkuYWRkVG8obWFya2VyX2NsdXN0ZXJfNDdkNDQ3NmQyZGE5NDhmNzkwOWNhODdmOTU2ZjgxOWMpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9lOTE2N2UxN2IwYjE0NzgyODNlNTBmZWJiYmI3MTUxNyA9IEwucG9wdXAoe21heFdpZHRoOiAnMjY1MCcKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaV9mcmFtZV82MDgwZTdjN2U3NjQ0NzZmYTY2NjNjYjE1NTA4YzNlNyA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBOGFERStTVzF3Y205MmFXNW5JRkIxWW14cFl5QklaV0ZzZEdnOEwyZ3hQanhpY2o0OGNENDhjM1J5YjI1blBrRklSend2YzNSeWIyNW5Qand2Y0Q0OGNENDhZajVUZFhCd2IzSjBhVzVuSUdGdVpDQkRaV3hsWW5KaGRHbHVaeUJCYldWeWFXTmg0b0NaY3lCSVpXRnNkR2hwWlhOMElGTmphRzl2YkhNOEwySStQQzl3UGp4d1BpQlVhR1VnUVd4c2FXRnVZMlVnWm05eUlHRWdTR1ZoYkhSb2FXVnlJRWRsYm1WeVlYUnBiMjV6SUdseklIZHZjbXRwYm1jZ2QybDBhQ0JZSUhOamFHOXZiSE1nYVc0Z2RHaHBjeUJ6ZEdGMFpTQjBieUJqY21WaGRHVWdhR1ZoYkhSb2FXVnlJR1Z1ZG1seWIyNXRaVzUwY3lCbWIzSWdjM1IxWkdWdWRITWdZVzVrSUhSbFlXTm9aWEp6TGlCUGRtVnlZV3hzTENCSVpXRnNkR2hsY2lCSFpXNWxjbUYwYVc5dUlITjFjSEJ2Y25SeklHMXZjbVVnZEdoaGJpQXpPU3d3TURBZ2MyTm9iMjlzY3lCcGJpQjBhR1VnU0dWaGJIUm9lU0JUWTJodmIyeHpJRkJ5YjJkeVlXMHNJSGRvYVdOb0lHaGxiSEJ6SUdKMWFXeGtJR2hsWVd4MGFHbGxjaUJzWldGeWJtbHVaeUJsYm5acGNtOXViV1Z1ZEhNZ1ptOXlJSE4wZFdSbGJuUnpJR0Z1WkNCemRHRm1aaUJpZVNCd2NtOTJhV1JwYm1jZ1puSmxaU0J5WlhOdmRYSmpaWE1nWVc1a0lIUmxZMmh1YVdOaGJDQmhjM05wYzNSaGJtTmxMand2Y0Q0PSIgd2lkdGg9IjUwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjMwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9lOTE2N2UxN2IwYjE0NzgyODNlNTBmZWJiYmI3MTUxNy5zZXRDb250ZW50KGlfZnJhbWVfNjA4MGU3YzdlNzY0NDc2ZmE2NjYzY2IxNTUwOGMzZTcpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIG1hcmtlcl9iYTQ0MDJjYjZhODc0ZmY5YTUzNzM3ZDVjZWYyMDBmYi5iaW5kUG9wdXAocG9wdXBfZTkxNjdlMTdiMGIxNDc4MjgzZTUwZmViYmJiNzE1MTcpCiAgICAgICAgICAgIDsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgdmFyIG1hcmtlcl82ZmU0ODhhZjI1MDQ0NTRhYjI0MzgzM2QxMGMwYjBkNyA9IEwubWFya2VyKAogICAgICAgICAgICBbNDMuNjE1MDE5LCAtMTE2LjIwMjMxNF0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfMjgxNTg5MmQyMmI2NDZjNzg3MTQwMzc4YzBhYmY1ZGYgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfNDhmMjM5Mjk0ZmQyNGVmYTgwMWQ2OTk3MmRkZDAzYTYgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1cxd2NtOTJhVzVuSUZCMVlteHBZeUJJWldGc2RHZzhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa0ZJUnp3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1VGRYQndiM0owYVc1bklHRnVaQ0JEWld4bFluSmhkR2x1WnlCQmJXVnlhV05oNG9DWmN5QklaV0ZzZEdocFpYTjBJRk5qYUc5dmJITThMMkkrUEM5d1BqeHdQaUJVYUdVZ1FXeHNhV0Z1WTJVZ1ptOXlJR0VnU0dWaGJIUm9hV1Z5SUVkbGJtVnlZWFJwYjI1eklHbHpJSGR2Y210cGJtY2dkMmwwYUNCWUlITmphRzl2YkhNZ2FXNGdkR2hwY3lCemRHRjBaU0IwYnlCamNtVmhkR1VnYUdWaGJIUm9hV1Z5SUdWdWRtbHliMjV0Wlc1MGN5Qm1iM0lnYzNSMVpHVnVkSE1nWVc1a0lIUmxZV05vWlhKekxpQlBkbVZ5WVd4c0xDQklaV0ZzZEdobGNpQkhaVzVsY21GMGFXOXVJSE4xY0hCdmNuUnpJRzF2Y21VZ2RHaGhiaUF6T1N3d01EQWdjMk5vYjI5c2N5QnBiaUIwYUdVZ1NHVmhiSFJvZVNCVFkyaHZiMnh6SUZCeWIyZHlZVzBzSUhkb2FXTm9JR2hsYkhCeklHSjFhV3hrSUdobFlXeDBhR2xsY2lCc1pXRnlibWx1WnlCbGJuWnBjbTl1YldWdWRITWdabTl5SUhOMGRXUmxiblJ6SUdGdVpDQnpkR0ZtWmlCaWVTQndjbTkyYVdScGJtY2dabkpsWlNCeVpYTnZkWEpqWlhNZ1lXNWtJSFJsWTJodWFXTmhiQ0JoYzNOcGMzUmhibU5sTGp3dmNEND0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfMjgxNTg5MmQyMmI2NDZjNzg3MTQwMzc4YzBhYmY1ZGYuc2V0Q29udGVudChpX2ZyYW1lXzQ4ZjIzOTI5NGZkMjRlZmE4MDFkNjk5NzJkZGQwM2E2KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfNmZlNDg4YWYyNTA0NDU0YWIyNDM4MzNkMTBjMGIwZDcuYmluZFBvcHVwKHBvcHVwXzI4MTU4OTJkMjJiNjQ2Yzc4NzE0MDM3OGMwYWJmNWRmKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfNGQ5MzI1Mjk4ZjNjNGI4ZDg0MGRiMmIzNjc4MGJhNjYgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzM5Ljc4MTcyMSwgLTg5LjY1MDE0OF0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfYTJjZmM4YzZiMzVkNGQ2ZWJjMTAzY2M4YzgzYTBlNDkgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfZTRmNDY5NTY2N2VmNDQ2MWJhY2MxNWUyMzE1NDcyN2IgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1cxd2NtOTJhVzVuSUZCMVlteHBZeUJJWldGc2RHZzhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa0ZJUnp3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1VGRYQndiM0owYVc1bklHRnVaQ0JEWld4bFluSmhkR2x1WnlCQmJXVnlhV05oNG9DWmN5QklaV0ZzZEdocFpYTjBJRk5qYUc5dmJITThMMkkrUEM5d1BqeHdQaUJVYUdVZ1FXeHNhV0Z1WTJVZ1ptOXlJR0VnU0dWaGJIUm9hV1Z5SUVkbGJtVnlZWFJwYjI1eklHbHpJSGR2Y210cGJtY2dkMmwwYUNCWUlITmphRzl2YkhNZ2FXNGdkR2hwY3lCemRHRjBaU0IwYnlCamNtVmhkR1VnYUdWaGJIUm9hV1Z5SUdWdWRtbHliMjV0Wlc1MGN5Qm1iM0lnYzNSMVpHVnVkSE1nWVc1a0lIUmxZV05vWlhKekxpQlBkbVZ5WVd4c0xDQklaV0ZzZEdobGNpQkhaVzVsY21GMGFXOXVJSE4xY0hCdmNuUnpJRzF2Y21VZ2RHaGhiaUF6T1N3d01EQWdjMk5vYjI5c2N5QnBiaUIwYUdVZ1NHVmhiSFJvZVNCVFkyaHZiMnh6SUZCeWIyZHlZVzBzSUhkb2FXTm9JR2hsYkhCeklHSjFhV3hrSUdobFlXeDBhR2xsY2lCc1pXRnlibWx1WnlCbGJuWnBjbTl1YldWdWRITWdabTl5SUhOMGRXUmxiblJ6SUdGdVpDQnpkR0ZtWmlCaWVTQndjbTkyYVdScGJtY2dabkpsWlNCeVpYTnZkWEpqWlhNZ1lXNWtJSFJsWTJodWFXTmhiQ0JoYzNOcGMzUmhibU5sTGp3dmNEND0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfYTJjZmM4YzZiMzVkNGQ2ZWJjMTAzY2M4YzgzYTBlNDkuc2V0Q29udGVudChpX2ZyYW1lX2U0ZjQ2OTU2NjdlZjQ0NjFiYWNjMTVlMjMxNTQ3MjdiKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfNGQ5MzI1Mjk4ZjNjNGI4ZDg0MGRiMmIzNjc4MGJhNjYuYmluZFBvcHVwKHBvcHVwX2EyY2ZjOGM2YjM1ZDRkNmViYzEwM2NjOGM4M2EwZTQ5KQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfMWY0YWZjZmU0NGViNDFkZWE3NjAyOWQ5NmIwZjZlNjQgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzM5Ljc2ODQwMywgLTg2LjE1ODA2OF0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfY2I1NjY4OTk1ZDVhNGY0YmI4MmNlZTQwZGE2ZTU2OTkgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfZTZjYjJhOWQ5MmMyNDBlNzgyOTQyNTA0NmU4NGU3ZGEgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1cxd2NtOTJhVzVuSUZCMVlteHBZeUJJWldGc2RHZzhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa0ZJUnp3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1VGRYQndiM0owYVc1bklHRnVaQ0JEWld4bFluSmhkR2x1WnlCQmJXVnlhV05oNG9DWmN5QklaV0ZzZEdocFpYTjBJRk5qYUc5dmJITThMMkkrUEM5d1BqeHdQaUJVYUdVZ1FXeHNhV0Z1WTJVZ1ptOXlJR0VnU0dWaGJIUm9hV1Z5SUVkbGJtVnlZWFJwYjI1eklHbHpJSGR2Y210cGJtY2dkMmwwYUNCWUlITmphRzl2YkhNZ2FXNGdkR2hwY3lCemRHRjBaU0IwYnlCamNtVmhkR1VnYUdWaGJIUm9hV1Z5SUdWdWRtbHliMjV0Wlc1MGN5Qm1iM0lnYzNSMVpHVnVkSE1nWVc1a0lIUmxZV05vWlhKekxpQlBkbVZ5WVd4c0xDQklaV0ZzZEdobGNpQkhaVzVsY21GMGFXOXVJSE4xY0hCdmNuUnpJRzF2Y21VZ2RHaGhiaUF6T1N3d01EQWdjMk5vYjI5c2N5QnBiaUIwYUdVZ1NHVmhiSFJvZVNCVFkyaHZiMnh6SUZCeWIyZHlZVzBzSUhkb2FXTm9JR2hsYkhCeklHSjFhV3hrSUdobFlXeDBhR2xsY2lCc1pXRnlibWx1WnlCbGJuWnBjbTl1YldWdWRITWdabTl5SUhOMGRXUmxiblJ6SUdGdVpDQnpkR0ZtWmlCaWVTQndjbTkyYVdScGJtY2dabkpsWlNCeVpYTnZkWEpqWlhNZ1lXNWtJSFJsWTJodWFXTmhiQ0JoYzNOcGMzUmhibU5sTGp3dmNEND0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfY2I1NjY4OTk1ZDVhNGY0YmI4MmNlZTQwZGE2ZTU2OTkuc2V0Q29udGVudChpX2ZyYW1lX2U2Y2IyYTlkOTJjMjQwZTc4Mjk0MjUwNDZlODRlN2RhKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfMWY0YWZjZmU0NGViNDFkZWE3NjAyOWQ5NmIwZjZlNjQuYmluZFBvcHVwKHBvcHVwX2NiNTY2ODk5NWQ1YTRmNGJiODJjZWU0MGRhNmU1Njk5KQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfY2VhYzg2NDBiNWJmNGRiNDk5ZDY4ZDQ5MzFkZGRkNGUgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzM5LjA0NzM0NSwgLTk1LjY3NTE1OF0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfZjY0Zjk3ODc1NzBhNGQxYjg3ZDc0ZGJkOGNiZGFjY2MgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfZTY2Zjc4YmQzMDcxNDE5ODgxOGI3NTQ0NWFiMGU0Y2EgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1cxd2NtOTJhVzVuSUZCMVlteHBZeUJJWldGc2RHZzhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa0ZJUnp3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1VGRYQndiM0owYVc1bklHRnVaQ0JEWld4bFluSmhkR2x1WnlCQmJXVnlhV05oNG9DWmN5QklaV0ZzZEdocFpYTjBJRk5qYUc5dmJITThMMkkrUEM5d1BqeHdQaUJVYUdVZ1FXeHNhV0Z1WTJVZ1ptOXlJR0VnU0dWaGJIUm9hV1Z5SUVkbGJtVnlZWFJwYjI1eklHbHpJSGR2Y210cGJtY2dkMmwwYUNCWUlITmphRzl2YkhNZ2FXNGdkR2hwY3lCemRHRjBaU0IwYnlCamNtVmhkR1VnYUdWaGJIUm9hV1Z5SUdWdWRtbHliMjV0Wlc1MGN5Qm1iM0lnYzNSMVpHVnVkSE1nWVc1a0lIUmxZV05vWlhKekxpQlBkbVZ5WVd4c0xDQklaV0ZzZEdobGNpQkhaVzVsY21GMGFXOXVJSE4xY0hCdmNuUnpJRzF2Y21VZ2RHaGhiaUF6T1N3d01EQWdjMk5vYjI5c2N5QnBiaUIwYUdVZ1NHVmhiSFJvZVNCVFkyaHZiMnh6SUZCeWIyZHlZVzBzSUhkb2FXTm9JR2hsYkhCeklHSjFhV3hrSUdobFlXeDBhR2xsY2lCc1pXRnlibWx1WnlCbGJuWnBjbTl1YldWdWRITWdabTl5SUhOMGRXUmxiblJ6SUdGdVpDQnpkR0ZtWmlCaWVTQndjbTkyYVdScGJtY2dabkpsWlNCeVpYTnZkWEpqWlhNZ1lXNWtJSFJsWTJodWFXTmhiQ0JoYzNOcGMzUmhibU5sTGp3dmNEND0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfZjY0Zjk3ODc1NzBhNGQxYjg3ZDc0ZGJkOGNiZGFjY2Muc2V0Q29udGVudChpX2ZyYW1lX2U2NmY3OGJkMzA3MTQxOTg4MThiNzU0NDVhYjBlNGNhKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfY2VhYzg2NDBiNWJmNGRiNDk5ZDY4ZDQ5MzFkZGRkNGUuYmluZFBvcHVwKHBvcHVwX2Y2NGY5Nzg3NTcwYTRkMWI4N2Q3NGRiZDhjYmRhY2NjKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfYTQ0YzVhZjg5NjkyNDUxM2EzMjdiOTRmMzIxZDMxMzcgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzM4LjIwMDkwNSwgLTg0Ljg3MzI4M10sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfNjE5NzdjZWEzMjQ4NGY3YzgwZjg5MjA0NjQ5YWIwMzIgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfNDQyYmMwZWYwYjVjNDQ5ODhkNzc5ZDI1NjExMzM0NDQgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1cxd2NtOTJhVzVuSUZCMVlteHBZeUJJWldGc2RHZzhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa0ZJUnp3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1VGRYQndiM0owYVc1bklHRnVaQ0JEWld4bFluSmhkR2x1WnlCQmJXVnlhV05oNG9DWmN5QklaV0ZzZEdocFpYTjBJRk5qYUc5dmJITThMMkkrUEM5d1BqeHdQaUJVYUdVZ1FXeHNhV0Z1WTJVZ1ptOXlJR0VnU0dWaGJIUm9hV1Z5SUVkbGJtVnlZWFJwYjI1eklHbHpJSGR2Y210cGJtY2dkMmwwYUNCWUlITmphRzl2YkhNZ2FXNGdkR2hwY3lCemRHRjBaU0IwYnlCamNtVmhkR1VnYUdWaGJIUm9hV1Z5SUdWdWRtbHliMjV0Wlc1MGN5Qm1iM0lnYzNSMVpHVnVkSE1nWVc1a0lIUmxZV05vWlhKekxpQlBkbVZ5WVd4c0xDQklaV0ZzZEdobGNpQkhaVzVsY21GMGFXOXVJSE4xY0hCdmNuUnpJRzF2Y21VZ2RHaGhiaUF6T1N3d01EQWdjMk5vYjI5c2N5QnBiaUIwYUdVZ1NHVmhiSFJvZVNCVFkyaHZiMnh6SUZCeWIyZHlZVzBzSUhkb2FXTm9JR2hsYkhCeklHSjFhV3hrSUdobFlXeDBhR2xsY2lCc1pXRnlibWx1WnlCbGJuWnBjbTl1YldWdWRITWdabTl5SUhOMGRXUmxiblJ6SUdGdVpDQnpkR0ZtWmlCaWVTQndjbTkyYVdScGJtY2dabkpsWlNCeVpYTnZkWEpqWlhNZ1lXNWtJSFJsWTJodWFXTmhiQ0JoYzNOcGMzUmhibU5sTGp3dmNEND0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfNjE5NzdjZWEzMjQ4NGY3YzgwZjg5MjA0NjQ5YWIwMzIuc2V0Q29udGVudChpX2ZyYW1lXzQ0MmJjMGVmMGI1YzQ0OTg4ZDc3OWQyNTYxMTMzNDQ0KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfYTQ0YzVhZjg5NjkyNDUxM2EzMjdiOTRmMzIxZDMxMzcuYmluZFBvcHVwKHBvcHVwXzYxOTc3Y2VhMzI0ODRmN2M4MGY4OTIwNDY0OWFiMDMyKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfYjczNDM4Nzg3NTdiNDRmM2JhNmQwNTNjZDk1NGM2YzIgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzMwLjQ1ODI4MywgLTkxLjE0MDMyXSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWNvbjogbmV3IEwuSWNvbi5EZWZhdWx0KCksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkuYWRkVG8obWFya2VyX2NsdXN0ZXJfNDdkNDQ3NmQyZGE5NDhmNzkwOWNhODdmOTU2ZjgxOWMpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9kMjc2NGQ4ZTg5NTY0YzhhODY4YTEwZjA2ZjdmNGU5YiA9IEwucG9wdXAoe21heFdpZHRoOiAnMjY1MCcKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaV9mcmFtZV9iZThlNTE1MTY1NjQ0NTM1YTZiZTZiNGRkYzUzM2I0NiA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBOGFERStTVzF3Y205MmFXNW5JRkIxWW14cFl5QklaV0ZzZEdnOEwyZ3hQanhpY2o0OGNENDhjM1J5YjI1blBrRklSend2YzNSeWIyNW5Qand2Y0Q0OGNENDhZajVUZFhCd2IzSjBhVzVuSUdGdVpDQkRaV3hsWW5KaGRHbHVaeUJCYldWeWFXTmg0b0NaY3lCSVpXRnNkR2hwWlhOMElGTmphRzl2YkhNOEwySStQQzl3UGp4d1BpQlVhR1VnUVd4c2FXRnVZMlVnWm05eUlHRWdTR1ZoYkhSb2FXVnlJRWRsYm1WeVlYUnBiMjV6SUdseklIZHZjbXRwYm1jZ2QybDBhQ0JZSUhOamFHOXZiSE1nYVc0Z2RHaHBjeUJ6ZEdGMFpTQjBieUJqY21WaGRHVWdhR1ZoYkhSb2FXVnlJR1Z1ZG1seWIyNXRaVzUwY3lCbWIzSWdjM1IxWkdWdWRITWdZVzVrSUhSbFlXTm9aWEp6TGlCUGRtVnlZV3hzTENCSVpXRnNkR2hsY2lCSFpXNWxjbUYwYVc5dUlITjFjSEJ2Y25SeklHMXZjbVVnZEdoaGJpQXpPU3d3TURBZ2MyTm9iMjlzY3lCcGJpQjBhR1VnU0dWaGJIUm9lU0JUWTJodmIyeHpJRkJ5YjJkeVlXMHNJSGRvYVdOb0lHaGxiSEJ6SUdKMWFXeGtJR2hsWVd4MGFHbGxjaUJzWldGeWJtbHVaeUJsYm5acGNtOXViV1Z1ZEhNZ1ptOXlJSE4wZFdSbGJuUnpJR0Z1WkNCemRHRm1aaUJpZVNCd2NtOTJhV1JwYm1jZ1puSmxaU0J5WlhOdmRYSmpaWE1nWVc1a0lIUmxZMmh1YVdOaGJDQmhjM05wYzNSaGJtTmxMand2Y0Q0PSIgd2lkdGg9IjUwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjMwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9kMjc2NGQ4ZTg5NTY0YzhhODY4YTEwZjA2ZjdmNGU5Yi5zZXRDb250ZW50KGlfZnJhbWVfYmU4ZTUxNTE2NTY0NDUzNWE2YmU2YjRkZGM1MzNiNDYpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIG1hcmtlcl9iNzM0Mzg3ODc1N2I0NGYzYmE2ZDA1M2NkOTU0YzZjMi5iaW5kUG9wdXAocG9wdXBfZDI3NjRkOGU4OTU2NGM4YTg2OGExMGYwNmY3ZjRlOWIpCiAgICAgICAgICAgIDsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgdmFyIG1hcmtlcl81YmY1NWJjZWVjMmQ0MzBlOWMyNzA4MTE5ZmIzZTA2NSA9IEwubWFya2VyKAogICAgICAgICAgICBbNDIuMzYwMDgyLCAtNzEuMDU4ODhdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzYyYTFmYTczYjExMDQzYzE5Njk4Y2UwYjNmZmZjOGM0ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lX2JhNjc4N2NkMWZiZTQ1ODA5YzU0NTEyOTgyNjRmZmNmID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtGSVJ6d3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNVRkWEJ3YjNKMGFXNW5JR0Z1WkNCRFpXeGxZbkpoZEdsdVp5QkJiV1Z5YVdOaDRvQ1pjeUJJWldGc2RHaHBaWE4wSUZOamFHOXZiSE04TDJJK1BDOXdQanh3UGlCVWFHVWdRV3hzYVdGdVkyVWdabTl5SUdFZ1NHVmhiSFJvYVdWeUlFZGxibVZ5WVhScGIyNXpJR2x6SUhkdmNtdHBibWNnZDJsMGFDQllJSE5qYUc5dmJITWdhVzRnZEdocGN5QnpkR0YwWlNCMGJ5QmpjbVZoZEdVZ2FHVmhiSFJvYVdWeUlHVnVkbWx5YjI1dFpXNTBjeUJtYjNJZ2MzUjFaR1Z1ZEhNZ1lXNWtJSFJsWVdOb1pYSnpMaUJQZG1WeVlXeHNMQ0JJWldGc2RHaGxjaUJIWlc1bGNtRjBhVzl1SUhOMWNIQnZjblJ6SUcxdmNtVWdkR2hoYmlBek9Td3dNREFnYzJOb2IyOXNjeUJwYmlCMGFHVWdTR1ZoYkhSb2VTQlRZMmh2YjJ4eklGQnliMmR5WVcwc0lIZG9hV05vSUdobGJIQnpJR0oxYVd4a0lHaGxZV3gwYUdsbGNpQnNaV0Z5Ym1sdVp5QmxiblpwY205dWJXVnVkSE1nWm05eUlITjBkV1JsYm5SeklHRnVaQ0J6ZEdGbVppQmllU0J3Y205MmFXUnBibWNnWm5KbFpTQnlaWE52ZFhKalpYTWdZVzVrSUhSbFkyaHVhV05oYkNCaGMzTnBjM1JoYm1ObExqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzYyYTFmYTczYjExMDQzYzE5Njk4Y2UwYjNmZmZjOGM0LnNldENvbnRlbnQoaV9mcmFtZV9iYTY3ODdjZDFmYmU0NTgwOWM1NDUxMjk4MjY0ZmZjZik7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyXzViZjU1YmNlZWMyZDQzMGU5YzI3MDgxMTlmYjNlMDY1LmJpbmRQb3B1cChwb3B1cF82MmExZmE3M2IxMTA0M2MxOTY5OGNlMGIzZmZmYzhjNCkKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyXzQ5MGM3Mzk5MDkzZjQwMTlhYjQ2Y2Y4ZmQ0NjgyNDQ5ID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFszOC45Nzg0NDUsIC03Ni40OTIxODNdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzkwZGUzMTdmMzQ3MjQyOWM4MTFiNjNkNjdkNjc0MWQ3ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lX2E4MWEzYjA3OWVlYTQyMDdiZmUyNGY3Yzg1ZjE2NjUyID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtGSVJ6d3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNVRkWEJ3YjNKMGFXNW5JR0Z1WkNCRFpXeGxZbkpoZEdsdVp5QkJiV1Z5YVdOaDRvQ1pjeUJJWldGc2RHaHBaWE4wSUZOamFHOXZiSE04TDJJK1BDOXdQanh3UGlCVWFHVWdRV3hzYVdGdVkyVWdabTl5SUdFZ1NHVmhiSFJvYVdWeUlFZGxibVZ5WVhScGIyNXpJR2x6SUhkdmNtdHBibWNnZDJsMGFDQllJSE5qYUc5dmJITWdhVzRnZEdocGN5QnpkR0YwWlNCMGJ5QmpjbVZoZEdVZ2FHVmhiSFJvYVdWeUlHVnVkbWx5YjI1dFpXNTBjeUJtYjNJZ2MzUjFaR1Z1ZEhNZ1lXNWtJSFJsWVdOb1pYSnpMaUJQZG1WeVlXeHNMQ0JJWldGc2RHaGxjaUJIWlc1bGNtRjBhVzl1SUhOMWNIQnZjblJ6SUcxdmNtVWdkR2hoYmlBek9Td3dNREFnYzJOb2IyOXNjeUJwYmlCMGFHVWdTR1ZoYkhSb2VTQlRZMmh2YjJ4eklGQnliMmR5WVcwc0lIZG9hV05vSUdobGJIQnpJR0oxYVd4a0lHaGxZV3gwYUdsbGNpQnNaV0Z5Ym1sdVp5QmxiblpwY205dWJXVnVkSE1nWm05eUlITjBkV1JsYm5SeklHRnVaQ0J6ZEdGbVppQmllU0J3Y205MmFXUnBibWNnWm5KbFpTQnlaWE52ZFhKalpYTWdZVzVrSUhSbFkyaHVhV05oYkNCaGMzTnBjM1JoYm1ObExqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzkwZGUzMTdmMzQ3MjQyOWM4MTFiNjNkNjdkNjc0MWQ3LnNldENvbnRlbnQoaV9mcmFtZV9hODFhM2IwNzllZWE0MjA3YmZlMjRmN2M4NWYxNjY1Mik7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyXzQ5MGM3Mzk5MDkzZjQwMTlhYjQ2Y2Y4ZmQ0NjgyNDQ5LmJpbmRQb3B1cChwb3B1cF85MGRlMzE3ZjM0NzI0MjljODExYjYzZDY3ZDY3NDFkNykKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyX2MwMmM4ZjYxNDIyYTQ3OTc4YTgyNGRkOTQ2Y2MxMTg3ID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFszMy40NzM0OTgsIC04Mi4wMTA1MTVdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2U0ZjlhOGQ2YzY3NTQ5YmFhZWRhZmY0YTg4ZTRhZGIyID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lXzY3YjNlYTk1YWE4MzQwZDRhYTYxN2M4YzEzMGZhMzc2ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtGSVJ6d3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNVRkWEJ3YjNKMGFXNW5JR0Z1WkNCRFpXeGxZbkpoZEdsdVp5QkJiV1Z5YVdOaDRvQ1pjeUJJWldGc2RHaHBaWE4wSUZOamFHOXZiSE04TDJJK1BDOXdQanh3UGlCVWFHVWdRV3hzYVdGdVkyVWdabTl5SUdFZ1NHVmhiSFJvYVdWeUlFZGxibVZ5WVhScGIyNXpJR2x6SUhkdmNtdHBibWNnZDJsMGFDQllJSE5qYUc5dmJITWdhVzRnZEdocGN5QnpkR0YwWlNCMGJ5QmpjbVZoZEdVZ2FHVmhiSFJvYVdWeUlHVnVkbWx5YjI1dFpXNTBjeUJtYjNJZ2MzUjFaR1Z1ZEhNZ1lXNWtJSFJsWVdOb1pYSnpMaUJQZG1WeVlXeHNMQ0JJWldGc2RHaGxjaUJIWlc1bGNtRjBhVzl1SUhOMWNIQnZjblJ6SUcxdmNtVWdkR2hoYmlBek9Td3dNREFnYzJOb2IyOXNjeUJwYmlCMGFHVWdTR1ZoYkhSb2VTQlRZMmh2YjJ4eklGQnliMmR5WVcwc0lIZG9hV05vSUdobGJIQnpJR0oxYVd4a0lHaGxZV3gwYUdsbGNpQnNaV0Z5Ym1sdVp5QmxiblpwY205dWJXVnVkSE1nWm05eUlITjBkV1JsYm5SeklHRnVaQ0J6ZEdGbVppQmllU0J3Y205MmFXUnBibWNnWm5KbFpTQnlaWE52ZFhKalpYTWdZVzVrSUhSbFkyaHVhV05oYkNCaGMzTnBjM1JoYm1ObExqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2U0ZjlhOGQ2YzY3NTQ5YmFhZWRhZmY0YTg4ZTRhZGIyLnNldENvbnRlbnQoaV9mcmFtZV82N2IzZWE5NWFhODM0MGQ0YWE2MTdjOGMxMzBmYTM3Nik7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyX2MwMmM4ZjYxNDIyYTQ3OTc4YTgyNGRkOTQ2Y2MxMTg3LmJpbmRQb3B1cChwb3B1cF9lNGY5YThkNmM2NzU0OWJhYWVkYWZmNGE4OGU0YWRiMikKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyXzQ1NjQ2YzM2Njc4NjQxMTk4ZjA4MDVmZWYxYmIxOGQ1ID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFs0Mi43MzI1MzUsIC04NC41NTU1MzVdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzQwMzJjMDljMTEzYzQ1MTA4NTczNmJjZjg3YzhhYmE4ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lX2ZhODI3NWY3OTcyMDQ5ZTJiYTliOWEwOGQwYWRkMGJkID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtGSVJ6d3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNVRkWEJ3YjNKMGFXNW5JR0Z1WkNCRFpXeGxZbkpoZEdsdVp5QkJiV1Z5YVdOaDRvQ1pjeUJJWldGc2RHaHBaWE4wSUZOamFHOXZiSE04TDJJK1BDOXdQanh3UGlCVWFHVWdRV3hzYVdGdVkyVWdabTl5SUdFZ1NHVmhiSFJvYVdWeUlFZGxibVZ5WVhScGIyNXpJR2x6SUhkdmNtdHBibWNnZDJsMGFDQllJSE5qYUc5dmJITWdhVzRnZEdocGN5QnpkR0YwWlNCMGJ5QmpjbVZoZEdVZ2FHVmhiSFJvYVdWeUlHVnVkbWx5YjI1dFpXNTBjeUJtYjNJZ2MzUjFaR1Z1ZEhNZ1lXNWtJSFJsWVdOb1pYSnpMaUJQZG1WeVlXeHNMQ0JJWldGc2RHaGxjaUJIWlc1bGNtRjBhVzl1SUhOMWNIQnZjblJ6SUcxdmNtVWdkR2hoYmlBek9Td3dNREFnYzJOb2IyOXNjeUJwYmlCMGFHVWdTR1ZoYkhSb2VTQlRZMmh2YjJ4eklGQnliMmR5WVcwc0lIZG9hV05vSUdobGJIQnpJR0oxYVd4a0lHaGxZV3gwYUdsbGNpQnNaV0Z5Ym1sdVp5QmxiblpwY205dWJXVnVkSE1nWm05eUlITjBkV1JsYm5SeklHRnVaQ0J6ZEdGbVppQmllU0J3Y205MmFXUnBibWNnWm5KbFpTQnlaWE52ZFhKalpYTWdZVzVrSUhSbFkyaHVhV05oYkNCaGMzTnBjM1JoYm1ObExqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzQwMzJjMDljMTEzYzQ1MTA4NTczNmJjZjg3YzhhYmE4LnNldENvbnRlbnQoaV9mcmFtZV9mYTgyNzVmNzk3MjA0OWUyYmE5YjlhMDhkMGFkZDBiZCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyXzQ1NjQ2YzM2Njc4NjQxMTk4ZjA4MDVmZWYxYmIxOGQ1LmJpbmRQb3B1cChwb3B1cF80MDMyYzA5YzExM2M0NTEwODU3MzZiY2Y4N2M4YWJhOCkKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyXzkxM2JlMDViZTAyNDQzNmViNjQ1OWMxMDM0MDk4OWFmID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFs0NC45NTM3MDMsIC05My4wODk5NThdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2E2NjRkMGVhZmE4ZDRiMzE5NjVjZjZiZWQ0Njg0MDExID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lXzQ3MmMyNTE3MjcyMzRkNTJiZjFiYjQ2M2NmY2NiZDdkID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtGSVJ6d3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNVRkWEJ3YjNKMGFXNW5JR0Z1WkNCRFpXeGxZbkpoZEdsdVp5QkJiV1Z5YVdOaDRvQ1pjeUJJWldGc2RHaHBaWE4wSUZOamFHOXZiSE04TDJJK1BDOXdQanh3UGlCVWFHVWdRV3hzYVdGdVkyVWdabTl5SUdFZ1NHVmhiSFJvYVdWeUlFZGxibVZ5WVhScGIyNXpJR2x6SUhkdmNtdHBibWNnZDJsMGFDQllJSE5qYUc5dmJITWdhVzRnZEdocGN5QnpkR0YwWlNCMGJ5QmpjbVZoZEdVZ2FHVmhiSFJvYVdWeUlHVnVkbWx5YjI1dFpXNTBjeUJtYjNJZ2MzUjFaR1Z1ZEhNZ1lXNWtJSFJsWVdOb1pYSnpMaUJQZG1WeVlXeHNMQ0JJWldGc2RHaGxjaUJIWlc1bGNtRjBhVzl1SUhOMWNIQnZjblJ6SUcxdmNtVWdkR2hoYmlBek9Td3dNREFnYzJOb2IyOXNjeUJwYmlCMGFHVWdTR1ZoYkhSb2VTQlRZMmh2YjJ4eklGQnliMmR5WVcwc0lIZG9hV05vSUdobGJIQnpJR0oxYVd4a0lHaGxZV3gwYUdsbGNpQnNaV0Z5Ym1sdVp5QmxiblpwY205dWJXVnVkSE1nWm05eUlITjBkV1JsYm5SeklHRnVaQ0J6ZEdGbVppQmllU0J3Y205MmFXUnBibWNnWm5KbFpTQnlaWE52ZFhKalpYTWdZVzVrSUhSbFkyaHVhV05oYkNCaGMzTnBjM1JoYm1ObExqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2E2NjRkMGVhZmE4ZDRiMzE5NjVjZjZiZWQ0Njg0MDExLnNldENvbnRlbnQoaV9mcmFtZV80NzJjMjUxNzI3MjM0ZDUyYmYxYmI0NjNjZmNjYmQ3ZCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyXzkxM2JlMDViZTAyNDQzNmViNjQ1OWMxMDM0MDk4OWFmLmJpbmRQb3B1cChwb3B1cF9hNjY0ZDBlYWZhOGQ0YjMxOTY1Y2Y2YmVkNDY4NDAxMSkKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyX2NhNTFmYzU4M2Y1MDQwOWU5NjJmNjVlZGVkNDY0MmUxID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFszOC41NzY3MDIsIC05Mi4xNzM1MTZdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2FmNjEwNTU3ZDYyYTRjMTA5OWUwNjc0ZThlOTRjMjE1ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lXzE0ZGYxZDJlMDE2YzQ0YWQ5ZDE4ZGFjNWVjODNjYjM5ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtGSVJ6d3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNVRkWEJ3YjNKMGFXNW5JR0Z1WkNCRFpXeGxZbkpoZEdsdVp5QkJiV1Z5YVdOaDRvQ1pjeUJJWldGc2RHaHBaWE4wSUZOamFHOXZiSE04TDJJK1BDOXdQanh3UGlCVWFHVWdRV3hzYVdGdVkyVWdabTl5SUdFZ1NHVmhiSFJvYVdWeUlFZGxibVZ5WVhScGIyNXpJR2x6SUhkdmNtdHBibWNnZDJsMGFDQllJSE5qYUc5dmJITWdhVzRnZEdocGN5QnpkR0YwWlNCMGJ5QmpjbVZoZEdVZ2FHVmhiSFJvYVdWeUlHVnVkbWx5YjI1dFpXNTBjeUJtYjNJZ2MzUjFaR1Z1ZEhNZ1lXNWtJSFJsWVdOb1pYSnpMaUJQZG1WeVlXeHNMQ0JJWldGc2RHaGxjaUJIWlc1bGNtRjBhVzl1SUhOMWNIQnZjblJ6SUcxdmNtVWdkR2hoYmlBek9Td3dNREFnYzJOb2IyOXNjeUJwYmlCMGFHVWdTR1ZoYkhSb2VTQlRZMmh2YjJ4eklGQnliMmR5WVcwc0lIZG9hV05vSUdobGJIQnpJR0oxYVd4a0lHaGxZV3gwYUdsbGNpQnNaV0Z5Ym1sdVp5QmxiblpwY205dWJXVnVkSE1nWm05eUlITjBkV1JsYm5SeklHRnVaQ0J6ZEdGbVppQmllU0J3Y205MmFXUnBibWNnWm5KbFpTQnlaWE52ZFhKalpYTWdZVzVrSUhSbFkyaHVhV05oYkNCaGMzTnBjM1JoYm1ObExqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2FmNjEwNTU3ZDYyYTRjMTA5OWUwNjc0ZThlOTRjMjE1LnNldENvbnRlbnQoaV9mcmFtZV8xNGRmMWQyZTAxNmM0NGFkOWQxOGRhYzVlYzgzY2IzOSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyX2NhNTFmYzU4M2Y1MDQwOWU5NjJmNjVlZGVkNDY0MmUxLmJpbmRQb3B1cChwb3B1cF9hZjYxMDU1N2Q2MmE0YzEwOTllMDY3NGU4ZTk0YzIxNSkKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyXzhlOGQ5ZjVmMGRjZTRkNTVhMGJkMjE0ZDZmZTYyODFkID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFszMi4yOTg3NTcsIC05MC4xODQ4MV0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfZmE0MDAwMDQ0YzE2NDQ1ZjhkYjFiMTA0YzFlNGMyYmIgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfZTgwYTdlNzJhZjM0NDFkYWExNjU5YmQzMDRmNzkwNDkgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1cxd2NtOTJhVzVuSUZCMVlteHBZeUJJWldGc2RHZzhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa0ZJUnp3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1VGRYQndiM0owYVc1bklHRnVaQ0JEWld4bFluSmhkR2x1WnlCQmJXVnlhV05oNG9DWmN5QklaV0ZzZEdocFpYTjBJRk5qYUc5dmJITThMMkkrUEM5d1BqeHdQaUJVYUdVZ1FXeHNhV0Z1WTJVZ1ptOXlJR0VnU0dWaGJIUm9hV1Z5SUVkbGJtVnlZWFJwYjI1eklHbHpJSGR2Y210cGJtY2dkMmwwYUNCWUlITmphRzl2YkhNZ2FXNGdkR2hwY3lCemRHRjBaU0IwYnlCamNtVmhkR1VnYUdWaGJIUm9hV1Z5SUdWdWRtbHliMjV0Wlc1MGN5Qm1iM0lnYzNSMVpHVnVkSE1nWVc1a0lIUmxZV05vWlhKekxpQlBkbVZ5WVd4c0xDQklaV0ZzZEdobGNpQkhaVzVsY21GMGFXOXVJSE4xY0hCdmNuUnpJRzF2Y21VZ2RHaGhiaUF6T1N3d01EQWdjMk5vYjI5c2N5QnBiaUIwYUdVZ1NHVmhiSFJvZVNCVFkyaHZiMnh6SUZCeWIyZHlZVzBzSUhkb2FXTm9JR2hsYkhCeklHSjFhV3hrSUdobFlXeDBhR2xsY2lCc1pXRnlibWx1WnlCbGJuWnBjbTl1YldWdWRITWdabTl5SUhOMGRXUmxiblJ6SUdGdVpDQnpkR0ZtWmlCaWVTQndjbTkyYVdScGJtY2dabkpsWlNCeVpYTnZkWEpqWlhNZ1lXNWtJSFJsWTJodWFXTmhiQ0JoYzNOcGMzUmhibU5sTGp3dmNEND0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfZmE0MDAwMDQ0YzE2NDQ1ZjhkYjFiMTA0YzFlNGMyYmIuc2V0Q29udGVudChpX2ZyYW1lX2U4MGE3ZTcyYWYzNDQxZGFhMTY1OWJkMzA0Zjc5MDQ5KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfOGU4ZDlmNWYwZGNlNGQ1NWEwYmQyMTRkNmZlNjI4MWQuYmluZFBvcHVwKHBvcHVwX2ZhNDAwMDA0NGMxNjQ0NWY4ZGIxYjEwNGMxZTRjMmJiKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfMmRiNzJkNmNlMzg1NGYyOGExN2Q4N2E3N2IxMWI2NzEgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzQ2LjU4ODM3MSwgLTExMi4wMjQ1MDVdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2MzYzI0YWYzMTRmOTQxYWM4ZTRjZGIxZDMwYjgzMTMyID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lXzk0MDc2YjM1MDg2ZDRiZGI4MDVjYTAyNGQ2NzBmNWU5ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtGSVJ6d3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNVRkWEJ3YjNKMGFXNW5JR0Z1WkNCRFpXeGxZbkpoZEdsdVp5QkJiV1Z5YVdOaDRvQ1pjeUJJWldGc2RHaHBaWE4wSUZOamFHOXZiSE04TDJJK1BDOXdQanh3UGlCVWFHVWdRV3hzYVdGdVkyVWdabTl5SUdFZ1NHVmhiSFJvYVdWeUlFZGxibVZ5WVhScGIyNXpJR2x6SUhkdmNtdHBibWNnZDJsMGFDQllJSE5qYUc5dmJITWdhVzRnZEdocGN5QnpkR0YwWlNCMGJ5QmpjbVZoZEdVZ2FHVmhiSFJvYVdWeUlHVnVkbWx5YjI1dFpXNTBjeUJtYjNJZ2MzUjFaR1Z1ZEhNZ1lXNWtJSFJsWVdOb1pYSnpMaUJQZG1WeVlXeHNMQ0JJWldGc2RHaGxjaUJIWlc1bGNtRjBhVzl1SUhOMWNIQnZjblJ6SUcxdmNtVWdkR2hoYmlBek9Td3dNREFnYzJOb2IyOXNjeUJwYmlCMGFHVWdTR1ZoYkhSb2VTQlRZMmh2YjJ4eklGQnliMmR5WVcwc0lIZG9hV05vSUdobGJIQnpJR0oxYVd4a0lHaGxZV3gwYUdsbGNpQnNaV0Z5Ym1sdVp5QmxiblpwY205dWJXVnVkSE1nWm05eUlITjBkV1JsYm5SeklHRnVaQ0J6ZEdGbVppQmllU0J3Y205MmFXUnBibWNnWm5KbFpTQnlaWE52ZFhKalpYTWdZVzVrSUhSbFkyaHVhV05oYkNCaGMzTnBjM1JoYm1ObExqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2MzYzI0YWYzMTRmOTQxYWM4ZTRjZGIxZDMwYjgzMTMyLnNldENvbnRlbnQoaV9mcmFtZV85NDA3NmIzNTA4NmQ0YmRiODA1Y2EwMjRkNjcwZjVlOSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyXzJkYjcyZDZjZTM4NTRmMjhhMTdkODdhNzdiMTFiNjcxLmJpbmRQb3B1cChwb3B1cF9jM2MyNGFmMzE0Zjk0MWFjOGU0Y2RiMWQzMGI4MzEzMikKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyX2ZhYjZkNzdkNDM4ZTQwNjBiYjQ3NDcxNDY2NTgyODUzID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFszNS43Nzk1OSwgLTc4LjYzODE3OV0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfMTk0OTkxNDk5YWE4NDQ5NTgwNTZhMDViNTE3MTYwNzEgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfZGRmOWJlZGY4YzJjNDk2NmE1NTUyOTM0NDdmZWM2ZDcgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1cxd2NtOTJhVzVuSUZCMVlteHBZeUJJWldGc2RHZzhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa0ZJUnp3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1VGRYQndiM0owYVc1bklHRnVaQ0JEWld4bFluSmhkR2x1WnlCQmJXVnlhV05oNG9DWmN5QklaV0ZzZEdocFpYTjBJRk5qYUc5dmJITThMMkkrUEM5d1BqeHdQaUJVYUdVZ1FXeHNhV0Z1WTJVZ1ptOXlJR0VnU0dWaGJIUm9hV1Z5SUVkbGJtVnlZWFJwYjI1eklHbHpJSGR2Y210cGJtY2dkMmwwYUNCWUlITmphRzl2YkhNZ2FXNGdkR2hwY3lCemRHRjBaU0IwYnlCamNtVmhkR1VnYUdWaGJIUm9hV1Z5SUdWdWRtbHliMjV0Wlc1MGN5Qm1iM0lnYzNSMVpHVnVkSE1nWVc1a0lIUmxZV05vWlhKekxpQlBkbVZ5WVd4c0xDQklaV0ZzZEdobGNpQkhaVzVsY21GMGFXOXVJSE4xY0hCdmNuUnpJRzF2Y21VZ2RHaGhiaUF6T1N3d01EQWdjMk5vYjI5c2N5QnBiaUIwYUdVZ1NHVmhiSFJvZVNCVFkyaHZiMnh6SUZCeWIyZHlZVzBzSUhkb2FXTm9JR2hsYkhCeklHSjFhV3hrSUdobFlXeDBhR2xsY2lCc1pXRnlibWx1WnlCbGJuWnBjbTl1YldWdWRITWdabTl5SUhOMGRXUmxiblJ6SUdGdVpDQnpkR0ZtWmlCaWVTQndjbTkyYVdScGJtY2dabkpsWlNCeVpYTnZkWEpqWlhNZ1lXNWtJSFJsWTJodWFXTmhiQ0JoYzNOcGMzUmhibU5sTGp3dmNEND0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfMTk0OTkxNDk5YWE4NDQ5NTgwNTZhMDViNTE3MTYwNzEuc2V0Q29udGVudChpX2ZyYW1lX2RkZjliZWRmOGMyYzQ5NjZhNTU1MjkzNDQ3ZmVjNmQ3KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfZmFiNmQ3N2Q0MzhlNDA2MGJiNDc0NzE0NjY1ODI4NTMuYmluZFBvcHVwKHBvcHVwXzE5NDk5MTQ5OWFhODQ0OTU4MDU2YTA1YjUxNzE2MDcxKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfNDNlNjEzOThjZTY4NDM0YjlhYmE0ZGFjZWMwOWMzNTcgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzQ2LjgwODMyNywgLTEwMC43ODM3MzldLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzBjNmRhMmRiNTJiNDQ0MDdhYTMwODEwNjFiYjE5MWNjID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lXzYxOTUyMTdlODY3YjRhOWY5NDE0MDM3NmFlM2RjMGFmID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtGSVJ6d3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNVRkWEJ3YjNKMGFXNW5JR0Z1WkNCRFpXeGxZbkpoZEdsdVp5QkJiV1Z5YVdOaDRvQ1pjeUJJWldGc2RHaHBaWE4wSUZOamFHOXZiSE04TDJJK1BDOXdQanh3UGlCVWFHVWdRV3hzYVdGdVkyVWdabTl5SUdFZ1NHVmhiSFJvYVdWeUlFZGxibVZ5WVhScGIyNXpJR2x6SUhkdmNtdHBibWNnZDJsMGFDQllJSE5qYUc5dmJITWdhVzRnZEdocGN5QnpkR0YwWlNCMGJ5QmpjbVZoZEdVZ2FHVmhiSFJvYVdWeUlHVnVkbWx5YjI1dFpXNTBjeUJtYjNJZ2MzUjFaR1Z1ZEhNZ1lXNWtJSFJsWVdOb1pYSnpMaUJQZG1WeVlXeHNMQ0JJWldGc2RHaGxjaUJIWlc1bGNtRjBhVzl1SUhOMWNIQnZjblJ6SUcxdmNtVWdkR2hoYmlBek9Td3dNREFnYzJOb2IyOXNjeUJwYmlCMGFHVWdTR1ZoYkhSb2VTQlRZMmh2YjJ4eklGQnliMmR5WVcwc0lIZG9hV05vSUdobGJIQnpJR0oxYVd4a0lHaGxZV3gwYUdsbGNpQnNaV0Z5Ym1sdVp5QmxiblpwY205dWJXVnVkSE1nWm05eUlITjBkV1JsYm5SeklHRnVaQ0J6ZEdGbVppQmllU0J3Y205MmFXUnBibWNnWm5KbFpTQnlaWE52ZFhKalpYTWdZVzVrSUhSbFkyaHVhV05oYkNCaGMzTnBjM1JoYm1ObExqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzBjNmRhMmRiNTJiNDQ0MDdhYTMwODEwNjFiYjE5MWNjLnNldENvbnRlbnQoaV9mcmFtZV82MTk1MjE3ZTg2N2I0YTlmOTQxNDAzNzZhZTNkYzBhZik7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyXzQzZTYxMzk4Y2U2ODQzNGI5YWJhNGRhY2VjMDljMzU3LmJpbmRQb3B1cChwb3B1cF8wYzZkYTJkYjUyYjQ0NDA3YWEzMDgxMDYxYmIxOTFjYykKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyX2YwOWE5ZmVjYjkxZjRhZDBiZGI1OTJmZTA0OGJkOWQxID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFs0MC44MjU3NjMsIC05Ni42ODUxOThdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2UxYjUwMTljZjY0MzRhZTU4OWI4YTFiMWNhODNiN2VlID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lXzE5ZDNmYzE2ZmM2ZTRlMTQ5M2E1M2YzMjQyOTNhMmI5ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtGSVJ6d3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNVRkWEJ3YjNKMGFXNW5JR0Z1WkNCRFpXeGxZbkpoZEdsdVp5QkJiV1Z5YVdOaDRvQ1pjeUJJWldGc2RHaHBaWE4wSUZOamFHOXZiSE04TDJJK1BDOXdQanh3UGlCVWFHVWdRV3hzYVdGdVkyVWdabTl5SUdFZ1NHVmhiSFJvYVdWeUlFZGxibVZ5WVhScGIyNXpJR2x6SUhkdmNtdHBibWNnZDJsMGFDQllJSE5qYUc5dmJITWdhVzRnZEdocGN5QnpkR0YwWlNCMGJ5QmpjbVZoZEdVZ2FHVmhiSFJvYVdWeUlHVnVkbWx5YjI1dFpXNTBjeUJtYjNJZ2MzUjFaR1Z1ZEhNZ1lXNWtJSFJsWVdOb1pYSnpMaUJQZG1WeVlXeHNMQ0JJWldGc2RHaGxjaUJIWlc1bGNtRjBhVzl1SUhOMWNIQnZjblJ6SUcxdmNtVWdkR2hoYmlBek9Td3dNREFnYzJOb2IyOXNjeUJwYmlCMGFHVWdTR1ZoYkhSb2VTQlRZMmh2YjJ4eklGQnliMmR5WVcwc0lIZG9hV05vSUdobGJIQnpJR0oxYVd4a0lHaGxZV3gwYUdsbGNpQnNaV0Z5Ym1sdVp5QmxiblpwY205dWJXVnVkSE1nWm05eUlITjBkV1JsYm5SeklHRnVaQ0J6ZEdGbVppQmllU0J3Y205MmFXUnBibWNnWm5KbFpTQnlaWE52ZFhKalpYTWdZVzVrSUhSbFkyaHVhV05oYkNCaGMzTnBjM1JoYm1ObExqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2UxYjUwMTljZjY0MzRhZTU4OWI4YTFiMWNhODNiN2VlLnNldENvbnRlbnQoaV9mcmFtZV8xOWQzZmMxNmZjNmU0ZTE0OTNhNTNmMzI0MjkzYTJiOSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyX2YwOWE5ZmVjYjkxZjRhZDBiZGI1OTJmZTA0OGJkOWQxLmJpbmRQb3B1cChwb3B1cF9lMWI1MDE5Y2Y2NDM0YWU1ODliOGExYjFjYTgzYjdlZSkKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyXzgzZjVjYjRmMThlMzRjYWU5YTVlMWJmNDFjOGU1Y2U3ID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFszNy45Nzc5NzgsIC0xMjIuMDMxMDczXSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWNvbjogbmV3IEwuSWNvbi5EZWZhdWx0KCksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkuYWRkVG8obWFya2VyX2NsdXN0ZXJfNDdkNDQ3NmQyZGE5NDhmNzkwOWNhODdmOTU2ZjgxOWMpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF8zOTg5ZDAzZjhjYWU0YWI5YTlhZGRjMGNlZjkyNWYyNCA9IEwucG9wdXAoe21heFdpZHRoOiAnMjY1MCcKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaV9mcmFtZV83OWNjZjI3YjNlZDk0NmE5YTUxNTYzNjg2ZDU3Y2JiYSA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBOGFERStTVzF3Y205MmFXNW5JRkIxWW14cFl5QklaV0ZzZEdnOEwyZ3hQanhpY2o0OGNENDhjM1J5YjI1blBrRklSend2YzNSeWIyNW5Qand2Y0Q0OGNENDhZajVUZFhCd2IzSjBhVzVuSUdGdVpDQkRaV3hsWW5KaGRHbHVaeUJCYldWeWFXTmg0b0NaY3lCSVpXRnNkR2hwWlhOMElGTmphRzl2YkhNOEwySStQQzl3UGp4d1BpQlVhR1VnUVd4c2FXRnVZMlVnWm05eUlHRWdTR1ZoYkhSb2FXVnlJRWRsYm1WeVlYUnBiMjV6SUdseklIZHZjbXRwYm1jZ2QybDBhQ0JZSUhOamFHOXZiSE1nYVc0Z2RHaHBjeUJ6ZEdGMFpTQjBieUJqY21WaGRHVWdhR1ZoYkhSb2FXVnlJR1Z1ZG1seWIyNXRaVzUwY3lCbWIzSWdjM1IxWkdWdWRITWdZVzVrSUhSbFlXTm9aWEp6TGlCUGRtVnlZV3hzTENCSVpXRnNkR2hsY2lCSFpXNWxjbUYwYVc5dUlITjFjSEJ2Y25SeklHMXZjbVVnZEdoaGJpQXpPU3d3TURBZ2MyTm9iMjlzY3lCcGJpQjBhR1VnU0dWaGJIUm9lU0JUWTJodmIyeHpJRkJ5YjJkeVlXMHNJSGRvYVdOb0lHaGxiSEJ6SUdKMWFXeGtJR2hsWVd4MGFHbGxjaUJzWldGeWJtbHVaeUJsYm5acGNtOXViV1Z1ZEhNZ1ptOXlJSE4wZFdSbGJuUnpJR0Z1WkNCemRHRm1aaUJpZVNCd2NtOTJhV1JwYm1jZ1puSmxaU0J5WlhOdmRYSmpaWE1nWVc1a0lIUmxZMmh1YVdOaGJDQmhjM05wYzNSaGJtTmxMand2Y0Q0PSIgd2lkdGg9IjUwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjMwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgICAgICBwb3B1cF8zOTg5ZDAzZjhjYWU0YWI5YTlhZGRjMGNlZjkyNWYyNC5zZXRDb250ZW50KGlfZnJhbWVfNzljY2YyN2IzZWQ5NDZhOWE1MTU2MzY4NmQ1N2NiYmEpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIG1hcmtlcl84M2Y1Y2I0ZjE4ZTM0Y2FlOWE1ZTFiZjQxYzhlNWNlNy5iaW5kUG9wdXAocG9wdXBfMzk4OWQwM2Y4Y2FlNGFiOWE5YWRkYzBjZWY5MjVmMjQpCiAgICAgICAgICAgIDsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgdmFyIG1hcmtlcl82MWU4Yzc3ODcyNTA0NWYyYTlhMDc5MTgyMTBhMWQ2ZCA9IEwubWFya2VyKAogICAgICAgICAgICBbNDAuMjE3MDUzLCAtNzQuNzQyOTM4XSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWNvbjogbmV3IEwuSWNvbi5EZWZhdWx0KCksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkuYWRkVG8obWFya2VyX2NsdXN0ZXJfNDdkNDQ3NmQyZGE5NDhmNzkwOWNhODdmOTU2ZjgxOWMpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF80YzlkNWMwZDdiN2Q0ZDEzODA3NWFlN2I2MjJjYTU1MiA9IEwucG9wdXAoe21heFdpZHRoOiAnMjY1MCcKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaV9mcmFtZV9mNDUzYzQyYzUwY2Y0YzEyYTIwNWRiYzU3OGU4NjUwYyA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBOGFERStTVzF3Y205MmFXNW5JRkIxWW14cFl5QklaV0ZzZEdnOEwyZ3hQanhpY2o0OGNENDhjM1J5YjI1blBrRklSend2YzNSeWIyNW5Qand2Y0Q0OGNENDhZajVUZFhCd2IzSjBhVzVuSUdGdVpDQkRaV3hsWW5KaGRHbHVaeUJCYldWeWFXTmg0b0NaY3lCSVpXRnNkR2hwWlhOMElGTmphRzl2YkhNOEwySStQQzl3UGp4d1BpQlVhR1VnUVd4c2FXRnVZMlVnWm05eUlHRWdTR1ZoYkhSb2FXVnlJRWRsYm1WeVlYUnBiMjV6SUdseklIZHZjbXRwYm1jZ2QybDBhQ0JZSUhOamFHOXZiSE1nYVc0Z2RHaHBjeUJ6ZEdGMFpTQjBieUJqY21WaGRHVWdhR1ZoYkhSb2FXVnlJR1Z1ZG1seWIyNXRaVzUwY3lCbWIzSWdjM1IxWkdWdWRITWdZVzVrSUhSbFlXTm9aWEp6TGlCUGRtVnlZV3hzTENCSVpXRnNkR2hsY2lCSFpXNWxjbUYwYVc5dUlITjFjSEJ2Y25SeklHMXZjbVVnZEdoaGJpQXpPU3d3TURBZ2MyTm9iMjlzY3lCcGJpQjBhR1VnU0dWaGJIUm9lU0JUWTJodmIyeHpJRkJ5YjJkeVlXMHNJSGRvYVdOb0lHaGxiSEJ6SUdKMWFXeGtJR2hsWVd4MGFHbGxjaUJzWldGeWJtbHVaeUJsYm5acGNtOXViV1Z1ZEhNZ1ptOXlJSE4wZFdSbGJuUnpJR0Z1WkNCemRHRm1aaUJpZVNCd2NtOTJhV1JwYm1jZ1puSmxaU0J5WlhOdmRYSmpaWE1nWVc1a0lIUmxZMmh1YVdOaGJDQmhjM05wYzNSaGJtTmxMand2Y0Q0PSIgd2lkdGg9IjUwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjMwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgICAgICBwb3B1cF80YzlkNWMwZDdiN2Q0ZDEzODA3NWFlN2I2MjJjYTU1Mi5zZXRDb250ZW50KGlfZnJhbWVfZjQ1M2M0MmM1MGNmNGMxMmEyMDVkYmM1NzhlODY1MGMpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIG1hcmtlcl82MWU4Yzc3ODcyNTA0NWYyYTlhMDc5MTgyMTBhMWQ2ZC5iaW5kUG9wdXAocG9wdXBfNGM5ZDVjMGQ3YjdkNGQxMzgwNzVhZTdiNjIyY2E1NTIpCiAgICAgICAgICAgIDsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgdmFyIG1hcmtlcl8xNmIyMjZmOGE3M2U0MzA2YmNmZThjMzQ1N2MxNDk5ZSA9IEwubWFya2VyKAogICAgICAgICAgICBbMzUuNjg2OTc1LCAtMTA1LjkzNzc5OV0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfNTMwMmNkYjE3ZWUyNGE2ZmE4ZjJiM2M0ODg4MmU0NTMgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfNmMwNGRhMDE1YTFhNGI1OWIwYjI2ZTI4NzQ0N2QyNTIgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1cxd2NtOTJhVzVuSUZCMVlteHBZeUJJWldGc2RHZzhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa0ZJUnp3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1VGRYQndiM0owYVc1bklHRnVaQ0JEWld4bFluSmhkR2x1WnlCQmJXVnlhV05oNG9DWmN5QklaV0ZzZEdocFpYTjBJRk5qYUc5dmJITThMMkkrUEM5d1BqeHdQaUJVYUdVZ1FXeHNhV0Z1WTJVZ1ptOXlJR0VnU0dWaGJIUm9hV1Z5SUVkbGJtVnlZWFJwYjI1eklHbHpJSGR2Y210cGJtY2dkMmwwYUNCWUlITmphRzl2YkhNZ2FXNGdkR2hwY3lCemRHRjBaU0IwYnlCamNtVmhkR1VnYUdWaGJIUm9hV1Z5SUdWdWRtbHliMjV0Wlc1MGN5Qm1iM0lnYzNSMVpHVnVkSE1nWVc1a0lIUmxZV05vWlhKekxpQlBkbVZ5WVd4c0xDQklaV0ZzZEdobGNpQkhaVzVsY21GMGFXOXVJSE4xY0hCdmNuUnpJRzF2Y21VZ2RHaGhiaUF6T1N3d01EQWdjMk5vYjI5c2N5QnBiaUIwYUdVZ1NHVmhiSFJvZVNCVFkyaHZiMnh6SUZCeWIyZHlZVzBzSUhkb2FXTm9JR2hsYkhCeklHSjFhV3hrSUdobFlXeDBhR2xsY2lCc1pXRnlibWx1WnlCbGJuWnBjbTl1YldWdWRITWdabTl5SUhOMGRXUmxiblJ6SUdGdVpDQnpkR0ZtWmlCaWVTQndjbTkyYVdScGJtY2dabkpsWlNCeVpYTnZkWEpqWlhNZ1lXNWtJSFJsWTJodWFXTmhiQ0JoYzNOcGMzUmhibU5sTGp3dmNEND0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfNTMwMmNkYjE3ZWUyNGE2ZmE4ZjJiM2M0ODg4MmU0NTMuc2V0Q29udGVudChpX2ZyYW1lXzZjMDRkYTAxNWExYTRiNTliMGIyNmUyODc0NDdkMjUyKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfMTZiMjI2ZjhhNzNlNDMwNmJjZmU4YzM0NTdjMTQ5OWUuYmluZFBvcHVwKHBvcHVwXzUzMDJjZGIxN2VlMjRhNmZhOGYyYjNjNDg4ODJlNDUzKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfNGE2ZGUyYjA2ZTJhNGZlM2EwYWY3NWFjNGZmODgzMTIgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzM5LjE2Mzc5OCwgLTExOS43Njc0MDNdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzIxMDAwOWViNjA1MzQzM2Q4NWUyYTg1ZjJhMmRlZjI4ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lXzg3OTkyMGJiN2ZhOTRmZDViMTA0NTljMzk5NGE5OTc0ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtGSVJ6d3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNVRkWEJ3YjNKMGFXNW5JR0Z1WkNCRFpXeGxZbkpoZEdsdVp5QkJiV1Z5YVdOaDRvQ1pjeUJJWldGc2RHaHBaWE4wSUZOamFHOXZiSE04TDJJK1BDOXdQanh3UGlCVWFHVWdRV3hzYVdGdVkyVWdabTl5SUdFZ1NHVmhiSFJvYVdWeUlFZGxibVZ5WVhScGIyNXpJR2x6SUhkdmNtdHBibWNnZDJsMGFDQllJSE5qYUc5dmJITWdhVzRnZEdocGN5QnpkR0YwWlNCMGJ5QmpjbVZoZEdVZ2FHVmhiSFJvYVdWeUlHVnVkbWx5YjI1dFpXNTBjeUJtYjNJZ2MzUjFaR1Z1ZEhNZ1lXNWtJSFJsWVdOb1pYSnpMaUJQZG1WeVlXeHNMQ0JJWldGc2RHaGxjaUJIWlc1bGNtRjBhVzl1SUhOMWNIQnZjblJ6SUcxdmNtVWdkR2hoYmlBek9Td3dNREFnYzJOb2IyOXNjeUJwYmlCMGFHVWdTR1ZoYkhSb2VTQlRZMmh2YjJ4eklGQnliMmR5WVcwc0lIZG9hV05vSUdobGJIQnpJR0oxYVd4a0lHaGxZV3gwYUdsbGNpQnNaV0Z5Ym1sdVp5QmxiblpwY205dWJXVnVkSE1nWm05eUlITjBkV1JsYm5SeklHRnVaQ0J6ZEdGbVppQmllU0J3Y205MmFXUnBibWNnWm5KbFpTQnlaWE52ZFhKalpYTWdZVzVrSUhSbFkyaHVhV05oYkNCaGMzTnBjM1JoYm1ObExqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzIxMDAwOWViNjA1MzQzM2Q4NWUyYTg1ZjJhMmRlZjI4LnNldENvbnRlbnQoaV9mcmFtZV84Nzk5MjBiYjdmYTk0ZmQ1YjEwNDU5YzM5OTRhOTk3NCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyXzRhNmRlMmIwNmUyYTRmZTNhMGFmNzVhYzRmZjg4MzEyLmJpbmRQb3B1cChwb3B1cF8yMTAwMDllYjYwNTM0MzNkODVlMmE4NWYyYTJkZWYyOCkKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyXzEzNjk0M2I5NzAxZDQ4MzM4MjYzMmQ1NjFkMmE1YTdjID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFs0Mi42NTI1NzksIC03My43NTYyMzJdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzE4NzU0NDg0MTkyYjQ3OThiODA5OTAyYjk1ZjVlOGI0ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lX2Q5ZDFlNmY2MzIxYTRlMGZhNzdlNDQ2YjYzNjFjNTYwID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtGSVJ6d3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNVRkWEJ3YjNKMGFXNW5JR0Z1WkNCRFpXeGxZbkpoZEdsdVp5QkJiV1Z5YVdOaDRvQ1pjeUJJWldGc2RHaHBaWE4wSUZOamFHOXZiSE04TDJJK1BDOXdQanh3UGlCVWFHVWdRV3hzYVdGdVkyVWdabTl5SUdFZ1NHVmhiSFJvYVdWeUlFZGxibVZ5WVhScGIyNXpJR2x6SUhkdmNtdHBibWNnZDJsMGFDQllJSE5qYUc5dmJITWdhVzRnZEdocGN5QnpkR0YwWlNCMGJ5QmpjbVZoZEdVZ2FHVmhiSFJvYVdWeUlHVnVkbWx5YjI1dFpXNTBjeUJtYjNJZ2MzUjFaR1Z1ZEhNZ1lXNWtJSFJsWVdOb1pYSnpMaUJQZG1WeVlXeHNMQ0JJWldGc2RHaGxjaUJIWlc1bGNtRjBhVzl1SUhOMWNIQnZjblJ6SUcxdmNtVWdkR2hoYmlBek9Td3dNREFnYzJOb2IyOXNjeUJwYmlCMGFHVWdTR1ZoYkhSb2VTQlRZMmh2YjJ4eklGQnliMmR5WVcwc0lIZG9hV05vSUdobGJIQnpJR0oxYVd4a0lHaGxZV3gwYUdsbGNpQnNaV0Z5Ym1sdVp5QmxiblpwY205dWJXVnVkSE1nWm05eUlITjBkV1JsYm5SeklHRnVaQ0J6ZEdGbVppQmllU0J3Y205MmFXUnBibWNnWm5KbFpTQnlaWE52ZFhKalpYTWdZVzVrSUhSbFkyaHVhV05oYkNCaGMzTnBjM1JoYm1ObExqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzE4NzU0NDg0MTkyYjQ3OThiODA5OTAyYjk1ZjVlOGI0LnNldENvbnRlbnQoaV9mcmFtZV9kOWQxZTZmNjMyMWE0ZTBmYTc3ZTQ0NmI2MzYxYzU2MCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyXzEzNjk0M2I5NzAxZDQ4MzM4MjYzMmQ1NjFkMmE1YTdjLmJpbmRQb3B1cChwb3B1cF8xODc1NDQ4NDE5MmI0Nzk4YjgwOTkwMmI5NWY1ZThiNCkKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyXzA5MzY2NWMxNDc4YTQ2OTBiZDAyZWU1ZjA0MTljM2FkID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFszOS45NjExNzYsIC04Mi45OTg3OTRdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzBkMTBlN2YzZmExODRiYmNiNDI5MGNjZDBjMzAzYTMwID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lXzhkNDBlZWMyNjgyMTRkMTdhMGM4ZjU0ZWFkZWMzZTY1ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtGSVJ6d3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNVRkWEJ3YjNKMGFXNW5JR0Z1WkNCRFpXeGxZbkpoZEdsdVp5QkJiV1Z5YVdOaDRvQ1pjeUJJWldGc2RHaHBaWE4wSUZOamFHOXZiSE04TDJJK1BDOXdQanh3UGlCVWFHVWdRV3hzYVdGdVkyVWdabTl5SUdFZ1NHVmhiSFJvYVdWeUlFZGxibVZ5WVhScGIyNXpJR2x6SUhkdmNtdHBibWNnZDJsMGFDQllJSE5qYUc5dmJITWdhVzRnZEdocGN5QnpkR0YwWlNCMGJ5QmpjbVZoZEdVZ2FHVmhiSFJvYVdWeUlHVnVkbWx5YjI1dFpXNTBjeUJtYjNJZ2MzUjFaR1Z1ZEhNZ1lXNWtJSFJsWVdOb1pYSnpMaUJQZG1WeVlXeHNMQ0JJWldGc2RHaGxjaUJIWlc1bGNtRjBhVzl1SUhOMWNIQnZjblJ6SUcxdmNtVWdkR2hoYmlBek9Td3dNREFnYzJOb2IyOXNjeUJwYmlCMGFHVWdTR1ZoYkhSb2VTQlRZMmh2YjJ4eklGQnliMmR5WVcwc0lIZG9hV05vSUdobGJIQnpJR0oxYVd4a0lHaGxZV3gwYUdsbGNpQnNaV0Z5Ym1sdVp5QmxiblpwY205dWJXVnVkSE1nWm05eUlITjBkV1JsYm5SeklHRnVaQ0J6ZEdGbVppQmllU0J3Y205MmFXUnBibWNnWm5KbFpTQnlaWE52ZFhKalpYTWdZVzVrSUhSbFkyaHVhV05oYkNCaGMzTnBjM1JoYm1ObExqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzBkMTBlN2YzZmExODRiYmNiNDI5MGNjZDBjMzAzYTMwLnNldENvbnRlbnQoaV9mcmFtZV84ZDQwZWVjMjY4MjE0ZDE3YTBjOGY1NGVhZGVjM2U2NSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyXzA5MzY2NWMxNDc4YTQ2OTBiZDAyZWU1ZjA0MTljM2FkLmJpbmRQb3B1cChwb3B1cF8wZDEwZTdmM2ZhMTg0YmJjYjQyOTBjY2QwYzMwM2EzMCkKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyXzg1ZjBjYTI4NmZiOTQxNGFiZjg2MzRhOWIxMDdkZjU3ID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFszNS40Njc1NiwgLTk3LjUxNjQyOF0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfYzQ4MGIwMzViYjM0NGJkNzk2MzQxNjlkMTM5ZmFjMjEgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfNDQ4MWI3ZDYxZTU5NDkxNWI3ZTkzOTYxZjc4MWJmY2MgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1cxd2NtOTJhVzVuSUZCMVlteHBZeUJJWldGc2RHZzhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa0ZJUnp3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1VGRYQndiM0owYVc1bklHRnVaQ0JEWld4bFluSmhkR2x1WnlCQmJXVnlhV05oNG9DWmN5QklaV0ZzZEdocFpYTjBJRk5qYUc5dmJITThMMkkrUEM5d1BqeHdQaUJVYUdVZ1FXeHNhV0Z1WTJVZ1ptOXlJR0VnU0dWaGJIUm9hV1Z5SUVkbGJtVnlZWFJwYjI1eklHbHpJSGR2Y210cGJtY2dkMmwwYUNCWUlITmphRzl2YkhNZ2FXNGdkR2hwY3lCemRHRjBaU0IwYnlCamNtVmhkR1VnYUdWaGJIUm9hV1Z5SUdWdWRtbHliMjV0Wlc1MGN5Qm1iM0lnYzNSMVpHVnVkSE1nWVc1a0lIUmxZV05vWlhKekxpQlBkbVZ5WVd4c0xDQklaV0ZzZEdobGNpQkhaVzVsY21GMGFXOXVJSE4xY0hCdmNuUnpJRzF2Y21VZ2RHaGhiaUF6T1N3d01EQWdjMk5vYjI5c2N5QnBiaUIwYUdVZ1NHVmhiSFJvZVNCVFkyaHZiMnh6SUZCeWIyZHlZVzBzSUhkb2FXTm9JR2hsYkhCeklHSjFhV3hrSUdobFlXeDBhR2xsY2lCc1pXRnlibWx1WnlCbGJuWnBjbTl1YldWdWRITWdabTl5SUhOMGRXUmxiblJ6SUdGdVpDQnpkR0ZtWmlCaWVTQndjbTkyYVdScGJtY2dabkpsWlNCeVpYTnZkWEpqWlhNZ1lXNWtJSFJsWTJodWFXTmhiQ0JoYzNOcGMzUmhibU5sTGp3dmNEND0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfYzQ4MGIwMzViYjM0NGJkNzk2MzQxNjlkMTM5ZmFjMjEuc2V0Q29udGVudChpX2ZyYW1lXzQ0ODFiN2Q2MWU1OTQ5MTViN2U5Mzk2MWY3ODFiZmNjKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfODVmMGNhMjg2ZmI5NDE0YWJmODYzNGE5YjEwN2RmNTcuYmluZFBvcHVwKHBvcHVwX2M0ODBiMDM1YmIzNDRiZDc5NjM0MTY5ZDEzOWZhYzIxKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfMWZiODc5OTBlNDk5NDkwOGJjODdkMzczMGQxNDc2NzggPSBMLm1hcmtlcigKICAgICAgICAgICAgWzQyLjUxOTU0LCAtNzAuODk2NzE1XSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWNvbjogbmV3IEwuSWNvbi5EZWZhdWx0KCksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkuYWRkVG8obWFya2VyX2NsdXN0ZXJfNDdkNDQ3NmQyZGE5NDhmNzkwOWNhODdmOTU2ZjgxOWMpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9jMWQzYzRhYTljZDE0MzNmYjlmYTEyNjBmMGI3MWY5MyA9IEwucG9wdXAoe21heFdpZHRoOiAnMjY1MCcKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaV9mcmFtZV8yY2M1MWFjZWZlOWY0MWMxODUxZGQzYTcyMDFjZTM2MiA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBOGFERStTVzF3Y205MmFXNW5JRkIxWW14cFl5QklaV0ZzZEdnOEwyZ3hQanhpY2o0OGNENDhjM1J5YjI1blBrRklSend2YzNSeWIyNW5Qand2Y0Q0OGNENDhZajVUZFhCd2IzSjBhVzVuSUdGdVpDQkRaV3hsWW5KaGRHbHVaeUJCYldWeWFXTmg0b0NaY3lCSVpXRnNkR2hwWlhOMElGTmphRzl2YkhNOEwySStQQzl3UGp4d1BpQlVhR1VnUVd4c2FXRnVZMlVnWm05eUlHRWdTR1ZoYkhSb2FXVnlJRWRsYm1WeVlYUnBiMjV6SUdseklIZHZjbXRwYm1jZ2QybDBhQ0JZSUhOamFHOXZiSE1nYVc0Z2RHaHBjeUJ6ZEdGMFpTQjBieUJqY21WaGRHVWdhR1ZoYkhSb2FXVnlJR1Z1ZG1seWIyNXRaVzUwY3lCbWIzSWdjM1IxWkdWdWRITWdZVzVrSUhSbFlXTm9aWEp6TGlCUGRtVnlZV3hzTENCSVpXRnNkR2hsY2lCSFpXNWxjbUYwYVc5dUlITjFjSEJ2Y25SeklHMXZjbVVnZEdoaGJpQXpPU3d3TURBZ2MyTm9iMjlzY3lCcGJpQjBhR1VnU0dWaGJIUm9lU0JUWTJodmIyeHpJRkJ5YjJkeVlXMHNJSGRvYVdOb0lHaGxiSEJ6SUdKMWFXeGtJR2hsWVd4MGFHbGxjaUJzWldGeWJtbHVaeUJsYm5acGNtOXViV1Z1ZEhNZ1ptOXlJSE4wZFdSbGJuUnpJR0Z1WkNCemRHRm1aaUJpZVNCd2NtOTJhV1JwYm1jZ1puSmxaU0J5WlhOdmRYSmpaWE1nWVc1a0lIUmxZMmh1YVdOaGJDQmhjM05wYzNSaGJtTmxMand2Y0Q0PSIgd2lkdGg9IjUwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjMwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9jMWQzYzRhYTljZDE0MzNmYjlmYTEyNjBmMGI3MWY5My5zZXRDb250ZW50KGlfZnJhbWVfMmNjNTFhY2VmZTlmNDFjMTg1MWRkM2E3MjAxY2UzNjIpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIG1hcmtlcl8xZmI4Nzk5MGU0OTk0OTA4YmM4N2QzNzMwZDE0NzY3OC5iaW5kUG9wdXAocG9wdXBfYzFkM2M0YWE5Y2QxNDMzZmI5ZmExMjYwZjBiNzFmOTMpCiAgICAgICAgICAgIDsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgdmFyIG1hcmtlcl9jYjAxMTIwZjFkMTE0N2VjOTM2NmU5MjkzNWQ0MzdjZSA9IEwubWFya2VyKAogICAgICAgICAgICBbNDAuMjczMTkxLCAtNzYuODg2NzAxXSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWNvbjogbmV3IEwuSWNvbi5EZWZhdWx0KCksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkuYWRkVG8obWFya2VyX2NsdXN0ZXJfNDdkNDQ3NmQyZGE5NDhmNzkwOWNhODdmOTU2ZjgxOWMpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF83MjgxZGU1NzY5MWU0MTgzOTE5YjRjMTkzNzcwMjRhMCA9IEwucG9wdXAoe21heFdpZHRoOiAnMjY1MCcKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaV9mcmFtZV85NjRhYTczYmM0ZDQ0MWEyOGY0NzhkMmU5NDY0NzgzZCA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBOGFERStTVzF3Y205MmFXNW5JRkIxWW14cFl5QklaV0ZzZEdnOEwyZ3hQanhpY2o0OGNENDhjM1J5YjI1blBrRklSend2YzNSeWIyNW5Qand2Y0Q0OGNENDhZajVUZFhCd2IzSjBhVzVuSUdGdVpDQkRaV3hsWW5KaGRHbHVaeUJCYldWeWFXTmg0b0NaY3lCSVpXRnNkR2hwWlhOMElGTmphRzl2YkhNOEwySStQQzl3UGp4d1BpQlVhR1VnUVd4c2FXRnVZMlVnWm05eUlHRWdTR1ZoYkhSb2FXVnlJRWRsYm1WeVlYUnBiMjV6SUdseklIZHZjbXRwYm1jZ2QybDBhQ0JZSUhOamFHOXZiSE1nYVc0Z2RHaHBjeUJ6ZEdGMFpTQjBieUJqY21WaGRHVWdhR1ZoYkhSb2FXVnlJR1Z1ZG1seWIyNXRaVzUwY3lCbWIzSWdjM1IxWkdWdWRITWdZVzVrSUhSbFlXTm9aWEp6TGlCUGRtVnlZV3hzTENCSVpXRnNkR2hsY2lCSFpXNWxjbUYwYVc5dUlITjFjSEJ2Y25SeklHMXZjbVVnZEdoaGJpQXpPU3d3TURBZ2MyTm9iMjlzY3lCcGJpQjBhR1VnU0dWaGJIUm9lU0JUWTJodmIyeHpJRkJ5YjJkeVlXMHNJSGRvYVdOb0lHaGxiSEJ6SUdKMWFXeGtJR2hsWVd4MGFHbGxjaUJzWldGeWJtbHVaeUJsYm5acGNtOXViV1Z1ZEhNZ1ptOXlJSE4wZFdSbGJuUnpJR0Z1WkNCemRHRm1aaUJpZVNCd2NtOTJhV1JwYm1jZ1puSmxaU0J5WlhOdmRYSmpaWE1nWVc1a0lIUmxZMmh1YVdOaGJDQmhjM05wYzNSaGJtTmxMand2Y0Q0PSIgd2lkdGg9IjUwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjMwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgICAgICBwb3B1cF83MjgxZGU1NzY5MWU0MTgzOTE5YjRjMTkzNzcwMjRhMC5zZXRDb250ZW50KGlfZnJhbWVfOTY0YWE3M2JjNGQ0NDFhMjhmNDc4ZDJlOTQ2NDc4M2QpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIG1hcmtlcl9jYjAxMTIwZjFkMTE0N2VjOTM2NmU5MjkzNWQ0MzdjZS5iaW5kUG9wdXAocG9wdXBfNzI4MWRlNTc2OTFlNDE4MzkxOWI0YzE5Mzc3MDI0YTApCiAgICAgICAgICAgIDsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgdmFyIG1hcmtlcl8yZmE4OWU4YjVmODQ0NzIzYWVkMThlNWZlNDlhYzQxZiA9IEwubWFya2VyKAogICAgICAgICAgICBbNDEuODIzOTg5LCAtNzEuNDEyODM0XSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWNvbjogbmV3IEwuSWNvbi5EZWZhdWx0KCksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkuYWRkVG8obWFya2VyX2NsdXN0ZXJfNDdkNDQ3NmQyZGE5NDhmNzkwOWNhODdmOTU2ZjgxOWMpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF84ZmRjYzZlYzk2ODI0MjhkOGE5NTU5ODg2MmU1OGUyYyA9IEwucG9wdXAoe21heFdpZHRoOiAnMjY1MCcKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaV9mcmFtZV8wNjQ3MDlmMWZiN2E0ZmFmODgxMWE0ZDlmZGQ4MzQwOSA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBOGFERStTVzF3Y205MmFXNW5JRkIxWW14cFl5QklaV0ZzZEdnOEwyZ3hQanhpY2o0OGNENDhjM1J5YjI1blBrRklSend2YzNSeWIyNW5Qand2Y0Q0OGNENDhZajVUZFhCd2IzSjBhVzVuSUdGdVpDQkRaV3hsWW5KaGRHbHVaeUJCYldWeWFXTmg0b0NaY3lCSVpXRnNkR2hwWlhOMElGTmphRzl2YkhNOEwySStQQzl3UGp4d1BpQlVhR1VnUVd4c2FXRnVZMlVnWm05eUlHRWdTR1ZoYkhSb2FXVnlJRWRsYm1WeVlYUnBiMjV6SUdseklIZHZjbXRwYm1jZ2QybDBhQ0JZSUhOamFHOXZiSE1nYVc0Z2RHaHBjeUJ6ZEdGMFpTQjBieUJqY21WaGRHVWdhR1ZoYkhSb2FXVnlJR1Z1ZG1seWIyNXRaVzUwY3lCbWIzSWdjM1IxWkdWdWRITWdZVzVrSUhSbFlXTm9aWEp6TGlCUGRtVnlZV3hzTENCSVpXRnNkR2hsY2lCSFpXNWxjbUYwYVc5dUlITjFjSEJ2Y25SeklHMXZjbVVnZEdoaGJpQXpPU3d3TURBZ2MyTm9iMjlzY3lCcGJpQjBhR1VnU0dWaGJIUm9lU0JUWTJodmIyeHpJRkJ5YjJkeVlXMHNJSGRvYVdOb0lHaGxiSEJ6SUdKMWFXeGtJR2hsWVd4MGFHbGxjaUJzWldGeWJtbHVaeUJsYm5acGNtOXViV1Z1ZEhNZ1ptOXlJSE4wZFdSbGJuUnpJR0Z1WkNCemRHRm1aaUJpZVNCd2NtOTJhV1JwYm1jZ1puSmxaU0J5WlhOdmRYSmpaWE1nWVc1a0lIUmxZMmh1YVdOaGJDQmhjM05wYzNSaGJtTmxMand2Y0Q0PSIgd2lkdGg9IjUwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjMwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgICAgICBwb3B1cF84ZmRjYzZlYzk2ODI0MjhkOGE5NTU5ODg2MmU1OGUyYy5zZXRDb250ZW50KGlfZnJhbWVfMDY0NzA5ZjFmYjdhNGZhZjg4MTFhNGQ5ZmRkODM0MDkpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIG1hcmtlcl8yZmE4OWU4YjVmODQ0NzIzYWVkMThlNWZlNDlhYzQxZi5iaW5kUG9wdXAocG9wdXBfOGZkY2M2ZWM5NjgyNDI4ZDhhOTU1OTg4NjJlNThlMmMpCiAgICAgICAgICAgIDsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgdmFyIG1hcmtlcl84MGZhMDRkMzc3NjM0MDYyOGFiMDNjYjFmOWVkODA1ZCA9IEwubWFya2VyKAogICAgICAgICAgICBbMzQuMDAwNzEsIC04MS4wMzQ4MTRdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2Y5OWYyNmUyNmJhMzQwMzk5N2I0ZWQ4MmY3ZjliOGZlID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lXzEwNGIzY2Q5ODliMTQ1MTc4NWE0YmJkYWRlYThkNjU2ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtGSVJ6d3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNVRkWEJ3YjNKMGFXNW5JR0Z1WkNCRFpXeGxZbkpoZEdsdVp5QkJiV1Z5YVdOaDRvQ1pjeUJJWldGc2RHaHBaWE4wSUZOamFHOXZiSE04TDJJK1BDOXdQanh3UGlCVWFHVWdRV3hzYVdGdVkyVWdabTl5SUdFZ1NHVmhiSFJvYVdWeUlFZGxibVZ5WVhScGIyNXpJR2x6SUhkdmNtdHBibWNnZDJsMGFDQllJSE5qYUc5dmJITWdhVzRnZEdocGN5QnpkR0YwWlNCMGJ5QmpjbVZoZEdVZ2FHVmhiSFJvYVdWeUlHVnVkbWx5YjI1dFpXNTBjeUJtYjNJZ2MzUjFaR1Z1ZEhNZ1lXNWtJSFJsWVdOb1pYSnpMaUJQZG1WeVlXeHNMQ0JJWldGc2RHaGxjaUJIWlc1bGNtRjBhVzl1SUhOMWNIQnZjblJ6SUcxdmNtVWdkR2hoYmlBek9Td3dNREFnYzJOb2IyOXNjeUJwYmlCMGFHVWdTR1ZoYkhSb2VTQlRZMmh2YjJ4eklGQnliMmR5WVcwc0lIZG9hV05vSUdobGJIQnpJR0oxYVd4a0lHaGxZV3gwYUdsbGNpQnNaV0Z5Ym1sdVp5QmxiblpwY205dWJXVnVkSE1nWm05eUlITjBkV1JsYm5SeklHRnVaQ0J6ZEdGbVppQmllU0J3Y205MmFXUnBibWNnWm5KbFpTQnlaWE52ZFhKalpYTWdZVzVrSUhSbFkyaHVhV05oYkNCaGMzTnBjM1JoYm1ObExqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2Y5OWYyNmUyNmJhMzQwMzk5N2I0ZWQ4MmY3ZjliOGZlLnNldENvbnRlbnQoaV9mcmFtZV8xMDRiM2NkOTg5YjE0NTE3ODVhNGJiZGFkZWE4ZDY1Nik7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyXzgwZmEwNGQzNzc2MzQwNjI4YWIwM2NiMWY5ZWQ4MDVkLmJpbmRQb3B1cChwb3B1cF9mOTlmMjZlMjZiYTM0MDM5OTdiNGVkODJmN2Y5YjhmZSkKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyXzNlOTVlNWE0YTVlYzQ0YzA5MTU0NDk1N2Y4Y2M1Y2M4ID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFs0NC4zNjgzMTYsIC0xMDAuMzUwOTY2XSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWNvbjogbmV3IEwuSWNvbi5EZWZhdWx0KCksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkuYWRkVG8obWFya2VyX2NsdXN0ZXJfNDdkNDQ3NmQyZGE5NDhmNzkwOWNhODdmOTU2ZjgxOWMpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF8zZThlYTUxZjRiYjQ0NTk3OWE1NmU5NDMyZGNmMTZlMiA9IEwucG9wdXAoe21heFdpZHRoOiAnMjY1MCcKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaV9mcmFtZV8xY2JmOWYyOTgwMWQ0MGZkOTJjNTViYmI5N2NkZjk0NiA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBOGFERStTVzF3Y205MmFXNW5JRkIxWW14cFl5QklaV0ZzZEdnOEwyZ3hQanhpY2o0OGNENDhjM1J5YjI1blBrRklSend2YzNSeWIyNW5Qand2Y0Q0OGNENDhZajVUZFhCd2IzSjBhVzVuSUdGdVpDQkRaV3hsWW5KaGRHbHVaeUJCYldWeWFXTmg0b0NaY3lCSVpXRnNkR2hwWlhOMElGTmphRzl2YkhNOEwySStQQzl3UGp4d1BpQlVhR1VnUVd4c2FXRnVZMlVnWm05eUlHRWdTR1ZoYkhSb2FXVnlJRWRsYm1WeVlYUnBiMjV6SUdseklIZHZjbXRwYm1jZ2QybDBhQ0JZSUhOamFHOXZiSE1nYVc0Z2RHaHBjeUJ6ZEdGMFpTQjBieUJqY21WaGRHVWdhR1ZoYkhSb2FXVnlJR1Z1ZG1seWIyNXRaVzUwY3lCbWIzSWdjM1IxWkdWdWRITWdZVzVrSUhSbFlXTm9aWEp6TGlCUGRtVnlZV3hzTENCSVpXRnNkR2hsY2lCSFpXNWxjbUYwYVc5dUlITjFjSEJ2Y25SeklHMXZjbVVnZEdoaGJpQXpPU3d3TURBZ2MyTm9iMjlzY3lCcGJpQjBhR1VnU0dWaGJIUm9lU0JUWTJodmIyeHpJRkJ5YjJkeVlXMHNJSGRvYVdOb0lHaGxiSEJ6SUdKMWFXeGtJR2hsWVd4MGFHbGxjaUJzWldGeWJtbHVaeUJsYm5acGNtOXViV1Z1ZEhNZ1ptOXlJSE4wZFdSbGJuUnpJR0Z1WkNCemRHRm1aaUJpZVNCd2NtOTJhV1JwYm1jZ1puSmxaU0J5WlhOdmRYSmpaWE1nWVc1a0lIUmxZMmh1YVdOaGJDQmhjM05wYzNSaGJtTmxMand2Y0Q0PSIgd2lkdGg9IjUwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjMwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgICAgICBwb3B1cF8zZThlYTUxZjRiYjQ0NTk3OWE1NmU5NDMyZGNmMTZlMi5zZXRDb250ZW50KGlfZnJhbWVfMWNiZjlmMjk4MDFkNDBmZDkyYzU1YmJiOTdjZGY5NDYpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIG1hcmtlcl8zZTk1ZTVhNGE1ZWM0NGMwOTE1NDQ5NTdmOGNjNWNjOC5iaW5kUG9wdXAocG9wdXBfM2U4ZWE1MWY0YmI0NDU5NzlhNTZlOTQzMmRjZjE2ZTIpCiAgICAgICAgICAgIDsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgdmFyIG1hcmtlcl9hMDgxZWIwNDg1ZjM0ZWEwYmJmNTZhM2E5NjZjZjY2NiA9IEwubWFya2VyKAogICAgICAgICAgICBbMzYuMTYyNjY0LCAtODYuNzgxNjAyXSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWNvbjogbmV3IEwuSWNvbi5EZWZhdWx0KCksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkuYWRkVG8obWFya2VyX2NsdXN0ZXJfNDdkNDQ3NmQyZGE5NDhmNzkwOWNhODdmOTU2ZjgxOWMpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9jMzQ3NjRjZWUwNWM0YTBhYWRiMTM1MGJiYjgxNzRmZSA9IEwucG9wdXAoe21heFdpZHRoOiAnMjY1MCcKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaV9mcmFtZV8wZDI0YmM4MWQ5MGQ0ZDc0OTE4MTAzNzAxNTc5YjZkOCA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBOGFERStTVzF3Y205MmFXNW5JRkIxWW14cFl5QklaV0ZzZEdnOEwyZ3hQanhpY2o0OGNENDhjM1J5YjI1blBrRklSend2YzNSeWIyNW5Qand2Y0Q0OGNENDhZajVUZFhCd2IzSjBhVzVuSUdGdVpDQkRaV3hsWW5KaGRHbHVaeUJCYldWeWFXTmg0b0NaY3lCSVpXRnNkR2hwWlhOMElGTmphRzl2YkhNOEwySStQQzl3UGp4d1BpQlVhR1VnUVd4c2FXRnVZMlVnWm05eUlHRWdTR1ZoYkhSb2FXVnlJRWRsYm1WeVlYUnBiMjV6SUdseklIZHZjbXRwYm1jZ2QybDBhQ0JZSUhOamFHOXZiSE1nYVc0Z2RHaHBjeUJ6ZEdGMFpTQjBieUJqY21WaGRHVWdhR1ZoYkhSb2FXVnlJR1Z1ZG1seWIyNXRaVzUwY3lCbWIzSWdjM1IxWkdWdWRITWdZVzVrSUhSbFlXTm9aWEp6TGlCUGRtVnlZV3hzTENCSVpXRnNkR2hsY2lCSFpXNWxjbUYwYVc5dUlITjFjSEJ2Y25SeklHMXZjbVVnZEdoaGJpQXpPU3d3TURBZ2MyTm9iMjlzY3lCcGJpQjBhR1VnU0dWaGJIUm9lU0JUWTJodmIyeHpJRkJ5YjJkeVlXMHNJSGRvYVdOb0lHaGxiSEJ6SUdKMWFXeGtJR2hsWVd4MGFHbGxjaUJzWldGeWJtbHVaeUJsYm5acGNtOXViV1Z1ZEhNZ1ptOXlJSE4wZFdSbGJuUnpJR0Z1WkNCemRHRm1aaUJpZVNCd2NtOTJhV1JwYm1jZ1puSmxaU0J5WlhOdmRYSmpaWE1nWVc1a0lIUmxZMmh1YVdOaGJDQmhjM05wYzNSaGJtTmxMand2Y0Q0PSIgd2lkdGg9IjUwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjMwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9jMzQ3NjRjZWUwNWM0YTBhYWRiMTM1MGJiYjgxNzRmZS5zZXRDb250ZW50KGlfZnJhbWVfMGQyNGJjODFkOTBkNGQ3NDkxODEwMzcwMTU3OWI2ZDgpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIG1hcmtlcl9hMDgxZWIwNDg1ZjM0ZWEwYmJmNTZhM2E5NjZjZjY2Ni5iaW5kUG9wdXAocG9wdXBfYzM0NzY0Y2VlMDVjNGEwYWFkYjEzNTBiYmI4MTc0ZmUpCiAgICAgICAgICAgIDsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgdmFyIG1hcmtlcl83ZDE0ZTQ1ZmMwODk0ZjdlYjI1MTE1OGZiY2U5ZTBkMyA9IEwubWFya2VyKAogICAgICAgICAgICBbMzAuMjY3MTUzLCAtOTcuNzQzMDYxXSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWNvbjogbmV3IEwuSWNvbi5EZWZhdWx0KCksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkuYWRkVG8obWFya2VyX2NsdXN0ZXJfNDdkNDQ3NmQyZGE5NDhmNzkwOWNhODdmOTU2ZjgxOWMpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9iMWMwNzZhN2YxZTc0Y2RlYjdkZjY5NzQyNzMxMzYzNSA9IEwucG9wdXAoe21heFdpZHRoOiAnMjY1MCcKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaV9mcmFtZV9mOTc4NTUwOTZiNzc0N2Q4YTYxZTZjMjEwYjM1ZTljMCA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBOGFERStTVzF3Y205MmFXNW5JRkIxWW14cFl5QklaV0ZzZEdnOEwyZ3hQanhpY2o0OGNENDhjM1J5YjI1blBrRklSend2YzNSeWIyNW5Qand2Y0Q0OGNENDhZajVUZFhCd2IzSjBhVzVuSUdGdVpDQkRaV3hsWW5KaGRHbHVaeUJCYldWeWFXTmg0b0NaY3lCSVpXRnNkR2hwWlhOMElGTmphRzl2YkhNOEwySStQQzl3UGp4d1BpQlVhR1VnUVd4c2FXRnVZMlVnWm05eUlHRWdTR1ZoYkhSb2FXVnlJRWRsYm1WeVlYUnBiMjV6SUdseklIZHZjbXRwYm1jZ2QybDBhQ0JZSUhOamFHOXZiSE1nYVc0Z2RHaHBjeUJ6ZEdGMFpTQjBieUJqY21WaGRHVWdhR1ZoYkhSb2FXVnlJR1Z1ZG1seWIyNXRaVzUwY3lCbWIzSWdjM1IxWkdWdWRITWdZVzVrSUhSbFlXTm9aWEp6TGlCUGRtVnlZV3hzTENCSVpXRnNkR2hsY2lCSFpXNWxjbUYwYVc5dUlITjFjSEJ2Y25SeklHMXZjbVVnZEdoaGJpQXpPU3d3TURBZ2MyTm9iMjlzY3lCcGJpQjBhR1VnU0dWaGJIUm9lU0JUWTJodmIyeHpJRkJ5YjJkeVlXMHNJSGRvYVdOb0lHaGxiSEJ6SUdKMWFXeGtJR2hsWVd4MGFHbGxjaUJzWldGeWJtbHVaeUJsYm5acGNtOXViV1Z1ZEhNZ1ptOXlJSE4wZFdSbGJuUnpJR0Z1WkNCemRHRm1aaUJpZVNCd2NtOTJhV1JwYm1jZ1puSmxaU0J5WlhOdmRYSmpaWE1nWVc1a0lIUmxZMmh1YVdOaGJDQmhjM05wYzNSaGJtTmxMand2Y0Q0PSIgd2lkdGg9IjUwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjMwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9iMWMwNzZhN2YxZTc0Y2RlYjdkZjY5NzQyNzMxMzYzNS5zZXRDb250ZW50KGlfZnJhbWVfZjk3ODU1MDk2Yjc3NDdkOGE2MWU2YzIxMGIzNWU5YzApOwogICAgICAgICAgICAKCiAgICAgICAgICAgIG1hcmtlcl83ZDE0ZTQ1ZmMwODk0ZjdlYjI1MTE1OGZiY2U5ZTBkMy5iaW5kUG9wdXAocG9wdXBfYjFjMDc2YTdmMWU3NGNkZWI3ZGY2OTc0MjczMTM2MzUpCiAgICAgICAgICAgIDsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgdmFyIG1hcmtlcl81NDM4MDFmMWFjOWE0Y2JhYjFhZGQxZWUxNDE4M2Q2OCA9IEwubWFya2VyKAogICAgICAgICAgICBbNDAuNzYwNzc5LCAtMTExLjg5MTA0N10sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfZjgyMjQ2MjAyMmI1NGU2ZjllNzgyM2MxYTY0NzZiYWMgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfMGU0Nzg3MmVkYTlhNDcwODhhODUxZjc1NGNiM2MwOWIgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1cxd2NtOTJhVzVuSUZCMVlteHBZeUJJWldGc2RHZzhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa0ZJUnp3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1VGRYQndiM0owYVc1bklHRnVaQ0JEWld4bFluSmhkR2x1WnlCQmJXVnlhV05oNG9DWmN5QklaV0ZzZEdocFpYTjBJRk5qYUc5dmJITThMMkkrUEM5d1BqeHdQaUJVYUdVZ1FXeHNhV0Z1WTJVZ1ptOXlJR0VnU0dWaGJIUm9hV1Z5SUVkbGJtVnlZWFJwYjI1eklHbHpJSGR2Y210cGJtY2dkMmwwYUNCWUlITmphRzl2YkhNZ2FXNGdkR2hwY3lCemRHRjBaU0IwYnlCamNtVmhkR1VnYUdWaGJIUm9hV1Z5SUdWdWRtbHliMjV0Wlc1MGN5Qm1iM0lnYzNSMVpHVnVkSE1nWVc1a0lIUmxZV05vWlhKekxpQlBkbVZ5WVd4c0xDQklaV0ZzZEdobGNpQkhaVzVsY21GMGFXOXVJSE4xY0hCdmNuUnpJRzF2Y21VZ2RHaGhiaUF6T1N3d01EQWdjMk5vYjI5c2N5QnBiaUIwYUdVZ1NHVmhiSFJvZVNCVFkyaHZiMnh6SUZCeWIyZHlZVzBzSUhkb2FXTm9JR2hsYkhCeklHSjFhV3hrSUdobFlXeDBhR2xsY2lCc1pXRnlibWx1WnlCbGJuWnBjbTl1YldWdWRITWdabTl5SUhOMGRXUmxiblJ6SUdGdVpDQnpkR0ZtWmlCaWVTQndjbTkyYVdScGJtY2dabkpsWlNCeVpYTnZkWEpqWlhNZ1lXNWtJSFJsWTJodWFXTmhiQ0JoYzNOcGMzUmhibU5sTGp3dmNEND0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfZjgyMjQ2MjAyMmI1NGU2ZjllNzgyM2MxYTY0NzZiYWMuc2V0Q29udGVudChpX2ZyYW1lXzBlNDc4NzJlZGE5YTQ3MDg4YTg1MWY3NTRjYjNjMDliKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfNTQzODAxZjFhYzlhNGNiYWIxYWRkMWVlMTQxODNkNjguYmluZFBvcHVwKHBvcHVwX2Y4MjI0NjIwMjJiNTRlNmY5ZTc4MjNjMWE2NDc2YmFjKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfZmM1ODMyMDk2YWYxNDVhNGJjNWNhMDhiODg1ZDM0NTkgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzM3LjU0MDcyNSwgLTc3LjQzNjA0OF0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfMWNkZjhkOGEzYzQ4NGQ0ZTliZTdkYWI2YjQwZGQ2YmEgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfOWQ5ZTM2MzA1MGRlNDRhZWFkMjA3MjMyMjUxNDcyMjAgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1cxd2NtOTJhVzVuSUZCMVlteHBZeUJJWldGc2RHZzhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa0ZJUnp3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1VGRYQndiM0owYVc1bklHRnVaQ0JEWld4bFluSmhkR2x1WnlCQmJXVnlhV05oNG9DWmN5QklaV0ZzZEdocFpYTjBJRk5qYUc5dmJITThMMkkrUEM5d1BqeHdQaUJVYUdVZ1FXeHNhV0Z1WTJVZ1ptOXlJR0VnU0dWaGJIUm9hV1Z5SUVkbGJtVnlZWFJwYjI1eklHbHpJSGR2Y210cGJtY2dkMmwwYUNCWUlITmphRzl2YkhNZ2FXNGdkR2hwY3lCemRHRjBaU0IwYnlCamNtVmhkR1VnYUdWaGJIUm9hV1Z5SUdWdWRtbHliMjV0Wlc1MGN5Qm1iM0lnYzNSMVpHVnVkSE1nWVc1a0lIUmxZV05vWlhKekxpQlBkbVZ5WVd4c0xDQklaV0ZzZEdobGNpQkhaVzVsY21GMGFXOXVJSE4xY0hCdmNuUnpJRzF2Y21VZ2RHaGhiaUF6T1N3d01EQWdjMk5vYjI5c2N5QnBiaUIwYUdVZ1NHVmhiSFJvZVNCVFkyaHZiMnh6SUZCeWIyZHlZVzBzSUhkb2FXTm9JR2hsYkhCeklHSjFhV3hrSUdobFlXeDBhR2xsY2lCc1pXRnlibWx1WnlCbGJuWnBjbTl1YldWdWRITWdabTl5SUhOMGRXUmxiblJ6SUdGdVpDQnpkR0ZtWmlCaWVTQndjbTkyYVdScGJtY2dabkpsWlNCeVpYTnZkWEpqWlhNZ1lXNWtJSFJsWTJodWFXTmhiQ0JoYzNOcGMzUmhibU5sTGp3dmNEND0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfMWNkZjhkOGEzYzQ4NGQ0ZTliZTdkYWI2YjQwZGQ2YmEuc2V0Q29udGVudChpX2ZyYW1lXzlkOWUzNjMwNTBkZTQ0YWVhZDIwNzIzMjI1MTQ3MjIwKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfZmM1ODMyMDk2YWYxNDVhNGJjNWNhMDhiODg1ZDM0NTkuYmluZFBvcHVwKHBvcHVwXzFjZGY4ZDhhM2M0ODRkNGU5YmU3ZGFiNmI0MGRkNmJhKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfNzdkNjZmYmNkMzhhNDVmY2IxMTU3YmIzMDcxMmEyNzUgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzQ0LjI2MDA1OSwgLTcyLjU3NTM4N10sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfZTJhYjE2ZThkMzAzNDZlOThhNjQwNWY2ZGViOWJhZjkgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfYzVjMDYxMGUwMWVhNGZjYmFkZDdkZGFmODdhMjI0MjIgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1cxd2NtOTJhVzVuSUZCMVlteHBZeUJJWldGc2RHZzhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa0ZJUnp3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1VGRYQndiM0owYVc1bklHRnVaQ0JEWld4bFluSmhkR2x1WnlCQmJXVnlhV05oNG9DWmN5QklaV0ZzZEdocFpYTjBJRk5qYUc5dmJITThMMkkrUEM5d1BqeHdQaUJVYUdVZ1FXeHNhV0Z1WTJVZ1ptOXlJR0VnU0dWaGJIUm9hV1Z5SUVkbGJtVnlZWFJwYjI1eklHbHpJSGR2Y210cGJtY2dkMmwwYUNCWUlITmphRzl2YkhNZ2FXNGdkR2hwY3lCemRHRjBaU0IwYnlCamNtVmhkR1VnYUdWaGJIUm9hV1Z5SUdWdWRtbHliMjV0Wlc1MGN5Qm1iM0lnYzNSMVpHVnVkSE1nWVc1a0lIUmxZV05vWlhKekxpQlBkbVZ5WVd4c0xDQklaV0ZzZEdobGNpQkhaVzVsY21GMGFXOXVJSE4xY0hCdmNuUnpJRzF2Y21VZ2RHaGhiaUF6T1N3d01EQWdjMk5vYjI5c2N5QnBiaUIwYUdVZ1NHVmhiSFJvZVNCVFkyaHZiMnh6SUZCeWIyZHlZVzBzSUhkb2FXTm9JR2hsYkhCeklHSjFhV3hrSUdobFlXeDBhR2xsY2lCc1pXRnlibWx1WnlCbGJuWnBjbTl1YldWdWRITWdabTl5SUhOMGRXUmxiblJ6SUdGdVpDQnpkR0ZtWmlCaWVTQndjbTkyYVdScGJtY2dabkpsWlNCeVpYTnZkWEpqWlhNZ1lXNWtJSFJsWTJodWFXTmhiQ0JoYzNOcGMzUmhibU5sTGp3dmNEND0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfZTJhYjE2ZThkMzAzNDZlOThhNjQwNWY2ZGViOWJhZjkuc2V0Q29udGVudChpX2ZyYW1lX2M1YzA2MTBlMDFlYTRmY2JhZGQ3ZGRhZjg3YTIyNDIyKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfNzdkNjZmYmNkMzhhNDVmY2IxMTU3YmIzMDcxMmEyNzUuYmluZFBvcHVwKHBvcHVwX2UyYWIxNmU4ZDMwMzQ2ZTk4YTY0MDVmNmRlYjliYWY5KQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfM2U4ZjY0NjY0N2NlNGJlZWIxYmE3ZmMwZThmODM3M2UgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzQ3LjAzNzg3NCwgLTEyMi45MDA2OTVdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2JkMzY4N2QwMDk0MzQyYzU4NWU1NDg3MDVhMWFmMTU2ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lXzhiZTM1M2FlYTFkZDRlN2FhYTJlMDIyOTRhZjA0ZGZmID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtGSVJ6d3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNVRkWEJ3YjNKMGFXNW5JR0Z1WkNCRFpXeGxZbkpoZEdsdVp5QkJiV1Z5YVdOaDRvQ1pjeUJJWldGc2RHaHBaWE4wSUZOamFHOXZiSE04TDJJK1BDOXdQanh3UGlCVWFHVWdRV3hzYVdGdVkyVWdabTl5SUdFZ1NHVmhiSFJvYVdWeUlFZGxibVZ5WVhScGIyNXpJR2x6SUhkdmNtdHBibWNnZDJsMGFDQllJSE5qYUc5dmJITWdhVzRnZEdocGN5QnpkR0YwWlNCMGJ5QmpjbVZoZEdVZ2FHVmhiSFJvYVdWeUlHVnVkbWx5YjI1dFpXNTBjeUJtYjNJZ2MzUjFaR1Z1ZEhNZ1lXNWtJSFJsWVdOb1pYSnpMaUJQZG1WeVlXeHNMQ0JJWldGc2RHaGxjaUJIWlc1bGNtRjBhVzl1SUhOMWNIQnZjblJ6SUcxdmNtVWdkR2hoYmlBek9Td3dNREFnYzJOb2IyOXNjeUJwYmlCMGFHVWdTR1ZoYkhSb2VTQlRZMmh2YjJ4eklGQnliMmR5WVcwc0lIZG9hV05vSUdobGJIQnpJR0oxYVd4a0lHaGxZV3gwYUdsbGNpQnNaV0Z5Ym1sdVp5QmxiblpwY205dWJXVnVkSE1nWm05eUlITjBkV1JsYm5SeklHRnVaQ0J6ZEdGbVppQmllU0J3Y205MmFXUnBibWNnWm5KbFpTQnlaWE52ZFhKalpYTWdZVzVrSUhSbFkyaHVhV05oYkNCaGMzTnBjM1JoYm1ObExqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2JkMzY4N2QwMDk0MzQyYzU4NWU1NDg3MDVhMWFmMTU2LnNldENvbnRlbnQoaV9mcmFtZV84YmUzNTNhZWExZGQ0ZTdhYWEyZTAyMjk0YWYwNGRmZik7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyXzNlOGY2NDY2NDdjZTRiZWViMWJhN2ZjMGU4ZjgzNzNlLmJpbmRQb3B1cChwb3B1cF9iZDM2ODdkMDA5NDM0MmM1ODVlNTQ4NzA1YTFhZjE1NikKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyXzRlZDYwMDUwODZkYTQxNmY5NjNjMzRiY2M2NWU4NDA4ID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFs0My4wNzMwNTIsIC04OS40MDEyM10sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfOTM0Mjg4ZmY3NzllNDE5OGJjYmE0YzFlZWNkNWZjNjcgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfZjlhZjE2OWYyM2JjNGJiOWIwNDVlNzYxOTBlMWNlMzEgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1cxd2NtOTJhVzVuSUZCMVlteHBZeUJJWldGc2RHZzhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa0ZJUnp3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1VGRYQndiM0owYVc1bklHRnVaQ0JEWld4bFluSmhkR2x1WnlCQmJXVnlhV05oNG9DWmN5QklaV0ZzZEdocFpYTjBJRk5qYUc5dmJITThMMkkrUEM5d1BqeHdQaUJVYUdVZ1FXeHNhV0Z1WTJVZ1ptOXlJR0VnU0dWaGJIUm9hV1Z5SUVkbGJtVnlZWFJwYjI1eklHbHpJSGR2Y210cGJtY2dkMmwwYUNCWUlITmphRzl2YkhNZ2FXNGdkR2hwY3lCemRHRjBaU0IwYnlCamNtVmhkR1VnYUdWaGJIUm9hV1Z5SUdWdWRtbHliMjV0Wlc1MGN5Qm1iM0lnYzNSMVpHVnVkSE1nWVc1a0lIUmxZV05vWlhKekxpQlBkbVZ5WVd4c0xDQklaV0ZzZEdobGNpQkhaVzVsY21GMGFXOXVJSE4xY0hCdmNuUnpJRzF2Y21VZ2RHaGhiaUF6T1N3d01EQWdjMk5vYjI5c2N5QnBiaUIwYUdVZ1NHVmhiSFJvZVNCVFkyaHZiMnh6SUZCeWIyZHlZVzBzSUhkb2FXTm9JR2hsYkhCeklHSjFhV3hrSUdobFlXeDBhR2xsY2lCc1pXRnlibWx1WnlCbGJuWnBjbTl1YldWdWRITWdabTl5SUhOMGRXUmxiblJ6SUdGdVpDQnpkR0ZtWmlCaWVTQndjbTkyYVdScGJtY2dabkpsWlNCeVpYTnZkWEpqWlhNZ1lXNWtJSFJsWTJodWFXTmhiQ0JoYzNOcGMzUmhibU5sTGp3dmNEND0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfOTM0Mjg4ZmY3NzllNDE5OGJjYmE0YzFlZWNkNWZjNjcuc2V0Q29udGVudChpX2ZyYW1lX2Y5YWYxNjlmMjNiYzRiYjliMDQ1ZTc2MTkwZTFjZTMxKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfNGVkNjAwNTA4NmRhNDE2Zjk2M2MzNGJjYzY1ZTg0MDguYmluZFBvcHVwKHBvcHVwXzkzNDI4OGZmNzc5ZTQxOThiY2JhNGMxZWVjZDVmYzY3KQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfOTk5NmRlZjQzY2M5NGY3YmE4M2I3MWY4YjA4YjVmNjEgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzMyLjc3NjQ3NSwgLTc5LjkzMTA1MV0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfOGI5YmUxZjk1Nzg1NDY1OTg4NDcyOTVkMjFmMDBjZDYgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfZTQzZWEyODNhZTlmNDdjY2JmMjg5NTBkZjFjYzE4ODMgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1cxd2NtOTJhVzVuSUZCMVlteHBZeUJJWldGc2RHZzhMMmd4UGp4aWNqNDhjRDQ4YzNSeWIyNW5Qa0ZJUnp3dmMzUnliMjVuUGp3dmNENDhjRDQ4WWo1VGRYQndiM0owYVc1bklHRnVaQ0JEWld4bFluSmhkR2x1WnlCQmJXVnlhV05oNG9DWmN5QklaV0ZzZEdocFpYTjBJRk5qYUc5dmJITThMMkkrUEM5d1BqeHdQaUJVYUdVZ1FXeHNhV0Z1WTJVZ1ptOXlJR0VnU0dWaGJIUm9hV1Z5SUVkbGJtVnlZWFJwYjI1eklHbHpJSGR2Y210cGJtY2dkMmwwYUNCWUlITmphRzl2YkhNZ2FXNGdkR2hwY3lCemRHRjBaU0IwYnlCamNtVmhkR1VnYUdWaGJIUm9hV1Z5SUdWdWRtbHliMjV0Wlc1MGN5Qm1iM0lnYzNSMVpHVnVkSE1nWVc1a0lIUmxZV05vWlhKekxpQlBkbVZ5WVd4c0xDQklaV0ZzZEdobGNpQkhaVzVsY21GMGFXOXVJSE4xY0hCdmNuUnpJRzF2Y21VZ2RHaGhiaUF6T1N3d01EQWdjMk5vYjI5c2N5QnBiaUIwYUdVZ1NHVmhiSFJvZVNCVFkyaHZiMnh6SUZCeWIyZHlZVzBzSUhkb2FXTm9JR2hsYkhCeklHSjFhV3hrSUdobFlXeDBhR2xsY2lCc1pXRnlibWx1WnlCbGJuWnBjbTl1YldWdWRITWdabTl5SUhOMGRXUmxiblJ6SUdGdVpDQnpkR0ZtWmlCaWVTQndjbTkyYVdScGJtY2dabkpsWlNCeVpYTnZkWEpqWlhNZ1lXNWtJSFJsWTJodWFXTmhiQ0JoYzNOcGMzUmhibU5sTGp3dmNEND0iIHdpZHRoPSI1MDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIzMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfOGI5YmUxZjk1Nzg1NDY1OTg4NDcyOTVkMjFmMDBjZDYuc2V0Q29udGVudChpX2ZyYW1lX2U0M2VhMjgzYWU5ZjQ3Y2NiZjI4OTUwZGYxY2MxODgzKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBtYXJrZXJfOTk5NmRlZjQzY2M5NGY3YmE4M2I3MWY4YjA4YjVmNjEuYmluZFBvcHVwKHBvcHVwXzhiOWJlMWY5NTc4NTQ2NTk4ODQ3Mjk1ZDIxZjAwY2Q2KQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgIHZhciBtYXJrZXJfYTBkMWVmY2NlZmVlNDZkZmE3MjJiMjBmYTdhY2IyMzAgPSBMLm1hcmtlcigKICAgICAgICAgICAgWzQxLjEzOTk4MSwgLTEwNC44MjAyNDZdLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uOiBuZXcgTC5JY29uLkRlZmF1bHQoKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS5hZGRUbyhtYXJrZXJfY2x1c3Rlcl80N2Q0NDc2ZDJkYTk0OGY3OTA5Y2E4N2Y5NTZmODE5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2M5YjY3YzhhMWU0YjQxYjFiNWMwODMxNTZhN2YwZDk2ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcyNjUwJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBpX2ZyYW1lXzZmMWRkODhiYjU3MjRjYjJhZjJiOGVlYzRhNmI2MzJlID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0E4YURFK1NXMXdjbTkyYVc1bklGQjFZbXhwWXlCSVpXRnNkR2c4TDJneFBqeGljajQ4Y0Q0OGMzUnliMjVuUGtGSVJ6d3ZjM1J5YjI1blBqd3ZjRDQ4Y0Q0OFlqNVRkWEJ3YjNKMGFXNW5JR0Z1WkNCRFpXeGxZbkpoZEdsdVp5QkJiV1Z5YVdOaDRvQ1pjeUJJWldGc2RHaHBaWE4wSUZOamFHOXZiSE04TDJJK1BDOXdQanh3UGlCVWFHVWdRV3hzYVdGdVkyVWdabTl5SUdFZ1NHVmhiSFJvYVdWeUlFZGxibVZ5WVhScGIyNXpJR2x6SUhkdmNtdHBibWNnZDJsMGFDQllJSE5qYUc5dmJITWdhVzRnZEdocGN5QnpkR0YwWlNCMGJ5QmpjbVZoZEdVZ2FHVmhiSFJvYVdWeUlHVnVkbWx5YjI1dFpXNTBjeUJtYjNJZ2MzUjFaR1Z1ZEhNZ1lXNWtJSFJsWVdOb1pYSnpMaUJQZG1WeVlXeHNMQ0JJWldGc2RHaGxjaUJIWlc1bGNtRjBhVzl1SUhOMWNIQnZjblJ6SUcxdmNtVWdkR2hoYmlBek9Td3dNREFnYzJOb2IyOXNjeUJwYmlCMGFHVWdTR1ZoYkhSb2VTQlRZMmh2YjJ4eklGQnliMmR5WVcwc0lIZG9hV05vSUdobGJIQnpJR0oxYVd4a0lHaGxZV3gwYUdsbGNpQnNaV0Z5Ym1sdVp5QmxiblpwY205dWJXVnVkSE1nWm05eUlITjBkV1JsYm5SeklHRnVaQ0J6ZEdGbVppQmllU0J3Y205MmFXUnBibWNnWm5KbFpTQnlaWE52ZFhKalpYTWdZVzVrSUhSbFkyaHVhV05oYkNCaGMzTnBjM1JoYm1ObExqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2M5YjY3YzhhMWU0YjQxYjFiNWMwODMxNTZhN2YwZDk2LnNldENvbnRlbnQoaV9mcmFtZV82ZjFkZDg4YmI1NzI0Y2IyYWYyYjhlZWM0YTZiNjMyZSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyX2EwZDFlZmNjZWZlZTQ2ZGZhNzIyYjIwZmE3YWNiMjMwLmJpbmRQb3B1cChwb3B1cF9jOWI2N2M4YTFlNGI0MWIxYjVjMDgzMTU2YTdmMGQ5NikKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICB2YXIgbWFya2VyX2M3MjFmZThmYTYzZDQ4N2NhOWJhMjdjY2I5ZjNmODJkID0gTC5tYXJrZXIoCiAgICAgICAgICAgIFszNC43NDY0OCwgLTkyLjI4OTU5Nl0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGljb246IG5ldyBMLkljb24uRGVmYXVsdCgpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApLmFkZFRvKG1hcmtlcl9jbHVzdGVyXzQ3ZDQ0NzZkMmRhOTQ4Zjc5MDljYTg3Zjk1NmY4MTljKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfMjlmYWNmYjQ2YzBjNDY2NzliNzlkYTYxZDM2YzE2MGEgPSBMLnBvcHVwKHttYXhXaWR0aDogJzI2NTAnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGlfZnJhbWVfNmExMWFlNDkzOTFmNDQwNDhmNDMyNzk5MzliMjUwNjQgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQThhREUrU1c1emNHbHlhVzVuSUVOcGRtbGpJRVZ1WjJGblpXMWxiblFnSmlCVFpYSjJhV05sUEM5b01UNDhZbkkrUEhBK1BITjBjbTl1Wno1RFVFTThMM04wY205dVp6NDhMM0ErUEhBK1BHSStWMjl5YTJsdVp5QjBieUJwYm5Od2FYSmxJR0Z1WkNCbFpIVmpZWFJsSUdGMElIUm9aU0JEYkdsdWRHOXVJRkJ5WlhOcFpHVnVkR2xoYkNCRFpXNTBaWEk4TDJJK1BDOXdQanh3UGlCVWFHVWdRMnhwYm5SdmJpQlFjbVZ6YVdSbGJuUnBZV3dnUTJWdWRHVnlJR2hoY3lCM1pXeGpiMjFsWkNCdGIzSmxJSFJvWVc0Z05DNDBJRzFwYkd4cGIyNGdkbWx6YVhSdmNuTWdjMmx1WTJVZ2FYUWdabWx5YzNRZ2IzQmxibVZrSUdsdUlESXdNRFF1SUZacGMybDBiM0p6SUdoaGRtVWdaWGh3WlhKcFpXNWpaV1FnWVNCeVlXNW5aU0J2WmlCMWJtbHhkV1VnWlhob2FXSnBkSE1nWlhoaGJXbHVhVzVuSUhSb1pTQnBiWEJoWTNRZ2IyWWdSV3gyYVhNc0lFOXpZMkZ5SUdSbElHeGhJRkpsYm5SaExDQmhibVFnVG1Wc2MyOXVJRTFoYm1SbGJHRXVQQzl3UGc9PSIgd2lkdGg9IjUwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjMwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgICAgICBwb3B1cF8yOWZhY2ZiNDZjMGM0NjY3OWI3OWRhNjFkMzZjMTYwYS5zZXRDb250ZW50KGlfZnJhbWVfNmExMWFlNDkzOTFmNDQwNDhmNDMyNzk5MzliMjUwNjQpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIG1hcmtlcl9jNzIxZmU4ZmE2M2Q0ODdjYTliYTI3Y2NiOWYzZjgyZC5iaW5kUG9wdXAocG9wdXBfMjlmYWNmYjQ2YzBjNDY2NzliNzlkYTYxZDM2YzE2MGEpCiAgICAgICAgICAgIDsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgdmFyIG1hcmtlcl9jMmMzMDE1MWUzMjQ0MTk4Yjg0M2ZjMjhkZGQ2Y2IyMSA9IEwubWFya2VyKAogICAgICAgICAgICBbMzQuNzQ2NDgzLCAtOTIuMjg5NTk0XSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWNvbjogbmV3IEwuSWNvbi5EZWZhdWx0KCksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkuYWRkVG8obWFya2VyX2NsdXN0ZXJfNDdkNDQ3NmQyZGE5NDhmNzkwOWNhODdmOTU2ZjgxOWMpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF82MGNiYzQ5OGI1MTk0YjU2OTkyNGUxNDRmZjI3OGNkOSA9IEwucG9wdXAoe21heFdpZHRoOiAnMjY1MCcKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaV9mcmFtZV85ZjQ5NDMzNGNlODA0YWMyYmYwOGFjNTQwZjY4ZTk4MiA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBOGFERStTVzV6Y0dseWFXNW5JRU5wZG1saklFVnVaMkZuWlcxbGJuUWdKaUJUWlhKMmFXTmxQQzlvTVQ0OFluSStQSEErUEhOMGNtOXVaejVEVUVNOEwzTjBjbTl1Wno0OEwzQStQSEErUEdJK1UyaGhjbWx1WnlCMGFHVWdiR1Z6YzI5dWN5QnZaaUJzWldGa1pYSnphR2x3SUdaeWIyMGdabTkxY2lCd2NtVnphV1JsYm5ScFlXd2dZV1J0YVc1cGMzUnlZWFJwYjI1elBDOWlQand2Y0Q0OGNENGdWR2hsSUZCeVpYTnBaR1Z1ZEdsaGJDQk1aV0ZrWlhKemFHbHdJRk5qYUc5c1lYSnpJQ2hRVEZNcElIZGxiR052YldWa0lHbDBjeUIwYUdseVpDQmpiR0Z6Y3lCdlppQmthWE4wYVc1bmRXbHphR1ZrSUZOamFHOXNZWEp6WCtLQWxGOWhJR1JwZG1WeWMyVWdaM0p2ZFhBZ1lXTnliM056SUhCeWIyWmxjM05wYjI1ekxDQm5aVzluY21Gd2FHbGxjeXdnWVc1a0lHbGtaVzlzYjJkcFpYTWc0b0NUSUhSdklIQmhjblJwWTJsd1lYUmxJR2x1SUdFZ2MybDRMVzF2Ym5Sb0lIQnliMmR5WVcwZ2RHaGhkQ0J3Y205MmFXUmxjeUIxYm5CeVpXTmxaR1Z1ZEdWa0lHRmpZMlZ6Y3lCMGJ5Qm1iM0p0WlhJZ2NISmxjMmxrWlc1MGN5d2dkR2hsYVhJZ1lXUnRhVzVwYzNSeVlYUnBiMjV6SUc5bVptbGphV0ZzY3l3Z1lXNWtJSFJvWlNCMWJtbHhkV1VnY21WemIzVnlZMlZ6SUc5bUlIUm9aV2x5SUhCeVpYTnBaR1Z1ZEdsaGJDQmpaVzUwWlhKekxqd3ZjRDQ9IiB3aWR0aD0iNTAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMzAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzYwY2JjNDk4YjUxOTRiNTY5OTI0ZTE0NGZmMjc4Y2Q5LnNldENvbnRlbnQoaV9mcmFtZV85ZjQ5NDMzNGNlODA0YWMyYmYwOGFjNTQwZjY4ZTk4Mik7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgbWFya2VyX2MyYzMwMTUxZTMyNDQxOThiODQzZmMyOGRkZDZjYjIxLmJpbmRQb3B1cChwb3B1cF82MGNiYzQ5OGI1MTk0YjU2OTkyNGUxNDRmZjI3OGNkOSkKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCjwvc2NyaXB0Pg==\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x11f475908>"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd \n",
    "import branca\n",
    "import folium\n",
    "from folium.plugins import MarkerCluster\n",
    "\n",
    "m = folium.Map(location = [40.0150, -105.2705],zoom_start=6)\n",
    "mc = MarkerCluster().add_to(m)\n",
    "df = pd.read_csv(\"info.csv\")\n",
    "df[\"lat\"] = x\n",
    "df[\"long\"] = y\n",
    "df.columns = [c.lower().replace(' ', '_') for c in df.columns]\n",
    "y=[-74.005974,-66.1057,33.759819,30.104429,35.686073,146.585730,-75.479424,123.3833318,-89.1871800,55.45,-78.1332,-60.987469,-61.383333,-77.355415,-81.716650,-62.023730,-61.390049,-61.840130,-80.191788,-76.612190,-95.369804,-82.324829,-91.40317,-117.161087,-122.419418,-122.271111,-119.787125,-118.243683,-95.682510,-95.992775,-80.19,-92.289597,-76.147423,-93.265015,-83.045753,-74.005,-134.418498326,-86.299969,-92.289595,-112.074037,-121.494400,-104.990251,-72.685093,-75.524368,-84.280733,-84.387982,-157.858333,-93.624959,-116.202314,-89.650148,-86.158068,-95.675158,-84.873283,-91.140320,-71.058880,-76.492183,-82.010515,-84.555535,-93.089958,-92.173516,-90.184810,-112.024505,-78.638179,-100.783739,-96.685198,-122.031073,-74.742938,-105.937799,-119.767403,-73.756232,-82.998794,-97.516428,-70.896715,-76.886701,-71.412834,-81.034814,-100.350966,-86.781602,-97.743061,-111.891047,-77.436048,-72.575387,-122.900695,-89.401230,-79.931051,-104.820246,-92.289596,-92.289594]\n",
    "x=[40.712776,18.466299,-13.995720,-1.970579,-7.768059,-41.856750,10.391049,-10.4666648,13.6893500,-4.61667,18.21895,14.010109,12.65,25.047983,12.547930,45.779890,15.302880,17.118480,25.761681,39.290386,29.760427,29.651634,31.56044,32.715736,37.774929,37.804363,36.737797,34.052235,37.417824,36.153980,25.76,34.746483,43.048122,44.977753,42.331429,40.713,58.301165462,32.366805,34.746481,33.448377,38.581572,39.739236,41.763711,39.158168,30.438256,33.748995,21.306944,41.586835,43.615019,39.781721,39.768403,39.047345,38.200905,30.458283,42.360082,38.978445,33.473498,42.732535,44.953703,38.576702,32.298757,46.588371,35.779590,46.808327,40.825763,37.977978,40.217053,35.686975,39.163798,42.652579,39.961176,35.467560,42.519540,40.273191,41.823989,34.000710,44.368316,36.162664,30.267153,40.760779,37.540725,44.260059,47.037874,43.073052,32.776475,41.139981,34.74648,34.746483]\n",
    "\n",
    "for row in df.itertuples():\n",
    "    html = \"\"\n",
    "    html += \"\"\"<h1>\"\"\" + row.thematic_area + \"\"\"</h1><br>\"\"\" + \"\"\"<p><strong>\"\"\" + row.initiative + \"\"\"</strong></p>\"\"\" + \"\"\"<p><b>\"\"\" + row.name +\"\"\"</b></p>\"\"\" + \"\"\"<p> \"\"\"+ row.copy + \"\"\"</p>\"\"\" \n",
    "    iframe = branca.element.IFrame(html=html, width=500, height=300)\n",
    "    popup = folium.Popup(iframe, max_width=2650)\n",
    "    folium.Marker(location = [row.lat, row.long], popup = popup).add_to(mc)\n",
    "\n",
    "m.save(outfile= \"qlikmap.html\")    \n",
    "m"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
